<?php

// Data functions (insert, update, delete, form) for table vehicle_payments

// This script and data application were generated by AppGini 22.13
// Download AppGini for free from https://bigprof.com/appgini/download/

function vehicle_payments_insert(&$error_message = '') {
	global $Translation;

	// mm: can member insert record?
	$arrPerm = getTablePermissions('vehicle_payments');
	if(!$arrPerm['insert']) return false;

	$data = [
		'vehicle_registration_number' => Request::lookup('vehicle_registration_number', ''),
		'engine_number' => Request::lookup('vehicle_registration_number'),
		'chassis_number' => Request::lookup('vehicle_registration_number'),
		'make_of_vehicle' => Request::lookup('vehicle_registration_number'),
		'model_of_vehicle' => Request::lookup('vehicle_registration_number'),
		'year_model_of_vehicle' => Request::lookup('vehicle_registration_number'),
		'type_of_vehicle' => Request::lookup('vehicle_registration_number'),
		'application_status' => Request::lookup('vehicle_registration_number'),
		'barcode_number' => Request::lookup('vehicle_registration_number'),
		'purchase_price' => Request::val('purchase_price', ''),
		'depreciation_value' => Request::val('depreciation_value', ''),
		'closing_km' => Request::lookup('closing_km', ''),
		'department' => Request::lookup('vehicle_registration_number'),
		'acquisition_reference' => Request::val('acquisition_reference', ''),
		'date_of_acquisition' => Request::dateComponents('date_of_acquisition', ''),
		'odometer_at_acquisition' => Request::val('odometer_at_acquisition', ''),
		'merchant_name' => Request::lookup('merchant_name', ''),
		'value_at_acquisition' => Request::val('value_at_acquisition', ''),
		'term' => Request::val('term', ''),
		'month_end' => Request::dateComponents('month_end', ''),
		'installment_per_month' => Request::val('installment_per_month', ''),
		'payment_amount' => Request::val('payment_amount', ''),
		'payment_frequency' => Request::val('payment_frequency', ''),
		'interest_rate' => Request::val('interest_rate', ''),
		'payment_reference' => Request::val('payment_reference', ''),
		'paid_so_far' => Request::val('paid_so_far', ''),
		'remaining_balance' => Request::val('remaining_balance', ''),
		'depreciation_since_purchase' => Request::val('depreciation_since_purchase', ''),
		'actual_resale_value' => Request::val('actual_resale_value', ''),
		'warranty_expires_on' => Request::dateComponents('warranty_expires_on', ''),
		'comments' => Request::val('comments', ''),
		'documents' => Request::fileUpload('documents', [
			'maxSize' => 5242880,
			'types' => 'txt|doc|docx|docm|odt|pdf|rtf',
			'noRename' => false,
			'dir' => '',
			'success' => function($name, $selected_id) {
			},
			'failure' => function($selected_id, $fileRemoved) {
				if(!strlen(Request::val('SelectedID'))) return '';

				/* for empty upload fields, when saving a copy of an existing record, copy the original upload field */
				return existing_value('vehicle_payments', 'documents', Request::val('SelectedID'));
			},
		]),
	];


	// hook: vehicle_payments_before_insert
	if(function_exists('vehicle_payments_before_insert')) {
		$args = [];
		if(!vehicle_payments_before_insert($data, getMemberInfo(), $args)) {
			if(isset($args['error_message'])) $error_message = $args['error_message'];
			return false;
		}
	}

	$error = '';
	// set empty fields to NULL
	$data = array_map(function($v) { return ($v === '' ? NULL : $v); }, $data);
	insert('vehicle_payments', backtick_keys_once($data), $error);
	if($error) {
		$error_message = $error;
		return false;
	}

	$recID = db_insert_id(db_link());

	update_calc_fields('vehicle_payments', $recID, calculated_fields()['vehicle_payments']);

	// hook: vehicle_payments_after_insert
	if(function_exists('vehicle_payments_after_insert')) {
		$res = sql("SELECT * FROM `vehicle_payments` WHERE `vehicle_payment_id`='" . makeSafe($recID, false) . "' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)) {
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = makeSafe($recID, false);
		$args = [];
		if(!vehicle_payments_after_insert($data, getMemberInfo(), $args)) { return $recID; }
	}

	// mm: save ownership data
	set_record_owner('vehicle_payments', $recID, getLoggedMemberID());

	// if this record is a copy of another record, copy children if applicable
	if(strlen(Request::val('SelectedID'))) vehicle_payments_copy_children($recID, Request::val('SelectedID'));

	return $recID;
}

function vehicle_payments_copy_children($destination_id, $source_id) {
	global $Translation;
	$requests = []; // array of curl handlers for launching insert requests
	$eo = ['silentErrors' => true];
	$safe_sid = makeSafe($source_id);

	// launch requests, asynchronously
	curl_batch($requests);
}

function vehicle_payments_delete($selected_id, $AllowDeleteOfParents = false, $skipChecks = false) {
	// insure referential integrity ...
	global $Translation;
	$selected_id = makeSafe($selected_id);

	// mm: can member delete record?
	if(!check_record_permission('vehicle_payments', $selected_id, 'delete')) {
		return $Translation['You don\'t have enough permissions to delete this record'];
	}

	// hook: vehicle_payments_before_delete
	if(function_exists('vehicle_payments_before_delete')) {
		$args = [];
		if(!vehicle_payments_before_delete($selected_id, $skipChecks, getMemberInfo(), $args))
			return $Translation['Couldn\'t delete this record'] . (
				!empty($args['error_message']) ?
					'<div class="text-bold">' . strip_tags($args['error_message']) . '</div>'
					: '' 
			);
	}

	sql("DELETE FROM `vehicle_payments` WHERE `vehicle_payment_id`='{$selected_id}'", $eo);

	// hook: vehicle_payments_after_delete
	if(function_exists('vehicle_payments_after_delete')) {
		$args = [];
		vehicle_payments_after_delete($selected_id, getMemberInfo(), $args);
	}

	// mm: delete ownership data
	sql("DELETE FROM `membership_userrecords` WHERE `tableName`='vehicle_payments' AND `pkValue`='{$selected_id}'", $eo);
}

function vehicle_payments_update(&$selected_id, &$error_message = '') {
	global $Translation;

	// mm: can member edit record?
	if(!check_record_permission('vehicle_payments', $selected_id, 'edit')) return false;

	$data = [
		'vehicle_registration_number' => Request::lookup('vehicle_registration_number', ''),
		'engine_number' => Request::lookup('vehicle_registration_number'),
		'chassis_number' => Request::lookup('vehicle_registration_number'),
		'make_of_vehicle' => Request::lookup('vehicle_registration_number'),
		'model_of_vehicle' => Request::lookup('vehicle_registration_number'),
		'year_model_of_vehicle' => Request::lookup('vehicle_registration_number'),
		'type_of_vehicle' => Request::lookup('vehicle_registration_number'),
		'application_status' => Request::lookup('vehicle_registration_number'),
		'barcode_number' => Request::lookup('vehicle_registration_number'),
		'purchase_price' => Request::val('purchase_price', ''),
		'depreciation_value' => Request::val('depreciation_value', ''),
		'closing_km' => Request::lookup('closing_km', ''),
		'department' => Request::lookup('vehicle_registration_number'),
		'acquisition_reference' => Request::val('acquisition_reference', ''),
		'date_of_acquisition' => Request::dateComponents('date_of_acquisition', ''),
		'odometer_at_acquisition' => Request::val('odometer_at_acquisition', ''),
		'merchant_name' => Request::lookup('merchant_name', ''),
		'value_at_acquisition' => Request::val('value_at_acquisition', ''),
		'term' => Request::val('term', ''),
		'month_end' => Request::dateComponents('month_end', ''),
		'installment_per_month' => Request::val('installment_per_month', ''),
		'payment_amount' => Request::val('payment_amount', ''),
		'payment_frequency' => Request::val('payment_frequency', ''),
		'interest_rate' => Request::val('interest_rate', ''),
		'payment_reference' => Request::val('payment_reference', ''),
		'paid_so_far' => Request::val('paid_so_far', ''),
		'remaining_balance' => Request::val('remaining_balance', ''),
		'depreciation_since_purchase' => Request::val('depreciation_since_purchase', ''),
		'actual_resale_value' => Request::val('actual_resale_value', ''),
		'warranty_expires_on' => Request::dateComponents('warranty_expires_on', ''),
		'comments' => Request::val('comments', ''),
		'documents' => Request::fileUpload('documents', [
			'maxSize' => 5242880,
			'types' => 'txt|doc|docx|docm|odt|pdf|rtf',
			'noRename' => false,
			'dir' => '',
			'id' => $selected_id,
			'success' => function($name, $selected_id) {
			},
			'removeOnRequest' => true,
			'remove' => function($selected_id) {
				// do nothing: preserve removed files on server.
			},
			'failure' => function($selected_id, $fileRemoved) {
				if($fileRemoved) return '';
				return existing_value('vehicle_payments', 'documents', $selected_id);
			},
		]),
	];

	// get existing values
	$old_data = getRecord('vehicle_payments', $selected_id);
	if(is_array($old_data)) {
		$old_data = array_map('makeSafe', $old_data);
		$old_data['selectedID'] = makeSafe($selected_id);
	}

	$data['selectedID'] = makeSafe($selected_id);

	// hook: vehicle_payments_before_update
	if(function_exists('vehicle_payments_before_update')) {
		$args = ['old_data' => $old_data];
		if(!vehicle_payments_before_update($data, getMemberInfo(), $args)) {
			if(isset($args['error_message'])) $error_message = $args['error_message'];
			return false;
		}
	}

	$set = $data; unset($set['selectedID']);
	foreach ($set as $field => $value) {
		$set[$field] = ($value !== '' && $value !== NULL) ? $value : NULL;
	}

	if(!update(
		'vehicle_payments', 
		backtick_keys_once($set), 
		['`vehicle_payment_id`' => $selected_id], 
		$error_message
	)) {
		echo $error_message;
		echo '<a href="vehicle_payments_view.php?SelectedID=' . urlencode($selected_id) . "\">{$Translation['< back']}</a>";
		exit;
	}


	$eo = ['silentErrors' => true];

	update_calc_fields('vehicle_payments', $data['selectedID'], calculated_fields()['vehicle_payments']);

	// hook: vehicle_payments_after_update
	if(function_exists('vehicle_payments_after_update')) {
		$res = sql("SELECT * FROM `vehicle_payments` WHERE `vehicle_payment_id`='{$data['selectedID']}' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)) $data = array_map('makeSafe', $row);

		$data['selectedID'] = $data['vehicle_payment_id'];
		$args = ['old_data' => $old_data];
		if(!vehicle_payments_after_update($data, getMemberInfo(), $args)) return;
	}

	// mm: update ownership data
	sql("UPDATE `membership_userrecords` SET `dateUpdated`='" . time() . "' WHERE `tableName`='vehicle_payments' AND `pkValue`='" . makeSafe($selected_id) . "'", $eo);
}

function vehicle_payments_form($selected_id = '', $AllowUpdate = 1, $AllowInsert = 1, $AllowDelete = 1, $separateDV = 0, $TemplateDV = '', $TemplateDVP = '') {
	// function to return an editable form for a table records
	// and fill it with data of record whose ID is $selected_id. If $selected_id
	// is empty, an empty form is shown, with only an 'Add New'
	// button displayed.

	global $Translation;
	$eo = ['silentErrors' => true];
	$noUploads = null;
	$row = $urow = $jsReadOnly = $jsEditable = $lookups = null;

	$noSaveAsCopy = true;

	// mm: get table permissions
	$arrPerm = getTablePermissions('vehicle_payments');
	if(!$arrPerm['insert'] && $selected_id == '')
		// no insert permission and no record selected
		// so show access denied error unless TVDV
		return $separateDV ? $Translation['tableAccessDenied'] : '';
	$AllowInsert = ($arrPerm['insert'] ? true : false);
	// print preview?
	$dvprint = false;
	if(strlen($selected_id) && Request::val('dvprint_x') != '') {
		$dvprint = true;
	}

	$filterer_vehicle_registration_number = Request::val('filterer_vehicle_registration_number');
	$filterer_closing_km = Request::val('filterer_closing_km');
	$filterer_merchant_name = Request::val('filterer_merchant_name');

	// populate filterers, starting from children to grand-parents
	if($filterer_closing_km && !$filterer_vehicle_registration_number) $filterer_vehicle_registration_number = sqlValue("select vehicle_registration_number from log_sheet where fuel_log_sheet_id='" . makeSafe($filterer_closing_km) . "'");

	// unique random identifier
	$rnd1 = ($dvprint ? rand(1000000, 9999999) : '');
	// combobox: vehicle_registration_number
	$combo_vehicle_registration_number = new DataCombo;
	// combobox: closing_km, filterable by: vehicle_registration_number
	$combo_closing_km = new DataCombo;
	// combobox: date_of_acquisition
	$combo_date_of_acquisition = new DateCombo;
	$combo_date_of_acquisition->DateFormat = "dmy";
	$combo_date_of_acquisition->MinYear = defined('vehicle_payments.date_of_acquisition.MinYear') ? constant('vehicle_payments.date_of_acquisition.MinYear') : 1900;
	$combo_date_of_acquisition->MaxYear = defined('vehicle_payments.date_of_acquisition.MaxYear') ? constant('vehicle_payments.date_of_acquisition.MaxYear') : 2100;
	$combo_date_of_acquisition->DefaultDate = parseMySQLDate('', '');
	$combo_date_of_acquisition->MonthNames = $Translation['month names'];
	$combo_date_of_acquisition->NamePrefix = 'date_of_acquisition';
	// combobox: merchant_name
	$combo_merchant_name = new DataCombo;
	// combobox: month_end
	$combo_month_end = new DateCombo;
	$combo_month_end->DateFormat = "dmy";
	$combo_month_end->MinYear = defined('vehicle_payments.month_end.MinYear') ? constant('vehicle_payments.month_end.MinYear') : 1900;
	$combo_month_end->MaxYear = defined('vehicle_payments.month_end.MaxYear') ? constant('vehicle_payments.month_end.MaxYear') : 2100;
	$combo_month_end->DefaultDate = parseMySQLDate('', '');
	$combo_month_end->MonthNames = $Translation['month names'];
	$combo_month_end->NamePrefix = 'month_end';
	// combobox: payment_frequency
	$combo_payment_frequency = new Combo;
	$combo_payment_frequency->ListType = 0;
	$combo_payment_frequency->MultipleSeparator = ', ';
	$combo_payment_frequency->ListBoxHeight = 10;
	$combo_payment_frequency->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/vehicle_payments.payment_frequency.csv')) {
		$payment_frequency_data = addslashes(implode('', @file(__DIR__ . '/hooks/vehicle_payments.payment_frequency.csv')));
		$combo_payment_frequency->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($payment_frequency_data))));
		$combo_payment_frequency->ListData = $combo_payment_frequency->ListItem;
	} else {
		$combo_payment_frequency->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("Monthly;; Quaterly;; Semester;; Bi-Annual;; yearly"))));
		$combo_payment_frequency->ListData = $combo_payment_frequency->ListItem;
	}
	$combo_payment_frequency->SelectName = 'payment_frequency';
	// combobox: interest_rate
	$combo_interest_rate = new Combo;
	$combo_interest_rate->ListType = 0;
	$combo_interest_rate->MultipleSeparator = ', ';
	$combo_interest_rate->ListBoxHeight = 10;
	$combo_interest_rate->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/vehicle_payments.interest_rate.csv')) {
		$interest_rate_data = addslashes(implode('', @file(__DIR__ . '/hooks/vehicle_payments.interest_rate.csv')));
		$combo_interest_rate->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($interest_rate_data))));
		$combo_interest_rate->ListData = $combo_interest_rate->ListItem;
	} else {
		$combo_interest_rate->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("7;;7,5;;8;;8,5;;9;;9,5;;10;;10,5;;11;;11,5;;12;;12,5;;13;;13,5;;14;;14,5;;15"))));
		$combo_interest_rate->ListData = $combo_interest_rate->ListItem;
	}
	$combo_interest_rate->SelectName = 'interest_rate';
	// combobox: warranty_expires_on
	$combo_warranty_expires_on = new DateCombo;
	$combo_warranty_expires_on->DateFormat = "dmy";
	$combo_warranty_expires_on->MinYear = defined('vehicle_payments.warranty_expires_on.MinYear') ? constant('vehicle_payments.warranty_expires_on.MinYear') : 1900;
	$combo_warranty_expires_on->MaxYear = defined('vehicle_payments.warranty_expires_on.MaxYear') ? constant('vehicle_payments.warranty_expires_on.MaxYear') : 2100;
	$combo_warranty_expires_on->DefaultDate = parseMySQLDate('', '');
	$combo_warranty_expires_on->MonthNames = $Translation['month names'];
	$combo_warranty_expires_on->NamePrefix = 'warranty_expires_on';

	if($selected_id) {
		// mm: check member permissions
		if(!$arrPerm['view']) return $Translation['tableAccessDenied'];

		// mm: who is the owner?
		$ownerGroupID = sqlValue("SELECT `groupID` FROM `membership_userrecords` WHERE `tableName`='vehicle_payments' AND `pkValue`='" . makeSafe($selected_id) . "'");
		$ownerMemberID = sqlValue("SELECT LCASE(`memberID`) FROM `membership_userrecords` WHERE `tableName`='vehicle_payments' AND `pkValue`='" . makeSafe($selected_id) . "'");

		if($arrPerm['view'] == 1 && getLoggedMemberID() != $ownerMemberID) return $Translation['tableAccessDenied'];
		if($arrPerm['view'] == 2 && getLoggedGroupID() != $ownerGroupID) return $Translation['tableAccessDenied'];

		// can edit?
		$AllowUpdate = 0;
		if(($arrPerm['edit'] == 1 && $ownerMemberID == getLoggedMemberID()) || ($arrPerm['edit'] == 2 && $ownerGroupID == getLoggedGroupID()) || $arrPerm['edit'] == 3) {
			$AllowUpdate = 1;
		}

		$res = sql("SELECT * FROM `vehicle_payments` WHERE `vehicle_payment_id`='" . makeSafe($selected_id) . "'", $eo);
		if(!($row = db_fetch_array($res))) {
			return error_message($Translation['No records found'], 'vehicle_payments_view.php', false);
		}
		$combo_vehicle_registration_number->SelectedData = $row['vehicle_registration_number'];
		$combo_closing_km->SelectedData = $row['closing_km'];
		$combo_date_of_acquisition->DefaultDate = $row['date_of_acquisition'];
		$combo_merchant_name->SelectedData = $row['merchant_name'];
		$combo_month_end->DefaultDate = $row['month_end'];
		$combo_payment_frequency->SelectedData = $row['payment_frequency'];
		$combo_interest_rate->SelectedData = $row['interest_rate'];
		$combo_warranty_expires_on->DefaultDate = $row['warranty_expires_on'];
		$urow = $row; /* unsanitized data */
		$row = array_map('safe_html', $row);
	} else {
		$filterField = Request::val('FilterField');
		$filterOperator = Request::val('FilterOperator');
		$filterValue = Request::val('FilterValue');
		$combo_vehicle_registration_number->SelectedData = $filterer_vehicle_registration_number;
		$combo_closing_km->SelectedData = $filterer_closing_km;
		$combo_merchant_name->SelectedData = $filterer_merchant_name;
		$combo_payment_frequency->SelectedText = (isset($filterField[1]) && $filterField[1] == '24' && $filterOperator[1] == '<=>' ? $filterValue[1] : '');
		$combo_interest_rate->SelectedText = (isset($filterField[1]) && $filterField[1] == '25' && $filterOperator[1] == '<=>' ? $filterValue[1] : '');
	}
	$combo_vehicle_registration_number->HTML = '<span id="vehicle_registration_number-container' . $rnd1 . '"></span><input type="hidden" name="vehicle_registration_number" id="vehicle_registration_number' . $rnd1 . '" value="' . html_attr($combo_vehicle_registration_number->SelectedData) . '">';
	$combo_vehicle_registration_number->MatchText = '<span id="vehicle_registration_number-container-readonly' . $rnd1 . '"></span><input type="hidden" name="vehicle_registration_number" id="vehicle_registration_number' . $rnd1 . '" value="' . html_attr($combo_vehicle_registration_number->SelectedData) . '">';
	$combo_closing_km->HTML = '<span id="closing_km-container' . $rnd1 . '"></span><input type="hidden" name="closing_km" id="closing_km' . $rnd1 . '" value="' . html_attr($combo_closing_km->SelectedData) . '">';
	$combo_closing_km->MatchText = '<span id="closing_km-container-readonly' . $rnd1 . '"></span><input type="hidden" name="closing_km" id="closing_km' . $rnd1 . '" value="' . html_attr($combo_closing_km->SelectedData) . '">';
	$combo_merchant_name->HTML = '<span id="merchant_name-container' . $rnd1 . '"></span><input type="hidden" name="merchant_name" id="merchant_name' . $rnd1 . '" value="' . html_attr($combo_merchant_name->SelectedData) . '">';
	$combo_merchant_name->MatchText = '<span id="merchant_name-container-readonly' . $rnd1 . '"></span><input type="hidden" name="merchant_name" id="merchant_name' . $rnd1 . '" value="' . html_attr($combo_merchant_name->SelectedData) . '">';
	$combo_payment_frequency->Render();
	$combo_interest_rate->Render();

	ob_start();
	?>

	<script>
		// initial lookup values
		AppGini.current_vehicle_registration_number__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['vehicle_registration_number'] : htmlspecialchars($filterer_vehicle_registration_number, ENT_QUOTES)); ?>"};
		AppGini.current_closing_km__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['closing_km'] : htmlspecialchars($filterer_closing_km, ENT_QUOTES)); ?>"};
		AppGini.current_merchant_name__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['merchant_name'] : htmlspecialchars($filterer_merchant_name, ENT_QUOTES)); ?>"};

		jQuery(function() {
			setTimeout(function() {
				if(typeof(vehicle_registration_number_reload__RAND__) == 'function') vehicle_registration_number_reload__RAND__();
				<?php echo (!$AllowUpdate || $dvprint ? 'if(typeof(closing_km_reload__RAND__) == \'function\') closing_km_reload__RAND__(AppGini.current_vehicle_registration_number__RAND__.value);' : ''); ?>
				if(typeof(merchant_name_reload__RAND__) == 'function') merchant_name_reload__RAND__();
			}, 50); /* we need to slightly delay client-side execution of the above code to allow AppGini.ajaxCache to work */
		});
		function vehicle_registration_number_reload__RAND__() {
		<?php if(($AllowUpdate || ($arrPerm['insert'] && !$selected_id)) && !$dvprint) { ?>

			$j("#vehicle_registration_number-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_vehicle_registration_number__RAND__.value, t: 'vehicle_payments', f: 'vehicle_registration_number' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="vehicle_registration_number"]').val(resp.results[0].id);
							$j('[id=vehicle_registration_number-container-readonly__RAND__]').html('<span class="match-text" id="vehicle_registration_number-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=gmt_fleet_register_view_parent]').hide(); } else { $j('.btn[id=gmt_fleet_register_view_parent]').show(); }

						if(typeof(closing_km_reload__RAND__) == 'function') closing_km_reload__RAND__(AppGini.current_vehicle_registration_number__RAND__.value);

							if(typeof(vehicle_registration_number_update_autofills__RAND__) == 'function') vehicle_registration_number_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'vehicle_payments', f: 'vehicle_registration_number' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_vehicle_registration_number__RAND__.value = e.added.id;
				AppGini.current_vehicle_registration_number__RAND__.text = e.added.text;
				$j('[name="vehicle_registration_number"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=gmt_fleet_register_view_parent]').hide(); } else { $j('.btn[id=gmt_fleet_register_view_parent]').show(); }

						if(typeof(closing_km_reload__RAND__) == 'function') closing_km_reload__RAND__(AppGini.current_vehicle_registration_number__RAND__.value);

				if(typeof(vehicle_registration_number_update_autofills__RAND__) == 'function') vehicle_registration_number_update_autofills__RAND__();
			});

			if(!$j("#vehicle_registration_number-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_vehicle_registration_number__RAND__.value, t: 'vehicle_payments', f: 'vehicle_registration_number' },
					success: function(resp) {
						$j('[name="vehicle_registration_number"]').val(resp.results[0].id);
						$j('[id=vehicle_registration_number-container-readonly__RAND__]').html('<span class="match-text" id="vehicle_registration_number-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=gmt_fleet_register_view_parent]').hide(); } else { $j('.btn[id=gmt_fleet_register_view_parent]').show(); }

						if(typeof(vehicle_registration_number_update_autofills__RAND__) == 'function') vehicle_registration_number_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_vehicle_registration_number__RAND__.value, t: 'vehicle_payments', f: 'vehicle_registration_number' },
				success: function(resp) {
					$j('[id=vehicle_registration_number-container__RAND__], [id=vehicle_registration_number-container-readonly__RAND__]').html('<span class="match-text" id="vehicle_registration_number-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=gmt_fleet_register_view_parent]').hide(); } else { $j('.btn[id=gmt_fleet_register_view_parent]').show(); }

					if(typeof(vehicle_registration_number_update_autofills__RAND__) == 'function') vehicle_registration_number_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function closing_km_reload__RAND__(filterer_vehicle_registration_number) {
		<?php if(($AllowUpdate || ($arrPerm['insert'] && !$selected_id)) && !$dvprint) { ?>

			$j("#closing_km-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { filterer_vehicle_registration_number: filterer_vehicle_registration_number, id: AppGini.current_closing_km__RAND__.value, t: 'vehicle_payments', f: 'closing_km' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="closing_km"]').val(resp.results[0].id);
							$j('[id=closing_km-container-readonly__RAND__]').html('<span class="match-text" id="closing_km-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=log_sheet_view_parent]').hide(); } else { $j('.btn[id=log_sheet_view_parent]').show(); }


							if(typeof(closing_km_update_autofills__RAND__) == 'function') closing_km_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { filterer_vehicle_registration_number: filterer_vehicle_registration_number, s: term, p: page, t: 'vehicle_payments', f: 'closing_km' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_closing_km__RAND__.value = e.added.id;
				AppGini.current_closing_km__RAND__.text = e.added.text;
				$j('[name="closing_km"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=log_sheet_view_parent]').hide(); } else { $j('.btn[id=log_sheet_view_parent]').show(); }


				if(typeof(closing_km_update_autofills__RAND__) == 'function') closing_km_update_autofills__RAND__();
			});

			if(!$j("#closing_km-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_closing_km__RAND__.value, t: 'vehicle_payments', f: 'closing_km' },
					success: function(resp) {
						$j('[name="closing_km"]').val(resp.results[0].id);
						$j('[id=closing_km-container-readonly__RAND__]').html('<span class="match-text" id="closing_km-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=log_sheet_view_parent]').hide(); } else { $j('.btn[id=log_sheet_view_parent]').show(); }

						if(typeof(closing_km_update_autofills__RAND__) == 'function') closing_km_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_closing_km__RAND__.value, t: 'vehicle_payments', f: 'closing_km' },
				success: function(resp) {
					$j('[id=closing_km-container__RAND__], [id=closing_km-container-readonly__RAND__]').html('<span class="match-text" id="closing_km-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=log_sheet_view_parent]').hide(); } else { $j('.btn[id=log_sheet_view_parent]').show(); }

					if(typeof(closing_km_update_autofills__RAND__) == 'function') closing_km_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function merchant_name_reload__RAND__() {
		<?php if(($AllowUpdate || ($arrPerm['insert'] && !$selected_id)) && !$dvprint) { ?>

			$j("#merchant_name-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_merchant_name__RAND__.value, t: 'vehicle_payments', f: 'merchant_name' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="merchant_name"]').val(resp.results[0].id);
							$j('[id=merchant_name-container-readonly__RAND__]').html('<span class="match-text" id="merchant_name-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=merchant_view_parent]').hide(); } else { $j('.btn[id=merchant_view_parent]').show(); }


							if(typeof(merchant_name_update_autofills__RAND__) == 'function') merchant_name_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'vehicle_payments', f: 'merchant_name' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_merchant_name__RAND__.value = e.added.id;
				AppGini.current_merchant_name__RAND__.text = e.added.text;
				$j('[name="merchant_name"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=merchant_view_parent]').hide(); } else { $j('.btn[id=merchant_view_parent]').show(); }


				if(typeof(merchant_name_update_autofills__RAND__) == 'function') merchant_name_update_autofills__RAND__();
			});

			if(!$j("#merchant_name-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_merchant_name__RAND__.value, t: 'vehicle_payments', f: 'merchant_name' },
					success: function(resp) {
						$j('[name="merchant_name"]').val(resp.results[0].id);
						$j('[id=merchant_name-container-readonly__RAND__]').html('<span class="match-text" id="merchant_name-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=merchant_view_parent]').hide(); } else { $j('.btn[id=merchant_view_parent]').show(); }

						if(typeof(merchant_name_update_autofills__RAND__) == 'function') merchant_name_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_merchant_name__RAND__.value, t: 'vehicle_payments', f: 'merchant_name' },
				success: function(resp) {
					$j('[id=merchant_name-container__RAND__], [id=merchant_name-container-readonly__RAND__]').html('<span class="match-text" id="merchant_name-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=merchant_view_parent]').hide(); } else { $j('.btn[id=merchant_view_parent]').show(); }

					if(typeof(merchant_name_update_autofills__RAND__) == 'function') merchant_name_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
	</script>
	<?php

	$lookups = str_replace('__RAND__', $rnd1, ob_get_clean());


	// code for template based detail view forms

	// open the detail view template
	if($dvprint) {
		$template_file = is_file("./{$TemplateDVP}") ? "./{$TemplateDVP}" : './templates/vehicle_payments_templateDVP.html';
		$templateCode = @file_get_contents($template_file);
	} else {
		$template_file = is_file("./{$TemplateDV}") ? "./{$TemplateDV}" : './templates/vehicle_payments_templateDV.html';
		$templateCode = @file_get_contents($template_file);
	}

	// process form title
	$templateCode = str_replace('<%%DETAIL_VIEW_TITLE%%>', 'Vehicle Payment Details:', $templateCode);
	$templateCode = str_replace('<%%RND1%%>', $rnd1, $templateCode);
	$templateCode = str_replace('<%%EMBEDDED%%>', (Request::val('Embedded') ? 'Embedded=1' : ''), $templateCode);
	// process buttons
	if($arrPerm['insert'] && !$selected_id) { // allow insert and no record selected?
		if(!$selected_id) $templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-success" id="insert" name="insert_x" value="1" onclick="return vehicle_payments_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save New'] . '</button>', $templateCode);
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="insert" name="insert_x" value="1" onclick="return vehicle_payments_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save As Copy'] . '</button>', $templateCode);
	} else {
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '', $templateCode);
	}

	// 'Back' button action
	if(Request::val('Embedded')) {
		$backAction = 'AppGini.closeParentModal(); return false;';
	} else {
		$backAction = '$j(\'form\').eq(0).attr(\'novalidate\', \'novalidate\'); document.myform.reset(); return true;';
	}

	if($selected_id) {
		if(!Request::val('Embedded')) $templateCode = str_replace('<%%DVPRINT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="dvprint" name="dvprint_x" value="1" onclick="$j(\'form\').eq(0).prop(\'novalidate\', true); document.myform.reset(); return true;" title="' . html_attr($Translation['Print Preview']) . '"><i class="glyphicon glyphicon-print"></i> ' . $Translation['Print Preview'] . '</button>', $templateCode);
		if($AllowUpdate) {
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '<button type="submit" class="btn btn-success btn-lg" id="update" name="update_x" value="1" onclick="return vehicle_payments_validateData();" title="' . html_attr($Translation['Save Changes']) . '"><i class="glyphicon glyphicon-ok"></i> ' . $Translation['Save Changes'] . '</button>', $templateCode);
		} else {
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		}
		if(($arrPerm['delete'] == 1 && $ownerMemberID == getLoggedMemberID()) || ($arrPerm['delete'] == 2 && $ownerGroupID == getLoggedGroupID()) || $arrPerm['delete'] == 3) { // allow delete?
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '<button type="submit" class="btn btn-danger" id="delete" name="delete_x" value="1" onclick="return confirm(\'' . $Translation['are you sure?'] . '\');" title="' . html_attr($Translation['Delete']) . '"><i class="glyphicon glyphicon-trash"></i> ' . $Translation['Delete'] . '</button>', $templateCode);
		} else {
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		}
		$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>', $templateCode);
	} else {
		$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);

		// if not in embedded mode and user has insert only but no view/update/delete,
		// remove 'back' button
		if(
			$arrPerm['insert']
			&& !$arrPerm['update'] && !$arrPerm['delete'] && !$arrPerm['view']
			&& !Request::val('Embedded')
		)
			$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '', $templateCode);
		elseif($separateDV)
			$templateCode = str_replace(
				'<%%DESELECT_BUTTON%%>', 
				'<button
					type="submit" 
					class="btn btn-default" 
					id="deselect" 
					name="deselect_x" 
					value="1" 
					onclick="' . $backAction . '" 
					title="' . html_attr($Translation['Back']) . '">
						<i class="glyphicon glyphicon-chevron-left"></i> ' .
						$Translation['Back'] .
				'</button>',
				$templateCode
			);
		else
			$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '', $templateCode);
	}

	// set records to read only if user can't insert new records and can't edit current record
	if(($selected_id && !$AllowUpdate) || (!$selected_id && !$AllowInsert)) {
		$jsReadOnly = '';
		$jsReadOnly .= "\tjQuery('#vehicle_registration_number').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#vehicle_registration_number_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#purchase_price').replaceWith('<div class=\"form-control-static\" id=\"purchase_price\">' + (jQuery('#purchase_price').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#depreciation_value').replaceWith('<div class=\"form-control-static\" id=\"depreciation_value\">' + (jQuery('#depreciation_value').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#closing_km').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#closing_km_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#acquisition_reference').replaceWith('<div class=\"form-control-static\" id=\"acquisition_reference\">' + (jQuery('#acquisition_reference').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#date_of_acquisition').prop('readonly', true);\n";
		$jsReadOnly .= "\tjQuery('#date_of_acquisitionDay, #date_of_acquisitionMonth, #date_of_acquisitionYear').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#odometer_at_acquisition').replaceWith('<div class=\"form-control-static\" id=\"odometer_at_acquisition\">' + (jQuery('#odometer_at_acquisition').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#merchant_name').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#merchant_name_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#value_at_acquisition').replaceWith('<div class=\"form-control-static\" id=\"value_at_acquisition\">' + (jQuery('#value_at_acquisition').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#term').replaceWith('<div class=\"form-control-static\" id=\"term\">' + (jQuery('#term').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#month_end').prop('readonly', true);\n";
		$jsReadOnly .= "\tjQuery('#month_endDay, #month_endMonth, #month_endYear').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#installment_per_month').replaceWith('<div class=\"form-control-static\" id=\"installment_per_month\">' + (jQuery('#installment_per_month').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#payment_amount').replaceWith('<div class=\"form-control-static\" id=\"payment_amount\">' + (jQuery('#payment_amount').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#payment_frequency').replaceWith('<div class=\"form-control-static\" id=\"payment_frequency\">' + (jQuery('#payment_frequency').val() || '') + '</div>'); jQuery('#payment_frequency-multi-selection-help').hide();\n";
		$jsReadOnly .= "\tjQuery('#interest_rate').replaceWith('<div class=\"form-control-static\" id=\"interest_rate\">' + (jQuery('#interest_rate').val() || '') + '</div>'); jQuery('#interest_rate-multi-selection-help').hide();\n";
		$jsReadOnly .= "\tjQuery('#payment_reference').replaceWith('<div class=\"form-control-static\" id=\"payment_reference\">' + (jQuery('#payment_reference').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#paid_so_far').replaceWith('<div class=\"form-control-static\" id=\"paid_so_far\">' + (jQuery('#paid_so_far').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#remaining_balance').replaceWith('<div class=\"form-control-static\" id=\"remaining_balance\">' + (jQuery('#remaining_balance').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#depreciation_since_purchase').replaceWith('<div class=\"form-control-static\" id=\"depreciation_since_purchase\">' + (jQuery('#depreciation_since_purchase').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#actual_resale_value').replaceWith('<div class=\"form-control-static\" id=\"actual_resale_value\">' + (jQuery('#actual_resale_value').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#warranty_expires_on').prop('readonly', true);\n";
		$jsReadOnly .= "\tjQuery('#warranty_expires_onDay, #warranty_expires_onMonth, #warranty_expires_onYear').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#documents').replaceWith('<div class=\"form-control-static\" id=\"documents\">' + (jQuery('#documents').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#documents, #documents-edit-link').hide();\n";
		$jsReadOnly .= "\tjQuery('.select2-container').hide();\n";

		$noUploads = true;
	} elseif(($AllowInsert && !$selected_id) || ($AllowUpdate && $selected_id)) {
		$jsEditable = "\tjQuery('form').eq(0).data('already_changed', true);"; // temporarily disable form change handler
		$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', false);"; // re-enable form change handler
	}

	// process combos
	$templateCode = str_replace('<%%COMBO(vehicle_registration_number)%%>', $combo_vehicle_registration_number->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(vehicle_registration_number)%%>', $combo_vehicle_registration_number->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(vehicle_registration_number)%%>', urlencode($combo_vehicle_registration_number->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(closing_km)%%>', $combo_closing_km->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(closing_km)%%>', $combo_closing_km->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(closing_km)%%>', urlencode($combo_closing_km->MatchText), $templateCode);
	$templateCode = str_replace(
		'<%%COMBO(date_of_acquisition)%%>', 
		($selected_id && !$arrPerm['edit'] && ($noSaveAsCopy || !$arrPerm['insert']) ? 
			'<div class="form-control-static">' . $combo_date_of_acquisition->GetHTML(true) . '</div>' : 
			$combo_date_of_acquisition->GetHTML()
		), $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(date_of_acquisition)%%>', $combo_date_of_acquisition->GetHTML(true), $templateCode);
	$templateCode = str_replace('<%%COMBO(merchant_name)%%>', $combo_merchant_name->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(merchant_name)%%>', $combo_merchant_name->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(merchant_name)%%>', urlencode($combo_merchant_name->MatchText), $templateCode);
	$templateCode = str_replace(
		'<%%COMBO(month_end)%%>', 
		($selected_id && !$arrPerm['edit'] && ($noSaveAsCopy || !$arrPerm['insert']) ? 
			'<div class="form-control-static">' . $combo_month_end->GetHTML(true) . '</div>' : 
			$combo_month_end->GetHTML()
		), $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(month_end)%%>', $combo_month_end->GetHTML(true), $templateCode);
	$templateCode = str_replace('<%%COMBO(payment_frequency)%%>', $combo_payment_frequency->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(payment_frequency)%%>', $combo_payment_frequency->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(interest_rate)%%>', $combo_interest_rate->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(interest_rate)%%>', $combo_interest_rate->SelectedData, $templateCode);
	$templateCode = str_replace(
		'<%%COMBO(warranty_expires_on)%%>', 
		($selected_id && !$arrPerm['edit'] && ($noSaveAsCopy || !$arrPerm['insert']) ? 
			'<div class="form-control-static">' . $combo_warranty_expires_on->GetHTML(true) . '</div>' : 
			$combo_warranty_expires_on->GetHTML()
		), $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(warranty_expires_on)%%>', $combo_warranty_expires_on->GetHTML(true), $templateCode);

	/* lookup fields array: 'lookup field name' => ['parent table name', 'lookup field caption'] */
	$lookup_fields = ['vehicle_registration_number' => ['gmt_fleet_register', 'Registration Number:'], 'closing_km' => ['log_sheet', 'Closing KM:'], 'merchant_name' => ['merchant', 'Merchant Name:'], ];
	foreach($lookup_fields as $luf => $ptfc) {
		$pt_perm = getTablePermissions($ptfc[0]);

		// process foreign key links
		if($pt_perm['view'] || $pt_perm['edit']) {
			$templateCode = str_replace("<%%PLINK({$luf})%%>", '<button type="button" class="btn btn-default view_parent" id="' . $ptfc[0] . '_view_parent" title="' . html_attr($Translation['View'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-eye-open"></i></button>', $templateCode);
		}

		// if user has insert permission to parent table of a lookup field, put an add new button
		if($pt_perm['insert'] /* && !Request::val('Embedded')*/) {
			$templateCode = str_replace("<%%ADDNEW({$ptfc[0]})%%>", '<button type="button" class="btn btn-default add_new_parent" id="' . $ptfc[0] . '_add_new" title="' . html_attr($Translation['Add New'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-plus text-success"></i></button>', $templateCode);
		}
	}

	// process images
	$templateCode = str_replace('<%%UPLOADFILE(vehicle_payment_id)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(vehicle_registration_number)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(purchase_price)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(depreciation_value)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(closing_km)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(acquisition_reference)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(date_of_acquisition)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(odometer_at_acquisition)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(merchant_name)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(value_at_acquisition)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(term)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(month_end)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(installment_per_month)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(payment_amount)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(payment_frequency)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(interest_rate)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(payment_reference)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(paid_so_far)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(remaining_balance)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(depreciation_since_purchase)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(actual_resale_value)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(warranty_expires_on)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(comments)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(documents)%%>', ($noUploads ? '' : "<div>{$Translation['upload image']}</div>" . '<i class="glyphicon glyphicon-remove text-danger clear-upload hidden"></i> <input type="file" name="documents" id="documents" data-filetypes="txt|doc|docx|docm|odt|pdf|rtf" data-maxsize="5242880" accept=".txt,.doc,.docx,.docm,.odt,.pdf,.rtf">'), $templateCode);
	if($AllowUpdate && $row['documents'] != '') {
		$templateCode = str_replace('<%%REMOVEFILE(documents)%%>', '<br><input type="checkbox" name="documents_remove" id="documents_remove" value="1"> <label for="documents_remove" style="color: red; font-weight: bold;">'.$Translation['remove image'].'</label>', $templateCode);
	} else {
		$templateCode = str_replace('<%%REMOVEFILE(documents)%%>', '', $templateCode);
	}

	// process values
	if($selected_id) {
		if( $dvprint) $templateCode = str_replace('<%%VALUE(vehicle_payment_id)%%>', safe_html($urow['vehicle_payment_id']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(vehicle_payment_id)%%>', html_attr($row['vehicle_payment_id']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(vehicle_payment_id)%%>', urlencode($urow['vehicle_payment_id']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(vehicle_registration_number)%%>', safe_html($urow['vehicle_registration_number']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(vehicle_registration_number)%%>', html_attr($row['vehicle_registration_number']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(vehicle_registration_number)%%>', urlencode($urow['vehicle_registration_number']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(purchase_price)%%>', safe_html($urow['purchase_price']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(purchase_price)%%>', html_attr($row['purchase_price']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(purchase_price)%%>', urlencode($urow['purchase_price']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(depreciation_value)%%>', safe_html($urow['depreciation_value']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(depreciation_value)%%>', html_attr($row['depreciation_value']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(depreciation_value)%%>', urlencode($urow['depreciation_value']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(closing_km)%%>', safe_html($urow['closing_km']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(closing_km)%%>', html_attr($row['closing_km']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(closing_km)%%>', urlencode($urow['closing_km']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(acquisition_reference)%%>', safe_html($urow['acquisition_reference']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(acquisition_reference)%%>', html_attr($row['acquisition_reference']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(acquisition_reference)%%>', urlencode($urow['acquisition_reference']), $templateCode);
		$templateCode = str_replace('<%%VALUE(date_of_acquisition)%%>', app_datetime($row['date_of_acquisition']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(date_of_acquisition)%%>', urlencode(app_datetime($urow['date_of_acquisition'])), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(odometer_at_acquisition)%%>', safe_html($urow['odometer_at_acquisition']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(odometer_at_acquisition)%%>', html_attr($row['odometer_at_acquisition']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(odometer_at_acquisition)%%>', urlencode($urow['odometer_at_acquisition']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(merchant_name)%%>', safe_html($urow['merchant_name']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(merchant_name)%%>', html_attr($row['merchant_name']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(merchant_name)%%>', urlencode($urow['merchant_name']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(value_at_acquisition)%%>', safe_html($urow['value_at_acquisition']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(value_at_acquisition)%%>', html_attr($row['value_at_acquisition']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(value_at_acquisition)%%>', urlencode($urow['value_at_acquisition']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(term)%%>', safe_html($urow['term']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(term)%%>', html_attr($row['term']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(term)%%>', urlencode($urow['term']), $templateCode);
		$templateCode = str_replace('<%%VALUE(month_end)%%>', app_datetime($row['month_end']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(month_end)%%>', urlencode(app_datetime($urow['month_end'])), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(installment_per_month)%%>', safe_html($urow['installment_per_month']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(installment_per_month)%%>', html_attr($row['installment_per_month']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(installment_per_month)%%>', urlencode($urow['installment_per_month']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(payment_amount)%%>', safe_html($urow['payment_amount']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(payment_amount)%%>', html_attr($row['payment_amount']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(payment_amount)%%>', urlencode($urow['payment_amount']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(payment_frequency)%%>', safe_html($urow['payment_frequency']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(payment_frequency)%%>', html_attr($row['payment_frequency']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(payment_frequency)%%>', urlencode($urow['payment_frequency']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(interest_rate)%%>', safe_html($urow['interest_rate']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(interest_rate)%%>', html_attr($row['interest_rate']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(interest_rate)%%>', urlencode($urow['interest_rate']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(payment_reference)%%>', safe_html($urow['payment_reference']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(payment_reference)%%>', html_attr($row['payment_reference']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(payment_reference)%%>', urlencode($urow['payment_reference']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(paid_so_far)%%>', safe_html($urow['paid_so_far']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(paid_so_far)%%>', html_attr($row['paid_so_far']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(paid_so_far)%%>', urlencode($urow['paid_so_far']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(remaining_balance)%%>', safe_html($urow['remaining_balance']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(remaining_balance)%%>', html_attr($row['remaining_balance']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(remaining_balance)%%>', urlencode($urow['remaining_balance']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(depreciation_since_purchase)%%>', safe_html($urow['depreciation_since_purchase']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(depreciation_since_purchase)%%>', html_attr($row['depreciation_since_purchase']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(depreciation_since_purchase)%%>', urlencode($urow['depreciation_since_purchase']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(actual_resale_value)%%>', safe_html($urow['actual_resale_value']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(actual_resale_value)%%>', html_attr($row['actual_resale_value']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(actual_resale_value)%%>', urlencode($urow['actual_resale_value']), $templateCode);
		$templateCode = str_replace('<%%VALUE(warranty_expires_on)%%>', app_datetime($row['warranty_expires_on']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(warranty_expires_on)%%>', urlencode(app_datetime($urow['warranty_expires_on'])), $templateCode);
		if($AllowUpdate || $AllowInsert) {
			$templateCode = str_replace('<%%HTMLAREA(comments)%%>', '<textarea name="comments" id="comments" rows="5">' . safe_html(htmlspecialchars_decode($row['comments'])) . '</textarea>', $templateCode);
		} else {
			$templateCode = str_replace('<%%HTMLAREA(comments)%%>', '<div id="comments" class="form-control-static">' . $row['comments'] . '</div>', $templateCode);
		}
		$templateCode = str_replace('<%%VALUE(comments)%%>', nl2br($row['comments']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(comments)%%>', urlencode($urow['comments']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(documents)%%>', safe_html($urow['documents']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(documents)%%>', html_attr($row['documents']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(documents)%%>', urlencode($urow['documents']), $templateCode);
	} else {
		$templateCode = str_replace('<%%VALUE(vehicle_payment_id)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(vehicle_payment_id)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(vehicle_registration_number)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(vehicle_registration_number)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(purchase_price)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(purchase_price)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(depreciation_value)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(depreciation_value)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(closing_km)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(closing_km)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(acquisition_reference)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(acquisition_reference)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(date_of_acquisition)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(date_of_acquisition)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(odometer_at_acquisition)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(odometer_at_acquisition)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(merchant_name)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(merchant_name)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(value_at_acquisition)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(value_at_acquisition)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(term)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(term)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(month_end)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(month_end)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(installment_per_month)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(installment_per_month)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(payment_amount)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(payment_amount)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(payment_frequency)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(payment_frequency)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(interest_rate)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(interest_rate)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(payment_reference)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(payment_reference)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(paid_so_far)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(paid_so_far)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(remaining_balance)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(remaining_balance)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(depreciation_since_purchase)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(depreciation_since_purchase)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(actual_resale_value)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(actual_resale_value)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(warranty_expires_on)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(warranty_expires_on)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%HTMLAREA(comments)%%>', '<textarea name="comments" id="comments" rows="5"></textarea>', $templateCode);
		$templateCode = str_replace('<%%VALUE(documents)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(documents)%%>', urlencode(''), $templateCode);
	}

	// process translations
	$templateCode = parseTemplate($templateCode);

	// clear scrap
	$templateCode = str_replace('<%%', '<!-- ', $templateCode);
	$templateCode = str_replace('%%>', ' -->', $templateCode);

	// hide links to inaccessible tables
	if(Request::val('dvprint_x') == '') {
		$templateCode .= "\n\n<script>\$j(function() {\n";
		$arrTables = getTableList();
		foreach($arrTables as $name => $caption) {
			$templateCode .= "\t\$j('#{$name}_link').removeClass('hidden');\n";
			$templateCode .= "\t\$j('#xs_{$name}_link').removeClass('hidden');\n";
		}

		$templateCode .= $jsReadOnly;
		$templateCode .= $jsEditable;

		if(!$selected_id) {
			$templateCode.="\n\tif(document.getElementById('documentsEdit')) { document.getElementById('documentsEdit').style.display='inline'; }";
			$templateCode.="\n\tif(document.getElementById('documentsEditLink')) { document.getElementById('documentsEditLink').style.display='none'; }";
		}

		$templateCode.="\n});</script>\n";
	}

	// ajaxed auto-fill fields
	$templateCode .= '<script>';
	$templateCode .= '$j(function() {';

	$templateCode .= "\tvehicle_registration_number_update_autofills$rnd1 = function() {\n";
	$templateCode .= "\t\t\$j.ajax({\n";
	if($dvprint) {
		$templateCode .= "\t\t\turl: 'vehicle_payments_autofill.php?rnd1=$rnd1&mfk=vehicle_registration_number&id=' + encodeURIComponent('".addslashes($row['vehicle_registration_number'])."'),\n";
		$templateCode .= "\t\t\tcontentType: 'application/x-www-form-urlencoded; charset=" . datalist_db_encoding . "',\n";
		$templateCode .= "\t\t\ttype: 'GET'\n";
	} else {
		$templateCode .= "\t\t\turl: 'vehicle_payments_autofill.php?rnd1=$rnd1&mfk=vehicle_registration_number&id=' + encodeURIComponent(AppGini.current_vehicle_registration_number{$rnd1}.value),\n";
		$templateCode .= "\t\t\tcontentType: 'application/x-www-form-urlencoded; charset=" . datalist_db_encoding . "',\n";
		$templateCode .= "\t\t\ttype: 'GET',\n";
		$templateCode .= "\t\t\tbeforeSend: function() { \$j('#vehicle_registration_number$rnd1').prop('disabled', true); },\n";
		$templateCode .= "\t\t\tcomplete: function() { " . (($arrPerm['insert'] || (($arrPerm['edit'] == 1 && $ownerMemberID == getLoggedMemberID()) || ($arrPerm['edit'] == 2 && $ownerGroupID == getLoggedGroupID()) || $arrPerm['edit'] == 3)) ? "\$j('#vehicle_registration_number$rnd1').prop('disabled', false); " : "\$j('#vehicle_registration_number$rnd1').prop('disabled', true); ")." \$j(window).resize(); }\n";
	}
	$templateCode .= "\t\t});\n";
	$templateCode .= "\t};\n";
	if(!$dvprint) $templateCode .= "\tif(\$j('#vehicle_registration_number_caption').length) \$j('#vehicle_registration_number_caption').click(function() { vehicle_registration_number_update_autofills$rnd1(); });\n";


	$templateCode.="});";
	$templateCode.="</script>";
	$templateCode .= $lookups;

	// handle enforced parent values for read-only lookup fields
	$filterField = Request::val('FilterField');
	$filterOperator = Request::val('FilterOperator');
	$filterValue = Request::val('FilterValue');

	// don't include blank images in lightbox gallery
	$templateCode = preg_replace('/blank.gif" data-lightbox=".*?"/', 'blank.gif"', $templateCode);

	// don't display empty email links
	$templateCode=preg_replace('/<a .*?href="mailto:".*?<\/a>/', '', $templateCode);

	/* default field values */
	$rdata = $jdata = get_defaults('vehicle_payments');
	if($selected_id) {
		$jdata = get_joined_record('vehicle_payments', $selected_id);
		if($jdata === false) $jdata = get_defaults('vehicle_payments');
		$rdata = $row;
	}
	$templateCode .= loadView('vehicle_payments-ajax-cache', ['rdata' => $rdata, 'jdata' => $jdata]);

	// hook: vehicle_payments_dv
	if(function_exists('vehicle_payments_dv')) {
		$args = [];
		vehicle_payments_dv(($selected_id ? $selected_id : FALSE), getMemberInfo(), $templateCode, $args);
	}

	return $templateCode;
}