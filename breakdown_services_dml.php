<?php

// Data functions (insert, update, delete, form) for table breakdown_services

// This script and data application were generated by AppGini 22.13
// Download AppGini for free from https://bigprof.com/appgini/download/

function breakdown_services_insert(&$error_message = '') {
	global $Translation;

	// mm: can member insert record?
	$arrPerm = getTablePermissions('breakdown_services');
	if(!$arrPerm['insert']) return false;

	$data = [
		'breakdown_of_vehicle' => Request::val('breakdown_of_vehicle', ''),
		'breakdown_during_office_hours' => Request::val('breakdown_during_office_hours', ''),
		'breakdown_within_or_outside_the_province' => Request::val('breakdown_within_or_outside_the_province', ''),
		'description_of_vehicle_breakdown_notes' => Request::lookup('description_of_vehicle_breakdown_notes', ''),
		'description_of_vehicle_breakdown' => Request::fileUpload('description_of_vehicle_breakdown', [
			'maxSize' => 5376000,
			'types' => 'txt|doc|docx|docm|odt|pdf|rtf',
			'noRename' => false,
			'dir' => '',
			'success' => function($name, $selected_id) {
			},
			'failure' => function($selected_id, $fileRemoved) {
				if(!strlen(Request::val('SelectedID'))) return '';

				/* for empty upload fields, when saving a copy of an existing record, copy the original upload field */
				return existing_value('breakdown_services', 'description_of_vehicle_breakdown', Request::val('SelectedID'));
			},
		]),
		'date_of_vehicle_breakdown' => Request::dateComponents('date_of_vehicle_breakdown', ''),
		'work_allocation_reference_number' => Request::lookup('work_allocation_reference_number', ''),
		'job_card_number' => Request::lookup('job_card_number', ''),
		'vehicle_registration_number' => Request::lookup('vehicle_registration_number', ''),
		'engine_number' => Request::lookup('vehicle_registration_number'),
		'closing_km' => Request::lookup('closing_km', ''),
		'date_of_vehicle_reactivation' => Request::dateComponents('date_of_vehicle_reactivation', ''),
		'type_of_expenditure' => Request::val('type_of_expenditure', ''),
		'labour_category' => Request::val('labour_category', ''),
		'part_number' => Request::lookup('part_number', ''),
		'part_name' => Request::lookup('part_name', ''),
		'part_manufacturer_name' => Request::lookup('part_manufacturer_name', ''),
		'quantity' => Request::val('quantity', ''),
		'expense_of_item' => Request::val('expense_of_item', '0.00'),
		'labour_category_1' => Request::val('labour_category_1', ''),
		'part_number_1' => Request::lookup('part_number_1', ''),
		'part_name_1' => Request::lookup('part_name_1', ''),
		'part_manufacturer_name_1' => Request::lookup('part_manufacturer_name_1', ''),
		'quantity_1' => Request::val('quantity_1', ''),
		'expense_of_item_1' => Request::val('expense_of_item_1', '0.00'),
		'material_cost' => Request::val('material_cost', '0.00'),
		'average_worktime_hrs' => Request::val('average_worktime_hrs', ''),
		'standard_labour_cost_per_hour' => Request::val('standard_labour_cost_per_hour', '0.00'),
		'labour_charges' => Request::val('labour_charges', ''),
		'vat' => Request::val('vat', '0.15'),
		'total_amount' => Request::val('total_amount', ''),
		'workshop_name' => Request::lookup('workshop_name', ''),
		'work_order_status' => Request::val('work_order_status', ''),
		'comments' => Request::val('comments', ''),
		'upload_invoice' => Request::fileUpload('upload_invoice', [
			'maxSize' => 5242880,
			'types' => 'txt|doc|docx|docm|odt|pdf|rtf',
			'noRename' => true,
			'dir' => '',
			'success' => function($name, $selected_id) {
			},
			'failure' => function($selected_id, $fileRemoved) {
				if(!strlen(Request::val('SelectedID'))) return '';

				/* for empty upload fields, when saving a copy of an existing record, copy the original upload field */
				return existing_value('breakdown_services', 'upload_invoice', Request::val('SelectedID'));
			},
		]),
		'receptionist' => Request::lookup('description_of_vehicle_breakdown_notes'),
		'receptionist_contact_email' => Request::lookup('description_of_vehicle_breakdown_notes'),
		'date_captured' => mysql_datetime(Request::val('date_captured', '')),
	];


	// hook: breakdown_services_before_insert
	if(function_exists('breakdown_services_before_insert')) {
		$args = [];
		if(!breakdown_services_before_insert($data, getMemberInfo(), $args)) {
			if(isset($args['error_message'])) $error_message = $args['error_message'];
			return false;
		}
	}

	$error = '';
	// set empty fields to NULL
	$data = array_map(function($v) { return ($v === '' ? NULL : $v); }, $data);
	insert('breakdown_services', backtick_keys_once($data), $error);
	if($error) {
		$error_message = $error;
		return false;
	}

	$recID = db_insert_id(db_link());

	update_calc_fields('breakdown_services', $recID, calculated_fields()['breakdown_services']);

	// hook: breakdown_services_after_insert
	if(function_exists('breakdown_services_after_insert')) {
		$res = sql("SELECT * FROM `breakdown_services` WHERE `breakdown_id`='" . makeSafe($recID, false) . "' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)) {
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = makeSafe($recID, false);
		$args = [];
		if(!breakdown_services_after_insert($data, getMemberInfo(), $args)) { return $recID; }
	}

	// mm: save ownership data
	set_record_owner('breakdown_services', $recID, getLoggedMemberID());

	// if this record is a copy of another record, copy children if applicable
	if(strlen(Request::val('SelectedID'))) breakdown_services_copy_children($recID, Request::val('SelectedID'));

	return $recID;
}

function breakdown_services_copy_children($destination_id, $source_id) {
	global $Translation;
	$requests = []; // array of curl handlers for launching insert requests
	$eo = ['silentErrors' => true];
	$safe_sid = makeSafe($source_id);

	// launch requests, asynchronously
	curl_batch($requests);
}

function breakdown_services_delete($selected_id, $AllowDeleteOfParents = false, $skipChecks = false) {
	// insure referential integrity ...
	global $Translation;
	$selected_id = makeSafe($selected_id);

	// mm: can member delete record?
	if(!check_record_permission('breakdown_services', $selected_id, 'delete')) {
		return $Translation['You don\'t have enough permissions to delete this record'];
	}

	// hook: breakdown_services_before_delete
	if(function_exists('breakdown_services_before_delete')) {
		$args = [];
		if(!breakdown_services_before_delete($selected_id, $skipChecks, getMemberInfo(), $args))
			return $Translation['Couldn\'t delete this record'] . (
				!empty($args['error_message']) ?
					'<div class="text-bold">' . strip_tags($args['error_message']) . '</div>'
					: '' 
			);
	}

	// child table: vehicle_history
	$res = sql("SELECT `breakdown_id` FROM `breakdown_services` WHERE `breakdown_id`='{$selected_id}'", $eo);
	$breakdown_id = db_fetch_row($res);
	$rires = sql("SELECT COUNT(1) FROM `vehicle_history` WHERE `total_cost`='" . makeSafe($breakdown_id[0]) . "'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'vehicle_history', $RetMsg);
		return $RetMsg;
	} elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation['confirm delete'];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'vehicle_history', $RetMsg);
		$RetMsg = str_replace('<Delete>', '<input type="button" class="btn btn-danger" value="' . html_attr($Translation['yes']) . '" onClick="window.location = \'breakdown_services_view.php?SelectedID=' . urlencode($selected_id) . '&delete_x=1&confirmed=1&csrf_token=' . urlencode(csrf_token(false, true)) . '\';">', $RetMsg);
		$RetMsg = str_replace('<Cancel>', '<input type="button" class="btn btn-success" value="' . html_attr($Translation[ 'no']) . '" onClick="window.location = \'breakdown_services_view.php?SelectedID=' . urlencode($selected_id) . '\';">', $RetMsg);
		return $RetMsg;
	}

	sql("DELETE FROM `breakdown_services` WHERE `breakdown_id`='{$selected_id}'", $eo);

	// hook: breakdown_services_after_delete
	if(function_exists('breakdown_services_after_delete')) {
		$args = [];
		breakdown_services_after_delete($selected_id, getMemberInfo(), $args);
	}

	// mm: delete ownership data
	sql("DELETE FROM `membership_userrecords` WHERE `tableName`='breakdown_services' AND `pkValue`='{$selected_id}'", $eo);
}

function breakdown_services_update(&$selected_id, &$error_message = '') {
	global $Translation;

	// mm: can member edit record?
	if(!check_record_permission('breakdown_services', $selected_id, 'edit')) return false;

	$data = [
		'breakdown_of_vehicle' => Request::val('breakdown_of_vehicle', ''),
		'breakdown_during_office_hours' => Request::val('breakdown_during_office_hours', ''),
		'breakdown_within_or_outside_the_province' => Request::val('breakdown_within_or_outside_the_province', ''),
		'description_of_vehicle_breakdown_notes' => Request::lookup('description_of_vehicle_breakdown_notes', ''),
		'description_of_vehicle_breakdown' => Request::fileUpload('description_of_vehicle_breakdown', [
			'maxSize' => 5376000,
			'types' => 'txt|doc|docx|docm|odt|pdf|rtf',
			'noRename' => false,
			'dir' => '',
			'id' => $selected_id,
			'success' => function($name, $selected_id) {
			},
			'removeOnRequest' => true,
			'remove' => function($selected_id) {
				// do nothing: preserve removed files on server.
			},
			'failure' => function($selected_id, $fileRemoved) {
				if($fileRemoved) return '';
				return existing_value('breakdown_services', 'description_of_vehicle_breakdown', $selected_id);
			},
		]),
		'date_of_vehicle_breakdown' => Request::dateComponents('date_of_vehicle_breakdown', ''),
		'work_allocation_reference_number' => Request::lookup('work_allocation_reference_number', ''),
		'job_card_number' => Request::lookup('job_card_number', ''),
		'vehicle_registration_number' => Request::lookup('vehicle_registration_number', ''),
		'engine_number' => Request::lookup('vehicle_registration_number'),
		'closing_km' => Request::lookup('closing_km', ''),
		'date_of_vehicle_reactivation' => Request::dateComponents('date_of_vehicle_reactivation', ''),
		'type_of_expenditure' => Request::val('type_of_expenditure', ''),
		'labour_category' => Request::val('labour_category', ''),
		'part_number' => Request::lookup('part_number', ''),
		'part_name' => Request::lookup('part_name', ''),
		'part_manufacturer_name' => Request::lookup('part_manufacturer_name', ''),
		'quantity' => Request::val('quantity', ''),
		'expense_of_item' => Request::val('expense_of_item', ''),
		'labour_category_1' => Request::val('labour_category_1', ''),
		'part_number_1' => Request::lookup('part_number_1', ''),
		'part_name_1' => Request::lookup('part_name_1', ''),
		'part_manufacturer_name_1' => Request::lookup('part_manufacturer_name_1', ''),
		'quantity_1' => Request::val('quantity_1', ''),
		'expense_of_item_1' => Request::val('expense_of_item_1', ''),
		'material_cost' => Request::val('material_cost', ''),
		'average_worktime_hrs' => Request::val('average_worktime_hrs', ''),
		'standard_labour_cost_per_hour' => Request::val('standard_labour_cost_per_hour', ''),
		'labour_charges' => Request::val('labour_charges', ''),
		'vat' => Request::val('vat', ''),
		'total_amount' => Request::val('total_amount', ''),
		'workshop_name' => Request::lookup('workshop_name', ''),
		'work_order_status' => Request::val('work_order_status', ''),
		'comments' => Request::val('comments', ''),
		'upload_invoice' => Request::fileUpload('upload_invoice', [
			'maxSize' => 5242880,
			'types' => 'txt|doc|docx|docm|odt|pdf|rtf',
			'noRename' => true,
			'dir' => '',
			'id' => $selected_id,
			'success' => function($name, $selected_id) {
			},
			'removeOnRequest' => true,
			'remove' => function($selected_id) {
				// do nothing: preserve removed files on server.
			},
			'failure' => function($selected_id, $fileRemoved) {
				if($fileRemoved) return '';
				return existing_value('breakdown_services', 'upload_invoice', $selected_id);
			},
		]),
		'receptionist' => Request::lookup('description_of_vehicle_breakdown_notes'),
		'receptionist_contact_email' => Request::lookup('description_of_vehicle_breakdown_notes'),
		'date_captured' => mysql_datetime(Request::val('date_captured', '')),
	];

	// get existing values
	$old_data = getRecord('breakdown_services', $selected_id);
	if(is_array($old_data)) {
		$old_data = array_map('makeSafe', $old_data);
		$old_data['selectedID'] = makeSafe($selected_id);
	}

	$data['selectedID'] = makeSafe($selected_id);

	// hook: breakdown_services_before_update
	if(function_exists('breakdown_services_before_update')) {
		$args = ['old_data' => $old_data];
		if(!breakdown_services_before_update($data, getMemberInfo(), $args)) {
			if(isset($args['error_message'])) $error_message = $args['error_message'];
			return false;
		}
	}

	$set = $data; unset($set['selectedID']);
	foreach ($set as $field => $value) {
		$set[$field] = ($value !== '' && $value !== NULL) ? $value : NULL;
	}

	if(!update(
		'breakdown_services', 
		backtick_keys_once($set), 
		['`breakdown_id`' => $selected_id], 
		$error_message
	)) {
		echo $error_message;
		echo '<a href="breakdown_services_view.php?SelectedID=' . urlencode($selected_id) . "\">{$Translation['< back']}</a>";
		exit;
	}


	$eo = ['silentErrors' => true];

	update_calc_fields('breakdown_services', $data['selectedID'], calculated_fields()['breakdown_services']);

	// hook: breakdown_services_after_update
	if(function_exists('breakdown_services_after_update')) {
		$res = sql("SELECT * FROM `breakdown_services` WHERE `breakdown_id`='{$data['selectedID']}' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)) $data = array_map('makeSafe', $row);

		$data['selectedID'] = $data['breakdown_id'];
		$args = ['old_data' => $old_data];
		if(!breakdown_services_after_update($data, getMemberInfo(), $args)) return;
	}

	// mm: update ownership data
	sql("UPDATE `membership_userrecords` SET `dateUpdated`='" . time() . "' WHERE `tableName`='breakdown_services' AND `pkValue`='" . makeSafe($selected_id) . "'", $eo);
}

function breakdown_services_form($selected_id = '', $AllowUpdate = 1, $AllowInsert = 1, $AllowDelete = 1, $separateDV = 0, $TemplateDV = '', $TemplateDVP = '') {
	// function to return an editable form for a table records
	// and fill it with data of record whose ID is $selected_id. If $selected_id
	// is empty, an empty form is shown, with only an 'Add New'
	// button displayed.

	global $Translation;
	$eo = ['silentErrors' => true];
	$noUploads = null;
	$row = $urow = $jsReadOnly = $jsEditable = $lookups = null;

	$noSaveAsCopy = true;

	// mm: get table permissions
	$arrPerm = getTablePermissions('breakdown_services');
	if(!$arrPerm['insert'] && $selected_id == '')
		// no insert permission and no record selected
		// so show access denied error unless TVDV
		return $separateDV ? $Translation['tableAccessDenied'] : '';
	$AllowInsert = ($arrPerm['insert'] ? true : false);
	// print preview?
	$dvprint = false;
	if(strlen($selected_id) && Request::val('dvprint_x') != '') {
		$dvprint = true;
	}

	$filterer_description_of_vehicle_breakdown_notes = Request::val('filterer_description_of_vehicle_breakdown_notes');
	$filterer_work_allocation_reference_number = Request::val('filterer_work_allocation_reference_number');
	$filterer_job_card_number = Request::val('filterer_job_card_number');
	$filterer_vehicle_registration_number = Request::val('filterer_vehicle_registration_number');
	$filterer_closing_km = Request::val('filterer_closing_km');
	$filterer_part_number = Request::val('filterer_part_number');
	$filterer_part_name = Request::val('filterer_part_name');
	$filterer_part_manufacturer_name = Request::val('filterer_part_manufacturer_name');
	$filterer_part_number_1 = Request::val('filterer_part_number_1');
	$filterer_part_name_1 = Request::val('filterer_part_name_1');
	$filterer_part_manufacturer_name_1 = Request::val('filterer_part_manufacturer_name_1');
	$filterer_workshop_name = Request::val('filterer_workshop_name');

	// populate filterers, starting from children to grand-parents
	if($filterer_description_of_vehicle_breakdown_notes && !$filterer_vehicle_registration_number) $filterer_vehicle_registration_number = sqlValue("select vehicle_registration_number from reception where reception_user_id='" . makeSafe($filterer_description_of_vehicle_breakdown_notes) . "'");
	if($filterer_work_allocation_reference_number && !$filterer_vehicle_registration_number) $filterer_vehicle_registration_number = sqlValue("select vehicle_registration_number from work_allocation where work_allocation_id='" . makeSafe($filterer_work_allocation_reference_number) . "'");
	if($filterer_job_card_number && !$filterer_vehicle_registration_number) $filterer_vehicle_registration_number = sqlValue("select vehicle_registration_number from reception where reception_user_id='" . makeSafe($filterer_job_card_number) . "'");
	if($filterer_closing_km && !$filterer_vehicle_registration_number) $filterer_vehicle_registration_number = sqlValue("select vehicle_registration_number from log_sheet where fuel_log_sheet_id='" . makeSafe($filterer_closing_km) . "'");

	// unique random identifier
	$rnd1 = ($dvprint ? rand(1000000, 9999999) : '');
	// combobox: breakdown_of_vehicle
	$combo_breakdown_of_vehicle = new Combo;
	$combo_breakdown_of_vehicle->ListType = 2;
	$combo_breakdown_of_vehicle->MultipleSeparator = ', ';
	$combo_breakdown_of_vehicle->ListBoxHeight = 10;
	$combo_breakdown_of_vehicle->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/breakdown_services.breakdown_of_vehicle.csv')) {
		$breakdown_of_vehicle_data = addslashes(implode('', @file(__DIR__ . '/hooks/breakdown_services.breakdown_of_vehicle.csv')));
		$combo_breakdown_of_vehicle->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($breakdown_of_vehicle_data))));
		$combo_breakdown_of_vehicle->ListData = $combo_breakdown_of_vehicle->ListItem;
	} else {
		$combo_breakdown_of_vehicle->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("Yes;;No"))));
		$combo_breakdown_of_vehicle->ListData = $combo_breakdown_of_vehicle->ListItem;
	}
	$combo_breakdown_of_vehicle->SelectName = 'breakdown_of_vehicle';
	// combobox: breakdown_during_office_hours
	$combo_breakdown_during_office_hours = new Combo;
	$combo_breakdown_during_office_hours->ListType = 2;
	$combo_breakdown_during_office_hours->MultipleSeparator = ', ';
	$combo_breakdown_during_office_hours->ListBoxHeight = 10;
	$combo_breakdown_during_office_hours->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/breakdown_services.breakdown_during_office_hours.csv')) {
		$breakdown_during_office_hours_data = addslashes(implode('', @file(__DIR__ . '/hooks/breakdown_services.breakdown_during_office_hours.csv')));
		$combo_breakdown_during_office_hours->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($breakdown_during_office_hours_data))));
		$combo_breakdown_during_office_hours->ListData = $combo_breakdown_during_office_hours->ListItem;
	} else {
		$combo_breakdown_during_office_hours->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("Yes;;No"))));
		$combo_breakdown_during_office_hours->ListData = $combo_breakdown_during_office_hours->ListItem;
	}
	$combo_breakdown_during_office_hours->SelectName = 'breakdown_during_office_hours';
	// combobox: breakdown_within_or_outside_the_province
	$combo_breakdown_within_or_outside_the_province = new Combo;
	$combo_breakdown_within_or_outside_the_province->ListType = 2;
	$combo_breakdown_within_or_outside_the_province->MultipleSeparator = ', ';
	$combo_breakdown_within_or_outside_the_province->ListBoxHeight = 10;
	$combo_breakdown_within_or_outside_the_province->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/breakdown_services.breakdown_within_or_outside_the_province.csv')) {
		$breakdown_within_or_outside_the_province_data = addslashes(implode('', @file(__DIR__ . '/hooks/breakdown_services.breakdown_within_or_outside_the_province.csv')));
		$combo_breakdown_within_or_outside_the_province->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($breakdown_within_or_outside_the_province_data))));
		$combo_breakdown_within_or_outside_the_province->ListData = $combo_breakdown_within_or_outside_the_province->ListItem;
	} else {
		$combo_breakdown_within_or_outside_the_province->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("Within the Province;; Outside the Province"))));
		$combo_breakdown_within_or_outside_the_province->ListData = $combo_breakdown_within_or_outside_the_province->ListItem;
	}
	$combo_breakdown_within_or_outside_the_province->SelectName = 'breakdown_within_or_outside_the_province';
	// combobox: description_of_vehicle_breakdown_notes, filterable by: vehicle_registration_number
	$combo_description_of_vehicle_breakdown_notes = new DataCombo;
	// combobox: date_of_vehicle_breakdown
	$combo_date_of_vehicle_breakdown = new DateCombo;
	$combo_date_of_vehicle_breakdown->DateFormat = "dmy";
	$combo_date_of_vehicle_breakdown->MinYear = defined('breakdown_services.date_of_vehicle_breakdown.MinYear') ? constant('breakdown_services.date_of_vehicle_breakdown.MinYear') : 1900;
	$combo_date_of_vehicle_breakdown->MaxYear = defined('breakdown_services.date_of_vehicle_breakdown.MaxYear') ? constant('breakdown_services.date_of_vehicle_breakdown.MaxYear') : 2100;
	$combo_date_of_vehicle_breakdown->DefaultDate = parseMySQLDate('', '');
	$combo_date_of_vehicle_breakdown->MonthNames = $Translation['month names'];
	$combo_date_of_vehicle_breakdown->NamePrefix = 'date_of_vehicle_breakdown';
	// combobox: work_allocation_reference_number, filterable by: vehicle_registration_number
	$combo_work_allocation_reference_number = new DataCombo;
	// combobox: job_card_number, filterable by: vehicle_registration_number
	$combo_job_card_number = new DataCombo;
	// combobox: vehicle_registration_number
	$combo_vehicle_registration_number = new DataCombo;
	// combobox: closing_km, filterable by: vehicle_registration_number
	$combo_closing_km = new DataCombo;
	// combobox: date_of_vehicle_reactivation
	$combo_date_of_vehicle_reactivation = new DateCombo;
	$combo_date_of_vehicle_reactivation->DateFormat = "dmy";
	$combo_date_of_vehicle_reactivation->MinYear = defined('breakdown_services.date_of_vehicle_reactivation.MinYear') ? constant('breakdown_services.date_of_vehicle_reactivation.MinYear') : 1900;
	$combo_date_of_vehicle_reactivation->MaxYear = defined('breakdown_services.date_of_vehicle_reactivation.MaxYear') ? constant('breakdown_services.date_of_vehicle_reactivation.MaxYear') : 2100;
	$combo_date_of_vehicle_reactivation->DefaultDate = parseMySQLDate('', '');
	$combo_date_of_vehicle_reactivation->MonthNames = $Translation['month names'];
	$combo_date_of_vehicle_reactivation->NamePrefix = 'date_of_vehicle_reactivation';
	// combobox: type_of_expenditure
	$combo_type_of_expenditure = new Combo;
	$combo_type_of_expenditure->ListType = 0;
	$combo_type_of_expenditure->MultipleSeparator = ', ';
	$combo_type_of_expenditure->ListBoxHeight = 10;
	$combo_type_of_expenditure->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/breakdown_services.type_of_expenditure.csv')) {
		$type_of_expenditure_data = addslashes(implode('', @file(__DIR__ . '/hooks/breakdown_services.type_of_expenditure.csv')));
		$combo_type_of_expenditure->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($type_of_expenditure_data))));
		$combo_type_of_expenditure->ListData = $combo_type_of_expenditure->ListItem;
	} else {
		$combo_type_of_expenditure->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("Part;;Material;;Labour;;Other"))));
		$combo_type_of_expenditure->ListData = $combo_type_of_expenditure->ListItem;
	}
	$combo_type_of_expenditure->SelectName = 'type_of_expenditure';
	// combobox: labour_category
	$combo_labour_category = new Combo;
	$combo_labour_category->ListType = 0;
	$combo_labour_category->MultipleSeparator = ', ';
	$combo_labour_category->ListBoxHeight = 10;
	$combo_labour_category->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/breakdown_services.labour_category.csv')) {
		$labour_category_data = addslashes(implode('', @file(__DIR__ . '/hooks/breakdown_services.labour_category.csv')));
		$combo_labour_category->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($labour_category_data))));
		$combo_labour_category->ListData = $combo_labour_category->ListItem;
	} else {
		$combo_labour_category->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("Change::Replace;;Inspect;;Rotate"))));
		$combo_labour_category->ListData = $combo_labour_category->ListItem;
	}
	$combo_labour_category->SelectName = 'labour_category';
	// combobox: part_number
	$combo_part_number = new DataCombo;
	// combobox: part_name
	$combo_part_name = new DataCombo;
	// combobox: part_manufacturer_name
	$combo_part_manufacturer_name = new DataCombo;
	// combobox: labour_category_1
	$combo_labour_category_1 = new Combo;
	$combo_labour_category_1->ListType = 0;
	$combo_labour_category_1->MultipleSeparator = ', ';
	$combo_labour_category_1->ListBoxHeight = 10;
	$combo_labour_category_1->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/breakdown_services.labour_category_1.csv')) {
		$labour_category_1_data = addslashes(implode('', @file(__DIR__ . '/hooks/breakdown_services.labour_category_1.csv')));
		$combo_labour_category_1->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($labour_category_1_data))));
		$combo_labour_category_1->ListData = $combo_labour_category_1->ListItem;
	} else {
		$combo_labour_category_1->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("Change::Replace;;Inspect;;Rotate"))));
		$combo_labour_category_1->ListData = $combo_labour_category_1->ListItem;
	}
	$combo_labour_category_1->SelectName = 'labour_category_1';
	// combobox: part_number_1
	$combo_part_number_1 = new DataCombo;
	// combobox: part_name_1
	$combo_part_name_1 = new DataCombo;
	// combobox: part_manufacturer_name_1
	$combo_part_manufacturer_name_1 = new DataCombo;
	// combobox: workshop_name
	$combo_workshop_name = new DataCombo;
	// combobox: work_order_status
	$combo_work_order_status = new Combo;
	$combo_work_order_status->ListType = 2;
	$combo_work_order_status->MultipleSeparator = ', ';
	$combo_work_order_status->ListBoxHeight = 10;
	$combo_work_order_status->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/breakdown_services.work_order_status.csv')) {
		$work_order_status_data = addslashes(implode('', @file(__DIR__ . '/hooks/breakdown_services.work_order_status.csv')));
		$combo_work_order_status->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($work_order_status_data))));
		$combo_work_order_status->ListData = $combo_work_order_status->ListItem;
	} else {
		$combo_work_order_status->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("Pending;;Processing;;Closed"))));
		$combo_work_order_status->ListData = $combo_work_order_status->ListItem;
	}
	$combo_work_order_status->SelectName = 'work_order_status';

	if($selected_id) {
		// mm: check member permissions
		if(!$arrPerm['view']) return $Translation['tableAccessDenied'];

		// mm: who is the owner?
		$ownerGroupID = sqlValue("SELECT `groupID` FROM `membership_userrecords` WHERE `tableName`='breakdown_services' AND `pkValue`='" . makeSafe($selected_id) . "'");
		$ownerMemberID = sqlValue("SELECT LCASE(`memberID`) FROM `membership_userrecords` WHERE `tableName`='breakdown_services' AND `pkValue`='" . makeSafe($selected_id) . "'");

		if($arrPerm['view'] == 1 && getLoggedMemberID() != $ownerMemberID) return $Translation['tableAccessDenied'];
		if($arrPerm['view'] == 2 && getLoggedGroupID() != $ownerGroupID) return $Translation['tableAccessDenied'];

		// can edit?
		$AllowUpdate = 0;
		if(($arrPerm['edit'] == 1 && $ownerMemberID == getLoggedMemberID()) || ($arrPerm['edit'] == 2 && $ownerGroupID == getLoggedGroupID()) || $arrPerm['edit'] == 3) {
			$AllowUpdate = 1;
		}

		$res = sql("SELECT * FROM `breakdown_services` WHERE `breakdown_id`='" . makeSafe($selected_id) . "'", $eo);
		if(!($row = db_fetch_array($res))) {
			return error_message($Translation['No records found'], 'breakdown_services_view.php', false);
		}
		$combo_breakdown_of_vehicle->SelectedData = $row['breakdown_of_vehicle'];
		$combo_breakdown_during_office_hours->SelectedData = $row['breakdown_during_office_hours'];
		$combo_breakdown_within_or_outside_the_province->SelectedData = $row['breakdown_within_or_outside_the_province'];
		$combo_description_of_vehicle_breakdown_notes->SelectedData = $row['description_of_vehicle_breakdown_notes'];
		$combo_date_of_vehicle_breakdown->DefaultDate = $row['date_of_vehicle_breakdown'];
		$combo_work_allocation_reference_number->SelectedData = $row['work_allocation_reference_number'];
		$combo_job_card_number->SelectedData = $row['job_card_number'];
		$combo_vehicle_registration_number->SelectedData = $row['vehicle_registration_number'];
		$combo_closing_km->SelectedData = $row['closing_km'];
		$combo_date_of_vehicle_reactivation->DefaultDate = $row['date_of_vehicle_reactivation'];
		$combo_type_of_expenditure->SelectedData = $row['type_of_expenditure'];
		$combo_labour_category->SelectedData = $row['labour_category'];
		$combo_part_number->SelectedData = $row['part_number'];
		$combo_part_name->SelectedData = $row['part_name'];
		$combo_part_manufacturer_name->SelectedData = $row['part_manufacturer_name'];
		$combo_labour_category_1->SelectedData = $row['labour_category_1'];
		$combo_part_number_1->SelectedData = $row['part_number_1'];
		$combo_part_name_1->SelectedData = $row['part_name_1'];
		$combo_part_manufacturer_name_1->SelectedData = $row['part_manufacturer_name_1'];
		$combo_workshop_name->SelectedData = $row['workshop_name'];
		$combo_work_order_status->SelectedData = $row['work_order_status'];
		$urow = $row; /* unsanitized data */
		$row = array_map('safe_html', $row);
	} else {
		$filterField = Request::val('FilterField');
		$filterOperator = Request::val('FilterOperator');
		$filterValue = Request::val('FilterValue');
		$combo_breakdown_of_vehicle->SelectedText = (isset($filterField[1]) && $filterField[1] == '2' && $filterOperator[1] == '<=>' ? $filterValue[1] : '');
		$combo_breakdown_during_office_hours->SelectedText = (isset($filterField[1]) && $filterField[1] == '3' && $filterOperator[1] == '<=>' ? $filterValue[1] : '');
		$combo_breakdown_within_or_outside_the_province->SelectedText = (isset($filterField[1]) && $filterField[1] == '4' && $filterOperator[1] == '<=>' ? $filterValue[1] : '');
		$combo_description_of_vehicle_breakdown_notes->SelectedData = $filterer_description_of_vehicle_breakdown_notes;
		$combo_work_allocation_reference_number->SelectedData = $filterer_work_allocation_reference_number;
		$combo_job_card_number->SelectedData = $filterer_job_card_number;
		$combo_vehicle_registration_number->SelectedData = $filterer_vehicle_registration_number;
		$combo_closing_km->SelectedData = $filterer_closing_km;
		$combo_type_of_expenditure->SelectedText = (isset($filterField[1]) && $filterField[1] == '14' && $filterOperator[1] == '<=>' ? $filterValue[1] : '');
		$combo_labour_category->SelectedText = (isset($filterField[1]) && $filterField[1] == '15' && $filterOperator[1] == '<=>' ? $filterValue[1] : '');
		$combo_part_number->SelectedData = $filterer_part_number;
		$combo_part_name->SelectedData = $filterer_part_name;
		$combo_part_manufacturer_name->SelectedData = $filterer_part_manufacturer_name;
		$combo_labour_category_1->SelectedText = (isset($filterField[1]) && $filterField[1] == '21' && $filterOperator[1] == '<=>' ? $filterValue[1] : '');
		$combo_part_number_1->SelectedData = $filterer_part_number_1;
		$combo_part_name_1->SelectedData = $filterer_part_name_1;
		$combo_part_manufacturer_name_1->SelectedData = $filterer_part_manufacturer_name_1;
		$combo_workshop_name->SelectedData = $filterer_workshop_name;
		$combo_work_order_status->SelectedText = (isset($filterField[1]) && $filterField[1] == '34' && $filterOperator[1] == '<=>' ? $filterValue[1] : '');
	}
	$combo_breakdown_of_vehicle->Render();
	$combo_breakdown_during_office_hours->Render();
	$combo_breakdown_within_or_outside_the_province->Render();
	$combo_description_of_vehicle_breakdown_notes->HTML = '<span id="description_of_vehicle_breakdown_notes-container' . $rnd1 . '"></span><input type="hidden" name="description_of_vehicle_breakdown_notes" id="description_of_vehicle_breakdown_notes' . $rnd1 . '" value="' . html_attr($combo_description_of_vehicle_breakdown_notes->SelectedData) . '">';
	$combo_description_of_vehicle_breakdown_notes->MatchText = '<span id="description_of_vehicle_breakdown_notes-container-readonly' . $rnd1 . '"></span><input type="hidden" name="description_of_vehicle_breakdown_notes" id="description_of_vehicle_breakdown_notes' . $rnd1 . '" value="' . html_attr($combo_description_of_vehicle_breakdown_notes->SelectedData) . '">';
	$combo_work_allocation_reference_number->HTML = '<span id="work_allocation_reference_number-container' . $rnd1 . '"></span><input type="hidden" name="work_allocation_reference_number" id="work_allocation_reference_number' . $rnd1 . '" value="' . html_attr($combo_work_allocation_reference_number->SelectedData) . '">';
	$combo_work_allocation_reference_number->MatchText = '<span id="work_allocation_reference_number-container-readonly' . $rnd1 . '"></span><input type="hidden" name="work_allocation_reference_number" id="work_allocation_reference_number' . $rnd1 . '" value="' . html_attr($combo_work_allocation_reference_number->SelectedData) . '">';
	$combo_job_card_number->HTML = '<span id="job_card_number-container' . $rnd1 . '"></span><input type="hidden" name="job_card_number" id="job_card_number' . $rnd1 . '" value="' . html_attr($combo_job_card_number->SelectedData) . '">';
	$combo_job_card_number->MatchText = '<span id="job_card_number-container-readonly' . $rnd1 . '"></span><input type="hidden" name="job_card_number" id="job_card_number' . $rnd1 . '" value="' . html_attr($combo_job_card_number->SelectedData) . '">';
	$combo_vehicle_registration_number->HTML = '<span id="vehicle_registration_number-container' . $rnd1 . '"></span><input type="hidden" name="vehicle_registration_number" id="vehicle_registration_number' . $rnd1 . '" value="' . html_attr($combo_vehicle_registration_number->SelectedData) . '">';
	$combo_vehicle_registration_number->MatchText = '<span id="vehicle_registration_number-container-readonly' . $rnd1 . '"></span><input type="hidden" name="vehicle_registration_number" id="vehicle_registration_number' . $rnd1 . '" value="' . html_attr($combo_vehicle_registration_number->SelectedData) . '">';
	$combo_closing_km->HTML = '<span id="closing_km-container' . $rnd1 . '"></span><input type="hidden" name="closing_km" id="closing_km' . $rnd1 . '" value="' . html_attr($combo_closing_km->SelectedData) . '">';
	$combo_closing_km->MatchText = '<span id="closing_km-container-readonly' . $rnd1 . '"></span><input type="hidden" name="closing_km" id="closing_km' . $rnd1 . '" value="' . html_attr($combo_closing_km->SelectedData) . '">';
	$combo_type_of_expenditure->Render();
	$combo_labour_category->Render();
	$combo_part_number->HTML = '<span id="part_number-container' . $rnd1 . '"></span><input type="hidden" name="part_number" id="part_number' . $rnd1 . '" value="' . html_attr($combo_part_number->SelectedData) . '">';
	$combo_part_number->MatchText = '<span id="part_number-container-readonly' . $rnd1 . '"></span><input type="hidden" name="part_number" id="part_number' . $rnd1 . '" value="' . html_attr($combo_part_number->SelectedData) . '">';
	$combo_part_name->HTML = '<span id="part_name-container' . $rnd1 . '"></span><input type="hidden" name="part_name" id="part_name' . $rnd1 . '" value="' . html_attr($combo_part_name->SelectedData) . '">';
	$combo_part_name->MatchText = '<span id="part_name-container-readonly' . $rnd1 . '"></span><input type="hidden" name="part_name" id="part_name' . $rnd1 . '" value="' . html_attr($combo_part_name->SelectedData) . '">';
	$combo_part_manufacturer_name->HTML = '<span id="part_manufacturer_name-container' . $rnd1 . '"></span><input type="hidden" name="part_manufacturer_name" id="part_manufacturer_name' . $rnd1 . '" value="' . html_attr($combo_part_manufacturer_name->SelectedData) . '">';
	$combo_part_manufacturer_name->MatchText = '<span id="part_manufacturer_name-container-readonly' . $rnd1 . '"></span><input type="hidden" name="part_manufacturer_name" id="part_manufacturer_name' . $rnd1 . '" value="' . html_attr($combo_part_manufacturer_name->SelectedData) . '">';
	$combo_labour_category_1->Render();
	$combo_part_number_1->HTML = '<span id="part_number_1-container' . $rnd1 . '"></span><input type="hidden" name="part_number_1" id="part_number_1' . $rnd1 . '" value="' . html_attr($combo_part_number_1->SelectedData) . '">';
	$combo_part_number_1->MatchText = '<span id="part_number_1-container-readonly' . $rnd1 . '"></span><input type="hidden" name="part_number_1" id="part_number_1' . $rnd1 . '" value="' . html_attr($combo_part_number_1->SelectedData) . '">';
	$combo_part_name_1->HTML = '<span id="part_name_1-container' . $rnd1 . '"></span><input type="hidden" name="part_name_1" id="part_name_1' . $rnd1 . '" value="' . html_attr($combo_part_name_1->SelectedData) . '">';
	$combo_part_name_1->MatchText = '<span id="part_name_1-container-readonly' . $rnd1 . '"></span><input type="hidden" name="part_name_1" id="part_name_1' . $rnd1 . '" value="' . html_attr($combo_part_name_1->SelectedData) . '">';
	$combo_part_manufacturer_name_1->HTML = '<span id="part_manufacturer_name_1-container' . $rnd1 . '"></span><input type="hidden" name="part_manufacturer_name_1" id="part_manufacturer_name_1' . $rnd1 . '" value="' . html_attr($combo_part_manufacturer_name_1->SelectedData) . '">';
	$combo_part_manufacturer_name_1->MatchText = '<span id="part_manufacturer_name_1-container-readonly' . $rnd1 . '"></span><input type="hidden" name="part_manufacturer_name_1" id="part_manufacturer_name_1' . $rnd1 . '" value="' . html_attr($combo_part_manufacturer_name_1->SelectedData) . '">';
	$combo_workshop_name->HTML = '<span id="workshop_name-container' . $rnd1 . '"></span><input type="hidden" name="workshop_name" id="workshop_name' . $rnd1 . '" value="' . html_attr($combo_workshop_name->SelectedData) . '">';
	$combo_workshop_name->MatchText = '<span id="workshop_name-container-readonly' . $rnd1 . '"></span><input type="hidden" name="workshop_name" id="workshop_name' . $rnd1 . '" value="' . html_attr($combo_workshop_name->SelectedData) . '">';
	$combo_work_order_status->Render();

	ob_start();
	?>

	<script>
		// initial lookup values
		AppGini.current_description_of_vehicle_breakdown_notes__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['description_of_vehicle_breakdown_notes'] : htmlspecialchars($filterer_description_of_vehicle_breakdown_notes, ENT_QUOTES)); ?>"};
		AppGini.current_work_allocation_reference_number__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['work_allocation_reference_number'] : htmlspecialchars($filterer_work_allocation_reference_number, ENT_QUOTES)); ?>"};
		AppGini.current_job_card_number__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['job_card_number'] : htmlspecialchars($filterer_job_card_number, ENT_QUOTES)); ?>"};
		AppGini.current_vehicle_registration_number__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['vehicle_registration_number'] : htmlspecialchars($filterer_vehicle_registration_number, ENT_QUOTES)); ?>"};
		AppGini.current_closing_km__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['closing_km'] : htmlspecialchars($filterer_closing_km, ENT_QUOTES)); ?>"};
		AppGini.current_part_number__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['part_number'] : htmlspecialchars($filterer_part_number, ENT_QUOTES)); ?>"};
		AppGini.current_part_name__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['part_name'] : htmlspecialchars($filterer_part_name, ENT_QUOTES)); ?>"};
		AppGini.current_part_manufacturer_name__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['part_manufacturer_name'] : htmlspecialchars($filterer_part_manufacturer_name, ENT_QUOTES)); ?>"};
		AppGini.current_part_number_1__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['part_number_1'] : htmlspecialchars($filterer_part_number_1, ENT_QUOTES)); ?>"};
		AppGini.current_part_name_1__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['part_name_1'] : htmlspecialchars($filterer_part_name_1, ENT_QUOTES)); ?>"};
		AppGini.current_part_manufacturer_name_1__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['part_manufacturer_name_1'] : htmlspecialchars($filterer_part_manufacturer_name_1, ENT_QUOTES)); ?>"};
		AppGini.current_workshop_name__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['workshop_name'] : htmlspecialchars($filterer_workshop_name, ENT_QUOTES)); ?>"};

		jQuery(function() {
			setTimeout(function() {
				<?php echo (!$AllowUpdate || $dvprint ? 'if(typeof(description_of_vehicle_breakdown_notes_reload__RAND__) == \'function\') description_of_vehicle_breakdown_notes_reload__RAND__(AppGini.current_vehicle_registration_number__RAND__.value);' : ''); ?>
				<?php echo (!$AllowUpdate || $dvprint ? 'if(typeof(work_allocation_reference_number_reload__RAND__) == \'function\') work_allocation_reference_number_reload__RAND__(AppGini.current_vehicle_registration_number__RAND__.value);' : ''); ?>
				<?php echo (!$AllowUpdate || $dvprint ? 'if(typeof(job_card_number_reload__RAND__) == \'function\') job_card_number_reload__RAND__(AppGini.current_vehicle_registration_number__RAND__.value);' : ''); ?>
				if(typeof(vehicle_registration_number_reload__RAND__) == 'function') vehicle_registration_number_reload__RAND__();
				<?php echo (!$AllowUpdate || $dvprint ? 'if(typeof(closing_km_reload__RAND__) == \'function\') closing_km_reload__RAND__(AppGini.current_vehicle_registration_number__RAND__.value);' : ''); ?>
				if(typeof(part_number_reload__RAND__) == 'function') part_number_reload__RAND__();
				if(typeof(part_name_reload__RAND__) == 'function') part_name_reload__RAND__();
				if(typeof(part_manufacturer_name_reload__RAND__) == 'function') part_manufacturer_name_reload__RAND__();
				if(typeof(part_number_1_reload__RAND__) == 'function') part_number_1_reload__RAND__();
				if(typeof(part_name_1_reload__RAND__) == 'function') part_name_1_reload__RAND__();
				if(typeof(part_manufacturer_name_1_reload__RAND__) == 'function') part_manufacturer_name_1_reload__RAND__();
				if(typeof(workshop_name_reload__RAND__) == 'function') workshop_name_reload__RAND__();
			}, 50); /* we need to slightly delay client-side execution of the above code to allow AppGini.ajaxCache to work */
		});
		function description_of_vehicle_breakdown_notes_reload__RAND__(filterer_vehicle_registration_number) {
		<?php if(($AllowUpdate || ($arrPerm['insert'] && !$selected_id)) && !$dvprint) { ?>

			$j("#description_of_vehicle_breakdown_notes-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { filterer_vehicle_registration_number: filterer_vehicle_registration_number, id: AppGini.current_description_of_vehicle_breakdown_notes__RAND__.value, t: 'breakdown_services', f: 'description_of_vehicle_breakdown_notes' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="description_of_vehicle_breakdown_notes"]').val(resp.results[0].id);
							$j('[id=description_of_vehicle_breakdown_notes-container-readonly__RAND__]').html('<span class="match-text" id="description_of_vehicle_breakdown_notes-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=reception_view_parent]').hide(); } else { $j('.btn[id=reception_view_parent]').show(); }


							if(typeof(description_of_vehicle_breakdown_notes_update_autofills__RAND__) == 'function') description_of_vehicle_breakdown_notes_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { filterer_vehicle_registration_number: filterer_vehicle_registration_number, s: term, p: page, t: 'breakdown_services', f: 'description_of_vehicle_breakdown_notes' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_description_of_vehicle_breakdown_notes__RAND__.value = e.added.id;
				AppGini.current_description_of_vehicle_breakdown_notes__RAND__.text = e.added.text;
				$j('[name="description_of_vehicle_breakdown_notes"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=reception_view_parent]').hide(); } else { $j('.btn[id=reception_view_parent]').show(); }


				if(typeof(description_of_vehicle_breakdown_notes_update_autofills__RAND__) == 'function') description_of_vehicle_breakdown_notes_update_autofills__RAND__();
			});

			if(!$j("#description_of_vehicle_breakdown_notes-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_description_of_vehicle_breakdown_notes__RAND__.value, t: 'breakdown_services', f: 'description_of_vehicle_breakdown_notes' },
					success: function(resp) {
						$j('[name="description_of_vehicle_breakdown_notes"]').val(resp.results[0].id);
						$j('[id=description_of_vehicle_breakdown_notes-container-readonly__RAND__]').html('<span class="match-text" id="description_of_vehicle_breakdown_notes-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=reception_view_parent]').hide(); } else { $j('.btn[id=reception_view_parent]').show(); }

						if(typeof(description_of_vehicle_breakdown_notes_update_autofills__RAND__) == 'function') description_of_vehicle_breakdown_notes_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_description_of_vehicle_breakdown_notes__RAND__.value, t: 'breakdown_services', f: 'description_of_vehicle_breakdown_notes' },
				success: function(resp) {
					$j('[id=description_of_vehicle_breakdown_notes-container__RAND__], [id=description_of_vehicle_breakdown_notes-container-readonly__RAND__]').html('<span class="match-text" id="description_of_vehicle_breakdown_notes-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=reception_view_parent]').hide(); } else { $j('.btn[id=reception_view_parent]').show(); }

					if(typeof(description_of_vehicle_breakdown_notes_update_autofills__RAND__) == 'function') description_of_vehicle_breakdown_notes_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function work_allocation_reference_number_reload__RAND__(filterer_vehicle_registration_number) {
		<?php if(($AllowUpdate || ($arrPerm['insert'] && !$selected_id)) && !$dvprint) { ?>

			$j("#work_allocation_reference_number-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { filterer_vehicle_registration_number: filterer_vehicle_registration_number, id: AppGini.current_work_allocation_reference_number__RAND__.value, t: 'breakdown_services', f: 'work_allocation_reference_number' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="work_allocation_reference_number"]').val(resp.results[0].id);
							$j('[id=work_allocation_reference_number-container-readonly__RAND__]').html('<span class="match-text" id="work_allocation_reference_number-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=work_allocation_view_parent]').hide(); } else { $j('.btn[id=work_allocation_view_parent]').show(); }


							if(typeof(work_allocation_reference_number_update_autofills__RAND__) == 'function') work_allocation_reference_number_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { filterer_vehicle_registration_number: filterer_vehicle_registration_number, s: term, p: page, t: 'breakdown_services', f: 'work_allocation_reference_number' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_work_allocation_reference_number__RAND__.value = e.added.id;
				AppGini.current_work_allocation_reference_number__RAND__.text = e.added.text;
				$j('[name="work_allocation_reference_number"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=work_allocation_view_parent]').hide(); } else { $j('.btn[id=work_allocation_view_parent]').show(); }


				if(typeof(work_allocation_reference_number_update_autofills__RAND__) == 'function') work_allocation_reference_number_update_autofills__RAND__();
			});

			if(!$j("#work_allocation_reference_number-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_work_allocation_reference_number__RAND__.value, t: 'breakdown_services', f: 'work_allocation_reference_number' },
					success: function(resp) {
						$j('[name="work_allocation_reference_number"]').val(resp.results[0].id);
						$j('[id=work_allocation_reference_number-container-readonly__RAND__]').html('<span class="match-text" id="work_allocation_reference_number-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=work_allocation_view_parent]').hide(); } else { $j('.btn[id=work_allocation_view_parent]').show(); }

						if(typeof(work_allocation_reference_number_update_autofills__RAND__) == 'function') work_allocation_reference_number_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_work_allocation_reference_number__RAND__.value, t: 'breakdown_services', f: 'work_allocation_reference_number' },
				success: function(resp) {
					$j('[id=work_allocation_reference_number-container__RAND__], [id=work_allocation_reference_number-container-readonly__RAND__]').html('<span class="match-text" id="work_allocation_reference_number-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=work_allocation_view_parent]').hide(); } else { $j('.btn[id=work_allocation_view_parent]').show(); }

					if(typeof(work_allocation_reference_number_update_autofills__RAND__) == 'function') work_allocation_reference_number_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function job_card_number_reload__RAND__(filterer_vehicle_registration_number) {
		<?php if(($AllowUpdate || ($arrPerm['insert'] && !$selected_id)) && !$dvprint) { ?>

			$j("#job_card_number-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { filterer_vehicle_registration_number: filterer_vehicle_registration_number, id: AppGini.current_job_card_number__RAND__.value, t: 'breakdown_services', f: 'job_card_number' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="job_card_number"]').val(resp.results[0].id);
							$j('[id=job_card_number-container-readonly__RAND__]').html('<span class="match-text" id="job_card_number-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=reception_view_parent]').hide(); } else { $j('.btn[id=reception_view_parent]').show(); }


							if(typeof(job_card_number_update_autofills__RAND__) == 'function') job_card_number_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { filterer_vehicle_registration_number: filterer_vehicle_registration_number, s: term, p: page, t: 'breakdown_services', f: 'job_card_number' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_job_card_number__RAND__.value = e.added.id;
				AppGini.current_job_card_number__RAND__.text = e.added.text;
				$j('[name="job_card_number"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=reception_view_parent]').hide(); } else { $j('.btn[id=reception_view_parent]').show(); }


				if(typeof(job_card_number_update_autofills__RAND__) == 'function') job_card_number_update_autofills__RAND__();
			});

			if(!$j("#job_card_number-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_job_card_number__RAND__.value, t: 'breakdown_services', f: 'job_card_number' },
					success: function(resp) {
						$j('[name="job_card_number"]').val(resp.results[0].id);
						$j('[id=job_card_number-container-readonly__RAND__]').html('<span class="match-text" id="job_card_number-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=reception_view_parent]').hide(); } else { $j('.btn[id=reception_view_parent]').show(); }

						if(typeof(job_card_number_update_autofills__RAND__) == 'function') job_card_number_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_job_card_number__RAND__.value, t: 'breakdown_services', f: 'job_card_number' },
				success: function(resp) {
					$j('[id=job_card_number-container__RAND__], [id=job_card_number-container-readonly__RAND__]').html('<span class="match-text" id="job_card_number-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=reception_view_parent]').hide(); } else { $j('.btn[id=reception_view_parent]').show(); }

					if(typeof(job_card_number_update_autofills__RAND__) == 'function') job_card_number_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function vehicle_registration_number_reload__RAND__() {
		<?php if(($AllowUpdate || ($arrPerm['insert'] && !$selected_id)) && !$dvprint) { ?>

			$j("#vehicle_registration_number-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_vehicle_registration_number__RAND__.value, t: 'breakdown_services', f: 'vehicle_registration_number' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="vehicle_registration_number"]').val(resp.results[0].id);
							$j('[id=vehicle_registration_number-container-readonly__RAND__]').html('<span class="match-text" id="vehicle_registration_number-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=gmt_fleet_register_view_parent]').hide(); } else { $j('.btn[id=gmt_fleet_register_view_parent]').show(); }

						if(typeof(description_of_vehicle_breakdown_notes_reload__RAND__) == 'function') description_of_vehicle_breakdown_notes_reload__RAND__(AppGini.current_vehicle_registration_number__RAND__.value);
						if(typeof(work_allocation_reference_number_reload__RAND__) == 'function') work_allocation_reference_number_reload__RAND__(AppGini.current_vehicle_registration_number__RAND__.value);
						if(typeof(job_card_number_reload__RAND__) == 'function') job_card_number_reload__RAND__(AppGini.current_vehicle_registration_number__RAND__.value);
						if(typeof(closing_km_reload__RAND__) == 'function') closing_km_reload__RAND__(AppGini.current_vehicle_registration_number__RAND__.value);

							if(typeof(vehicle_registration_number_update_autofills__RAND__) == 'function') vehicle_registration_number_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'breakdown_services', f: 'vehicle_registration_number' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_vehicle_registration_number__RAND__.value = e.added.id;
				AppGini.current_vehicle_registration_number__RAND__.text = e.added.text;
				$j('[name="vehicle_registration_number"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=gmt_fleet_register_view_parent]').hide(); } else { $j('.btn[id=gmt_fleet_register_view_parent]').show(); }

						if(typeof(description_of_vehicle_breakdown_notes_reload__RAND__) == 'function') description_of_vehicle_breakdown_notes_reload__RAND__(AppGini.current_vehicle_registration_number__RAND__.value);
						if(typeof(work_allocation_reference_number_reload__RAND__) == 'function') work_allocation_reference_number_reload__RAND__(AppGini.current_vehicle_registration_number__RAND__.value);
						if(typeof(job_card_number_reload__RAND__) == 'function') job_card_number_reload__RAND__(AppGini.current_vehicle_registration_number__RAND__.value);
						if(typeof(closing_km_reload__RAND__) == 'function') closing_km_reload__RAND__(AppGini.current_vehicle_registration_number__RAND__.value);

				if(typeof(vehicle_registration_number_update_autofills__RAND__) == 'function') vehicle_registration_number_update_autofills__RAND__();
			});

			if(!$j("#vehicle_registration_number-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_vehicle_registration_number__RAND__.value, t: 'breakdown_services', f: 'vehicle_registration_number' },
					success: function(resp) {
						$j('[name="vehicle_registration_number"]').val(resp.results[0].id);
						$j('[id=vehicle_registration_number-container-readonly__RAND__]').html('<span class="match-text" id="vehicle_registration_number-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=gmt_fleet_register_view_parent]').hide(); } else { $j('.btn[id=gmt_fleet_register_view_parent]').show(); }

						if(typeof(vehicle_registration_number_update_autofills__RAND__) == 'function') vehicle_registration_number_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_vehicle_registration_number__RAND__.value, t: 'breakdown_services', f: 'vehicle_registration_number' },
				success: function(resp) {
					$j('[id=vehicle_registration_number-container__RAND__], [id=vehicle_registration_number-container-readonly__RAND__]').html('<span class="match-text" id="vehicle_registration_number-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=gmt_fleet_register_view_parent]').hide(); } else { $j('.btn[id=gmt_fleet_register_view_parent]').show(); }

					if(typeof(vehicle_registration_number_update_autofills__RAND__) == 'function') vehicle_registration_number_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function closing_km_reload__RAND__(filterer_vehicle_registration_number) {
		<?php if(($AllowUpdate || ($arrPerm['insert'] && !$selected_id)) && !$dvprint) { ?>

			$j("#closing_km-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { filterer_vehicle_registration_number: filterer_vehicle_registration_number, id: AppGini.current_closing_km__RAND__.value, t: 'breakdown_services', f: 'closing_km' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="closing_km"]').val(resp.results[0].id);
							$j('[id=closing_km-container-readonly__RAND__]').html('<span class="match-text" id="closing_km-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=log_sheet_view_parent]').hide(); } else { $j('.btn[id=log_sheet_view_parent]').show(); }


							if(typeof(closing_km_update_autofills__RAND__) == 'function') closing_km_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { filterer_vehicle_registration_number: filterer_vehicle_registration_number, s: term, p: page, t: 'breakdown_services', f: 'closing_km' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_closing_km__RAND__.value = e.added.id;
				AppGini.current_closing_km__RAND__.text = e.added.text;
				$j('[name="closing_km"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=log_sheet_view_parent]').hide(); } else { $j('.btn[id=log_sheet_view_parent]').show(); }


				if(typeof(closing_km_update_autofills__RAND__) == 'function') closing_km_update_autofills__RAND__();
			});

			if(!$j("#closing_km-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_closing_km__RAND__.value, t: 'breakdown_services', f: 'closing_km' },
					success: function(resp) {
						$j('[name="closing_km"]').val(resp.results[0].id);
						$j('[id=closing_km-container-readonly__RAND__]').html('<span class="match-text" id="closing_km-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=log_sheet_view_parent]').hide(); } else { $j('.btn[id=log_sheet_view_parent]').show(); }

						if(typeof(closing_km_update_autofills__RAND__) == 'function') closing_km_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_closing_km__RAND__.value, t: 'breakdown_services', f: 'closing_km' },
				success: function(resp) {
					$j('[id=closing_km-container__RAND__], [id=closing_km-container-readonly__RAND__]').html('<span class="match-text" id="closing_km-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=log_sheet_view_parent]').hide(); } else { $j('.btn[id=log_sheet_view_parent]').show(); }

					if(typeof(closing_km_update_autofills__RAND__) == 'function') closing_km_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function part_number_reload__RAND__() {
		<?php if(($AllowUpdate || ($arrPerm['insert'] && !$selected_id)) && !$dvprint) { ?>

			$j("#part_number-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_part_number__RAND__.value, t: 'breakdown_services', f: 'part_number' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="part_number"]').val(resp.results[0].id);
							$j('[id=part_number-container-readonly__RAND__]').html('<span class="match-text" id="part_number-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=parts_view_parent]').hide(); } else { $j('.btn[id=parts_view_parent]').show(); }


							if(typeof(part_number_update_autofills__RAND__) == 'function') part_number_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'breakdown_services', f: 'part_number' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_part_number__RAND__.value = e.added.id;
				AppGini.current_part_number__RAND__.text = e.added.text;
				$j('[name="part_number"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=parts_view_parent]').hide(); } else { $j('.btn[id=parts_view_parent]').show(); }


				if(typeof(part_number_update_autofills__RAND__) == 'function') part_number_update_autofills__RAND__();
			});

			if(!$j("#part_number-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_part_number__RAND__.value, t: 'breakdown_services', f: 'part_number' },
					success: function(resp) {
						$j('[name="part_number"]').val(resp.results[0].id);
						$j('[id=part_number-container-readonly__RAND__]').html('<span class="match-text" id="part_number-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=parts_view_parent]').hide(); } else { $j('.btn[id=parts_view_parent]').show(); }

						if(typeof(part_number_update_autofills__RAND__) == 'function') part_number_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_part_number__RAND__.value, t: 'breakdown_services', f: 'part_number' },
				success: function(resp) {
					$j('[id=part_number-container__RAND__], [id=part_number-container-readonly__RAND__]').html('<span class="match-text" id="part_number-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=parts_view_parent]').hide(); } else { $j('.btn[id=parts_view_parent]').show(); }

					if(typeof(part_number_update_autofills__RAND__) == 'function') part_number_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function part_name_reload__RAND__() {
		<?php if(($AllowUpdate || ($arrPerm['insert'] && !$selected_id)) && !$dvprint) { ?>

			$j("#part_name-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_part_name__RAND__.value, t: 'breakdown_services', f: 'part_name' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="part_name"]').val(resp.results[0].id);
							$j('[id=part_name-container-readonly__RAND__]').html('<span class="match-text" id="part_name-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=parts_view_parent]').hide(); } else { $j('.btn[id=parts_view_parent]').show(); }


							if(typeof(part_name_update_autofills__RAND__) == 'function') part_name_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'breakdown_services', f: 'part_name' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_part_name__RAND__.value = e.added.id;
				AppGini.current_part_name__RAND__.text = e.added.text;
				$j('[name="part_name"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=parts_view_parent]').hide(); } else { $j('.btn[id=parts_view_parent]').show(); }


				if(typeof(part_name_update_autofills__RAND__) == 'function') part_name_update_autofills__RAND__();
			});

			if(!$j("#part_name-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_part_name__RAND__.value, t: 'breakdown_services', f: 'part_name' },
					success: function(resp) {
						$j('[name="part_name"]').val(resp.results[0].id);
						$j('[id=part_name-container-readonly__RAND__]').html('<span class="match-text" id="part_name-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=parts_view_parent]').hide(); } else { $j('.btn[id=parts_view_parent]').show(); }

						if(typeof(part_name_update_autofills__RAND__) == 'function') part_name_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_part_name__RAND__.value, t: 'breakdown_services', f: 'part_name' },
				success: function(resp) {
					$j('[id=part_name-container__RAND__], [id=part_name-container-readonly__RAND__]').html('<span class="match-text" id="part_name-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=parts_view_parent]').hide(); } else { $j('.btn[id=parts_view_parent]').show(); }

					if(typeof(part_name_update_autofills__RAND__) == 'function') part_name_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function part_manufacturer_name_reload__RAND__() {
		<?php if(($AllowUpdate || ($arrPerm['insert'] && !$selected_id)) && !$dvprint) { ?>

			$j("#part_manufacturer_name-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_part_manufacturer_name__RAND__.value, t: 'breakdown_services', f: 'part_manufacturer_name' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="part_manufacturer_name"]').val(resp.results[0].id);
							$j('[id=part_manufacturer_name-container-readonly__RAND__]').html('<span class="match-text" id="part_manufacturer_name-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=manufacturer_view_parent]').hide(); } else { $j('.btn[id=manufacturer_view_parent]').show(); }


							if(typeof(part_manufacturer_name_update_autofills__RAND__) == 'function') part_manufacturer_name_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'breakdown_services', f: 'part_manufacturer_name' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_part_manufacturer_name__RAND__.value = e.added.id;
				AppGini.current_part_manufacturer_name__RAND__.text = e.added.text;
				$j('[name="part_manufacturer_name"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=manufacturer_view_parent]').hide(); } else { $j('.btn[id=manufacturer_view_parent]').show(); }


				if(typeof(part_manufacturer_name_update_autofills__RAND__) == 'function') part_manufacturer_name_update_autofills__RAND__();
			});

			if(!$j("#part_manufacturer_name-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_part_manufacturer_name__RAND__.value, t: 'breakdown_services', f: 'part_manufacturer_name' },
					success: function(resp) {
						$j('[name="part_manufacturer_name"]').val(resp.results[0].id);
						$j('[id=part_manufacturer_name-container-readonly__RAND__]').html('<span class="match-text" id="part_manufacturer_name-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=manufacturer_view_parent]').hide(); } else { $j('.btn[id=manufacturer_view_parent]').show(); }

						if(typeof(part_manufacturer_name_update_autofills__RAND__) == 'function') part_manufacturer_name_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_part_manufacturer_name__RAND__.value, t: 'breakdown_services', f: 'part_manufacturer_name' },
				success: function(resp) {
					$j('[id=part_manufacturer_name-container__RAND__], [id=part_manufacturer_name-container-readonly__RAND__]').html('<span class="match-text" id="part_manufacturer_name-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=manufacturer_view_parent]').hide(); } else { $j('.btn[id=manufacturer_view_parent]').show(); }

					if(typeof(part_manufacturer_name_update_autofills__RAND__) == 'function') part_manufacturer_name_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function part_number_1_reload__RAND__() {
		<?php if(($AllowUpdate || ($arrPerm['insert'] && !$selected_id)) && !$dvprint) { ?>

			$j("#part_number_1-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_part_number_1__RAND__.value, t: 'breakdown_services', f: 'part_number_1' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="part_number_1"]').val(resp.results[0].id);
							$j('[id=part_number_1-container-readonly__RAND__]').html('<span class="match-text" id="part_number_1-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=parts_view_parent]').hide(); } else { $j('.btn[id=parts_view_parent]').show(); }


							if(typeof(part_number_1_update_autofills__RAND__) == 'function') part_number_1_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'breakdown_services', f: 'part_number_1' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_part_number_1__RAND__.value = e.added.id;
				AppGini.current_part_number_1__RAND__.text = e.added.text;
				$j('[name="part_number_1"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=parts_view_parent]').hide(); } else { $j('.btn[id=parts_view_parent]').show(); }


				if(typeof(part_number_1_update_autofills__RAND__) == 'function') part_number_1_update_autofills__RAND__();
			});

			if(!$j("#part_number_1-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_part_number_1__RAND__.value, t: 'breakdown_services', f: 'part_number_1' },
					success: function(resp) {
						$j('[name="part_number_1"]').val(resp.results[0].id);
						$j('[id=part_number_1-container-readonly__RAND__]').html('<span class="match-text" id="part_number_1-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=parts_view_parent]').hide(); } else { $j('.btn[id=parts_view_parent]').show(); }

						if(typeof(part_number_1_update_autofills__RAND__) == 'function') part_number_1_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_part_number_1__RAND__.value, t: 'breakdown_services', f: 'part_number_1' },
				success: function(resp) {
					$j('[id=part_number_1-container__RAND__], [id=part_number_1-container-readonly__RAND__]').html('<span class="match-text" id="part_number_1-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=parts_view_parent]').hide(); } else { $j('.btn[id=parts_view_parent]').show(); }

					if(typeof(part_number_1_update_autofills__RAND__) == 'function') part_number_1_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function part_name_1_reload__RAND__() {
		<?php if(($AllowUpdate || ($arrPerm['insert'] && !$selected_id)) && !$dvprint) { ?>

			$j("#part_name_1-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_part_name_1__RAND__.value, t: 'breakdown_services', f: 'part_name_1' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="part_name_1"]').val(resp.results[0].id);
							$j('[id=part_name_1-container-readonly__RAND__]').html('<span class="match-text" id="part_name_1-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=parts_view_parent]').hide(); } else { $j('.btn[id=parts_view_parent]').show(); }


							if(typeof(part_name_1_update_autofills__RAND__) == 'function') part_name_1_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'breakdown_services', f: 'part_name_1' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_part_name_1__RAND__.value = e.added.id;
				AppGini.current_part_name_1__RAND__.text = e.added.text;
				$j('[name="part_name_1"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=parts_view_parent]').hide(); } else { $j('.btn[id=parts_view_parent]').show(); }


				if(typeof(part_name_1_update_autofills__RAND__) == 'function') part_name_1_update_autofills__RAND__();
			});

			if(!$j("#part_name_1-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_part_name_1__RAND__.value, t: 'breakdown_services', f: 'part_name_1' },
					success: function(resp) {
						$j('[name="part_name_1"]').val(resp.results[0].id);
						$j('[id=part_name_1-container-readonly__RAND__]').html('<span class="match-text" id="part_name_1-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=parts_view_parent]').hide(); } else { $j('.btn[id=parts_view_parent]').show(); }

						if(typeof(part_name_1_update_autofills__RAND__) == 'function') part_name_1_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_part_name_1__RAND__.value, t: 'breakdown_services', f: 'part_name_1' },
				success: function(resp) {
					$j('[id=part_name_1-container__RAND__], [id=part_name_1-container-readonly__RAND__]').html('<span class="match-text" id="part_name_1-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=parts_view_parent]').hide(); } else { $j('.btn[id=parts_view_parent]').show(); }

					if(typeof(part_name_1_update_autofills__RAND__) == 'function') part_name_1_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function part_manufacturer_name_1_reload__RAND__() {
		<?php if(($AllowUpdate || ($arrPerm['insert'] && !$selected_id)) && !$dvprint) { ?>

			$j("#part_manufacturer_name_1-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_part_manufacturer_name_1__RAND__.value, t: 'breakdown_services', f: 'part_manufacturer_name_1' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="part_manufacturer_name_1"]').val(resp.results[0].id);
							$j('[id=part_manufacturer_name_1-container-readonly__RAND__]').html('<span class="match-text" id="part_manufacturer_name_1-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=manufacturer_view_parent]').hide(); } else { $j('.btn[id=manufacturer_view_parent]').show(); }


							if(typeof(part_manufacturer_name_1_update_autofills__RAND__) == 'function') part_manufacturer_name_1_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'breakdown_services', f: 'part_manufacturer_name_1' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_part_manufacturer_name_1__RAND__.value = e.added.id;
				AppGini.current_part_manufacturer_name_1__RAND__.text = e.added.text;
				$j('[name="part_manufacturer_name_1"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=manufacturer_view_parent]').hide(); } else { $j('.btn[id=manufacturer_view_parent]').show(); }


				if(typeof(part_manufacturer_name_1_update_autofills__RAND__) == 'function') part_manufacturer_name_1_update_autofills__RAND__();
			});

			if(!$j("#part_manufacturer_name_1-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_part_manufacturer_name_1__RAND__.value, t: 'breakdown_services', f: 'part_manufacturer_name_1' },
					success: function(resp) {
						$j('[name="part_manufacturer_name_1"]').val(resp.results[0].id);
						$j('[id=part_manufacturer_name_1-container-readonly__RAND__]').html('<span class="match-text" id="part_manufacturer_name_1-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=manufacturer_view_parent]').hide(); } else { $j('.btn[id=manufacturer_view_parent]').show(); }

						if(typeof(part_manufacturer_name_1_update_autofills__RAND__) == 'function') part_manufacturer_name_1_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_part_manufacturer_name_1__RAND__.value, t: 'breakdown_services', f: 'part_manufacturer_name_1' },
				success: function(resp) {
					$j('[id=part_manufacturer_name_1-container__RAND__], [id=part_manufacturer_name_1-container-readonly__RAND__]').html('<span class="match-text" id="part_manufacturer_name_1-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=manufacturer_view_parent]').hide(); } else { $j('.btn[id=manufacturer_view_parent]').show(); }

					if(typeof(part_manufacturer_name_1_update_autofills__RAND__) == 'function') part_manufacturer_name_1_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function workshop_name_reload__RAND__() {
		<?php if(($AllowUpdate || ($arrPerm['insert'] && !$selected_id)) && !$dvprint) { ?>

			$j("#workshop_name-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_workshop_name__RAND__.value, t: 'breakdown_services', f: 'workshop_name' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="workshop_name"]').val(resp.results[0].id);
							$j('[id=workshop_name-container-readonly__RAND__]').html('<span class="match-text" id="workshop_name-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=service_view_parent]').hide(); } else { $j('.btn[id=service_view_parent]').show(); }


							if(typeof(workshop_name_update_autofills__RAND__) == 'function') workshop_name_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'breakdown_services', f: 'workshop_name' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_workshop_name__RAND__.value = e.added.id;
				AppGini.current_workshop_name__RAND__.text = e.added.text;
				$j('[name="workshop_name"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=service_view_parent]').hide(); } else { $j('.btn[id=service_view_parent]').show(); }


				if(typeof(workshop_name_update_autofills__RAND__) == 'function') workshop_name_update_autofills__RAND__();
			});

			if(!$j("#workshop_name-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_workshop_name__RAND__.value, t: 'breakdown_services', f: 'workshop_name' },
					success: function(resp) {
						$j('[name="workshop_name"]').val(resp.results[0].id);
						$j('[id=workshop_name-container-readonly__RAND__]').html('<span class="match-text" id="workshop_name-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=service_view_parent]').hide(); } else { $j('.btn[id=service_view_parent]').show(); }

						if(typeof(workshop_name_update_autofills__RAND__) == 'function') workshop_name_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_workshop_name__RAND__.value, t: 'breakdown_services', f: 'workshop_name' },
				success: function(resp) {
					$j('[id=workshop_name-container__RAND__], [id=workshop_name-container-readonly__RAND__]').html('<span class="match-text" id="workshop_name-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=service_view_parent]').hide(); } else { $j('.btn[id=service_view_parent]').show(); }

					if(typeof(workshop_name_update_autofills__RAND__) == 'function') workshop_name_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
	</script>
	<?php

	$lookups = str_replace('__RAND__', $rnd1, ob_get_clean());


	// code for template based detail view forms

	// open the detail view template
	if($dvprint) {
		$template_file = is_file("./{$TemplateDVP}") ? "./{$TemplateDVP}" : './templates/breakdown_services_templateDVP.html';
		$templateCode = @file_get_contents($template_file);
	} else {
		$template_file = is_file("./{$TemplateDV}") ? "./{$TemplateDV}" : './templates/breakdown_services_templateDV.html';
		$templateCode = @file_get_contents($template_file);
	}

	// process form title
	$templateCode = str_replace('<%%DETAIL_VIEW_TITLE%%>', 'Breakdown Services Details:', $templateCode);
	$templateCode = str_replace('<%%RND1%%>', $rnd1, $templateCode);
	$templateCode = str_replace('<%%EMBEDDED%%>', (Request::val('Embedded') ? 'Embedded=1' : ''), $templateCode);
	// process buttons
	if($arrPerm['insert'] && !$selected_id) { // allow insert and no record selected?
		if(!$selected_id) $templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-success" id="insert" name="insert_x" value="1" onclick="return breakdown_services_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save New'] . '</button>', $templateCode);
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="insert" name="insert_x" value="1" onclick="return breakdown_services_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save As Copy'] . '</button>', $templateCode);
	} else {
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '', $templateCode);
	}

	// 'Back' button action
	if(Request::val('Embedded')) {
		$backAction = 'AppGini.closeParentModal(); return false;';
	} else {
		$backAction = '$j(\'form\').eq(0).attr(\'novalidate\', \'novalidate\'); document.myform.reset(); return true;';
	}

	if($selected_id) {
		if(!Request::val('Embedded')) $templateCode = str_replace('<%%DVPRINT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="dvprint" name="dvprint_x" value="1" onclick="$j(\'form\').eq(0).prop(\'novalidate\', true); document.myform.reset(); return true;" title="' . html_attr($Translation['Print Preview']) . '"><i class="glyphicon glyphicon-print"></i> ' . $Translation['Print Preview'] . '</button>', $templateCode);
		if($AllowUpdate) {
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '<button type="submit" class="btn btn-success btn-lg" id="update" name="update_x" value="1" onclick="return breakdown_services_validateData();" title="' . html_attr($Translation['Save Changes']) . '"><i class="glyphicon glyphicon-ok"></i> ' . $Translation['Save Changes'] . '</button>', $templateCode);
		} else {
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		}
		if(($arrPerm['delete'] == 1 && $ownerMemberID == getLoggedMemberID()) || ($arrPerm['delete'] == 2 && $ownerGroupID == getLoggedGroupID()) || $arrPerm['delete'] == 3) { // allow delete?
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '<button type="submit" class="btn btn-danger" id="delete" name="delete_x" value="1" onclick="return confirm(\'' . $Translation['are you sure?'] . '\');" title="' . html_attr($Translation['Delete']) . '"><i class="glyphicon glyphicon-trash"></i> ' . $Translation['Delete'] . '</button>', $templateCode);
		} else {
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		}
		$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>', $templateCode);
	} else {
		$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);

		// if not in embedded mode and user has insert only but no view/update/delete,
		// remove 'back' button
		if(
			$arrPerm['insert']
			&& !$arrPerm['update'] && !$arrPerm['delete'] && !$arrPerm['view']
			&& !Request::val('Embedded')
		)
			$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '', $templateCode);
		elseif($separateDV)
			$templateCode = str_replace(
				'<%%DESELECT_BUTTON%%>', 
				'<button
					type="submit" 
					class="btn btn-default" 
					id="deselect" 
					name="deselect_x" 
					value="1" 
					onclick="' . $backAction . '" 
					title="' . html_attr($Translation['Back']) . '">
						<i class="glyphicon glyphicon-chevron-left"></i> ' .
						$Translation['Back'] .
				'</button>',
				$templateCode
			);
		else
			$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '', $templateCode);
	}

	// set records to read only if user can't insert new records and can't edit current record
	if(($selected_id && !$AllowUpdate) || (!$selected_id && !$AllowInsert)) {
		$jsReadOnly = '';
		$jsReadOnly .= "\tjQuery('input[name=breakdown_of_vehicle]').parent().html('<div class=\"form-control-static\">' + jQuery('input[name=breakdown_of_vehicle]:checked').next().text() + '</div>')\n";
		$jsReadOnly .= "\tjQuery('input[name=breakdown_during_office_hours]').parent().html('<div class=\"form-control-static\">' + jQuery('input[name=breakdown_during_office_hours]:checked').next().text() + '</div>')\n";
		$jsReadOnly .= "\tjQuery('input[name=breakdown_within_or_outside_the_province]').parent().html('<div class=\"form-control-static\">' + jQuery('input[name=breakdown_within_or_outside_the_province]:checked').next().text() + '</div>')\n";
		$jsReadOnly .= "\tjQuery('#description_of_vehicle_breakdown_notes').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#description_of_vehicle_breakdown_notes_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#description_of_vehicle_breakdown').replaceWith('<div class=\"form-control-static\" id=\"description_of_vehicle_breakdown\">' + (jQuery('#description_of_vehicle_breakdown').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#description_of_vehicle_breakdown, #description_of_vehicle_breakdown-edit-link').hide();\n";
		$jsReadOnly .= "\tjQuery('#date_of_vehicle_breakdown').prop('readonly', true);\n";
		$jsReadOnly .= "\tjQuery('#date_of_vehicle_breakdownDay, #date_of_vehicle_breakdownMonth, #date_of_vehicle_breakdownYear').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#work_allocation_reference_number').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#work_allocation_reference_number_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#job_card_number').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#job_card_number_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#vehicle_registration_number').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#vehicle_registration_number_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#closing_km').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#closing_km_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#date_of_vehicle_reactivation').prop('readonly', true);\n";
		$jsReadOnly .= "\tjQuery('#date_of_vehicle_reactivationDay, #date_of_vehicle_reactivationMonth, #date_of_vehicle_reactivationYear').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#type_of_expenditure').replaceWith('<div class=\"form-control-static\" id=\"type_of_expenditure\">' + (jQuery('#type_of_expenditure').val() || '') + '</div>'); jQuery('#type_of_expenditure-multi-selection-help').hide();\n";
		$jsReadOnly .= "\tjQuery('#labour_category').replaceWith('<div class=\"form-control-static\" id=\"labour_category\">' + (jQuery('#labour_category').val() || '') + '</div>'); jQuery('#labour_category-multi-selection-help').hide();\n";
		$jsReadOnly .= "\tjQuery('#part_number').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#part_number_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#part_name').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#part_name_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#part_manufacturer_name').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#part_manufacturer_name_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#quantity').replaceWith('<div class=\"form-control-static\" id=\"quantity\">' + (jQuery('#quantity').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#expense_of_item').replaceWith('<div class=\"form-control-static\" id=\"expense_of_item\">' + (jQuery('#expense_of_item').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#labour_category_1').replaceWith('<div class=\"form-control-static\" id=\"labour_category_1\">' + (jQuery('#labour_category_1').val() || '') + '</div>'); jQuery('#labour_category_1-multi-selection-help').hide();\n";
		$jsReadOnly .= "\tjQuery('#part_number_1').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#part_number_1_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#part_name_1').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#part_name_1_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#part_manufacturer_name_1').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#part_manufacturer_name_1_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#quantity_1').replaceWith('<div class=\"form-control-static\" id=\"quantity_1\">' + (jQuery('#quantity_1').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#expense_of_item_1').replaceWith('<div class=\"form-control-static\" id=\"expense_of_item_1\">' + (jQuery('#expense_of_item_1').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#material_cost').replaceWith('<div class=\"form-control-static\" id=\"material_cost\">' + (jQuery('#material_cost').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#average_worktime_hrs').replaceWith('<div class=\"form-control-static\" id=\"average_worktime_hrs\">' + (jQuery('#average_worktime_hrs').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#standard_labour_cost_per_hour').replaceWith('<div class=\"form-control-static\" id=\"standard_labour_cost_per_hour\">' + (jQuery('#standard_labour_cost_per_hour').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#labour_charges').replaceWith('<div class=\"form-control-static\" id=\"labour_charges\">' + (jQuery('#labour_charges').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#vat').replaceWith('<div class=\"form-control-static\" id=\"vat\">' + (jQuery('#vat').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#total_amount').replaceWith('<div class=\"form-control-static\" id=\"total_amount\">' + (jQuery('#total_amount').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#workshop_name').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#workshop_name_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('input[name=work_order_status]').parent().html('<div class=\"form-control-static\">' + jQuery('input[name=work_order_status]:checked').next().text() + '</div>')\n";
		$jsReadOnly .= "\tjQuery('#upload_invoice').replaceWith('<div class=\"form-control-static\" id=\"upload_invoice\">' + (jQuery('#upload_invoice').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#upload_invoice, #upload_invoice-edit-link').hide();\n";
		$jsReadOnly .= "\tjQuery('#receptionist_contact_email, #receptionist_contact_email-edit-link').hide();\n";
		$jsReadOnly .= "\tjQuery('#date_captured').parents('.input-group').replaceWith('<div class=\"form-control-static\" id=\"date_captured\">' + (jQuery('#date_captured').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('.select2-container').hide();\n";

		$noUploads = true;
	} elseif(($AllowInsert && !$selected_id) || ($AllowUpdate && $selected_id)) {
		$jsEditable = "\tjQuery('form').eq(0).data('already_changed', true);"; // temporarily disable form change handler
		$locale = isset($Translation['datetimepicker locale']) ? ", locale: '{$Translation['datetimepicker locale']}'" : '';
		$jsEditable .= "\tjQuery('#date_captured').addClass('always_shown').parents('.input-group').datetimepicker({ toolbarPlacement: 'top', sideBySide: true, showClear: true, showTodayButton: true, showClose: true, icons: { close: 'glyphicon glyphicon-ok' }, format: AppGini.datetimeFormat('dt') {$locale} });";
		$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', false);"; // re-enable form change handler
	}

	// process combos
	$templateCode = str_replace('<%%COMBO(breakdown_of_vehicle)%%>', $combo_breakdown_of_vehicle->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(breakdown_of_vehicle)%%>', $combo_breakdown_of_vehicle->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(breakdown_during_office_hours)%%>', $combo_breakdown_during_office_hours->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(breakdown_during_office_hours)%%>', $combo_breakdown_during_office_hours->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(breakdown_within_or_outside_the_province)%%>', $combo_breakdown_within_or_outside_the_province->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(breakdown_within_or_outside_the_province)%%>', $combo_breakdown_within_or_outside_the_province->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(description_of_vehicle_breakdown_notes)%%>', $combo_description_of_vehicle_breakdown_notes->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(description_of_vehicle_breakdown_notes)%%>', $combo_description_of_vehicle_breakdown_notes->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(description_of_vehicle_breakdown_notes)%%>', urlencode($combo_description_of_vehicle_breakdown_notes->MatchText), $templateCode);
	$templateCode = str_replace(
		'<%%COMBO(date_of_vehicle_breakdown)%%>', 
		($selected_id && !$arrPerm['edit'] && ($noSaveAsCopy || !$arrPerm['insert']) ? 
			'<div class="form-control-static">' . $combo_date_of_vehicle_breakdown->GetHTML(true) . '</div>' : 
			$combo_date_of_vehicle_breakdown->GetHTML()
		), $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(date_of_vehicle_breakdown)%%>', $combo_date_of_vehicle_breakdown->GetHTML(true), $templateCode);
	$templateCode = str_replace('<%%COMBO(work_allocation_reference_number)%%>', $combo_work_allocation_reference_number->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(work_allocation_reference_number)%%>', $combo_work_allocation_reference_number->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(work_allocation_reference_number)%%>', urlencode($combo_work_allocation_reference_number->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(job_card_number)%%>', $combo_job_card_number->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(job_card_number)%%>', $combo_job_card_number->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(job_card_number)%%>', urlencode($combo_job_card_number->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(vehicle_registration_number)%%>', $combo_vehicle_registration_number->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(vehicle_registration_number)%%>', $combo_vehicle_registration_number->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(vehicle_registration_number)%%>', urlencode($combo_vehicle_registration_number->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(closing_km)%%>', $combo_closing_km->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(closing_km)%%>', $combo_closing_km->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(closing_km)%%>', urlencode($combo_closing_km->MatchText), $templateCode);
	$templateCode = str_replace(
		'<%%COMBO(date_of_vehicle_reactivation)%%>', 
		($selected_id && !$arrPerm['edit'] && ($noSaveAsCopy || !$arrPerm['insert']) ? 
			'<div class="form-control-static">' . $combo_date_of_vehicle_reactivation->GetHTML(true) . '</div>' : 
			$combo_date_of_vehicle_reactivation->GetHTML()
		), $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(date_of_vehicle_reactivation)%%>', $combo_date_of_vehicle_reactivation->GetHTML(true), $templateCode);
	$templateCode = str_replace('<%%COMBO(type_of_expenditure)%%>', $combo_type_of_expenditure->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(type_of_expenditure)%%>', $combo_type_of_expenditure->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(labour_category)%%>', $combo_labour_category->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(labour_category)%%>', $combo_labour_category->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(part_number)%%>', $combo_part_number->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(part_number)%%>', $combo_part_number->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(part_number)%%>', urlencode($combo_part_number->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(part_name)%%>', $combo_part_name->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(part_name)%%>', $combo_part_name->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(part_name)%%>', urlencode($combo_part_name->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(part_manufacturer_name)%%>', $combo_part_manufacturer_name->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(part_manufacturer_name)%%>', $combo_part_manufacturer_name->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(part_manufacturer_name)%%>', urlencode($combo_part_manufacturer_name->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(labour_category_1)%%>', $combo_labour_category_1->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(labour_category_1)%%>', $combo_labour_category_1->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(part_number_1)%%>', $combo_part_number_1->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(part_number_1)%%>', $combo_part_number_1->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(part_number_1)%%>', urlencode($combo_part_number_1->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(part_name_1)%%>', $combo_part_name_1->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(part_name_1)%%>', $combo_part_name_1->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(part_name_1)%%>', urlencode($combo_part_name_1->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(part_manufacturer_name_1)%%>', $combo_part_manufacturer_name_1->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(part_manufacturer_name_1)%%>', $combo_part_manufacturer_name_1->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(part_manufacturer_name_1)%%>', urlencode($combo_part_manufacturer_name_1->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(workshop_name)%%>', $combo_workshop_name->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(workshop_name)%%>', $combo_workshop_name->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(workshop_name)%%>', urlencode($combo_workshop_name->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(work_order_status)%%>', $combo_work_order_status->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(work_order_status)%%>', $combo_work_order_status->SelectedData, $templateCode);

	/* lookup fields array: 'lookup field name' => ['parent table name', 'lookup field caption'] */
	$lookup_fields = ['description_of_vehicle_breakdown_notes' => ['reception', 'Description of Vehicle Breakdown (Notes):'], 'work_allocation_reference_number' => ['work_allocation', 'Work Allocation Reference Number:'], 'job_card_number' => ['reception', 'Job Card Number:'], 'vehicle_registration_number' => ['gmt_fleet_register', 'Registration Number:'], 'closing_km' => ['log_sheet', 'Closing KM:'], 'part_number' => ['parts', 'Part Number (1):'], 'part_name' => ['parts', 'Part Name (1):'], 'part_manufacturer_name' => ['manufacturer', 'Part Manufacturer Name (1):'], 'part_number_1' => ['parts', 'Part Number (2):'], 'part_name_1' => ['parts', 'Part Name (2):'], 'part_manufacturer_name_1' => ['manufacturer', 'Part Manufacturer Name (2):'], 'workshop_name' => ['service', 'Workshop Name:'], ];
	foreach($lookup_fields as $luf => $ptfc) {
		$pt_perm = getTablePermissions($ptfc[0]);

		// process foreign key links
		if($pt_perm['view'] || $pt_perm['edit']) {
			$templateCode = str_replace("<%%PLINK({$luf})%%>", '<button type="button" class="btn btn-default view_parent" id="' . $ptfc[0] . '_view_parent" title="' . html_attr($Translation['View'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-eye-open"></i></button>', $templateCode);
		}

		// if user has insert permission to parent table of a lookup field, put an add new button
		if($pt_perm['insert'] /* && !Request::val('Embedded')*/) {
			$templateCode = str_replace("<%%ADDNEW({$ptfc[0]})%%>", '<button type="button" class="btn btn-default add_new_parent" id="' . $ptfc[0] . '_add_new" title="' . html_attr($Translation['Add New'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-plus text-success"></i></button>', $templateCode);
		}
	}

	// process images
	$templateCode = str_replace('<%%UPLOADFILE(breakdown_id)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(breakdown_of_vehicle)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(breakdown_during_office_hours)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(breakdown_within_or_outside_the_province)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(description_of_vehicle_breakdown_notes)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(description_of_vehicle_breakdown)%%>', ($noUploads ? '' : "<div>{$Translation['upload image']}</div>" . '<i class="glyphicon glyphicon-remove text-danger clear-upload hidden"></i> <input type="file" name="description_of_vehicle_breakdown" id="description_of_vehicle_breakdown" data-filetypes="txt|doc|docx|docm|odt|pdf|rtf" data-maxsize="5376000" accept=".txt,.doc,.docx,.docm,.odt,.pdf,.rtf">'), $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(date_of_vehicle_breakdown)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(work_allocation_reference_number)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(job_card_number)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(vehicle_registration_number)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(closing_km)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(date_of_vehicle_reactivation)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(type_of_expenditure)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(labour_category)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(part_number)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(part_name)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(part_manufacturer_name)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(quantity)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(expense_of_item)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(labour_category_1)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(part_number_1)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(part_name_1)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(part_manufacturer_name_1)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(quantity_1)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(expense_of_item_1)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(material_cost)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(average_worktime_hrs)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(standard_labour_cost_per_hour)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(labour_charges)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(vat)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(total_amount)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(workshop_name)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(work_order_status)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(comments)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(upload_invoice)%%>', ($noUploads ? '' : "<div>{$Translation['upload image']}</div>" . '<i class="glyphicon glyphicon-remove text-danger clear-upload hidden"></i> <input type="file" name="upload_invoice" id="upload_invoice" data-filetypes="txt|doc|docx|docm|odt|pdf|rtf" data-maxsize="5242880" accept=".txt,.doc,.docx,.docm,.odt,.pdf,.rtf">'), $templateCode);
	if($AllowUpdate && $row['upload_invoice'] != '') {
		$templateCode = str_replace('<%%REMOVEFILE(upload_invoice)%%>', '<br><input type="checkbox" name="upload_invoice_remove" id="upload_invoice_remove" value="1"> <label for="upload_invoice_remove" style="color: red; font-weight: bold;">'.$Translation['remove image'].'</label>', $templateCode);
	} else {
		$templateCode = str_replace('<%%REMOVEFILE(upload_invoice)%%>', '', $templateCode);
	}
	$templateCode = str_replace('<%%UPLOADFILE(date_captured)%%>', '', $templateCode);

	// process values
	if($selected_id) {
		if( $dvprint) $templateCode = str_replace('<%%VALUE(breakdown_id)%%>', safe_html($urow['breakdown_id']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(breakdown_id)%%>', html_attr($row['breakdown_id']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(breakdown_id)%%>', urlencode($urow['breakdown_id']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(breakdown_of_vehicle)%%>', safe_html($urow['breakdown_of_vehicle']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(breakdown_of_vehicle)%%>', html_attr($row['breakdown_of_vehicle']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(breakdown_of_vehicle)%%>', urlencode($urow['breakdown_of_vehicle']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(breakdown_during_office_hours)%%>', safe_html($urow['breakdown_during_office_hours']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(breakdown_during_office_hours)%%>', html_attr($row['breakdown_during_office_hours']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(breakdown_during_office_hours)%%>', urlencode($urow['breakdown_during_office_hours']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(breakdown_within_or_outside_the_province)%%>', safe_html($urow['breakdown_within_or_outside_the_province']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(breakdown_within_or_outside_the_province)%%>', html_attr($row['breakdown_within_or_outside_the_province']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(breakdown_within_or_outside_the_province)%%>', urlencode($urow['breakdown_within_or_outside_the_province']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(description_of_vehicle_breakdown_notes)%%>', safe_html($urow['description_of_vehicle_breakdown_notes']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(description_of_vehicle_breakdown_notes)%%>', html_attr($row['description_of_vehicle_breakdown_notes']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(description_of_vehicle_breakdown_notes)%%>', urlencode($urow['description_of_vehicle_breakdown_notes']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(description_of_vehicle_breakdown)%%>', safe_html($urow['description_of_vehicle_breakdown']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(description_of_vehicle_breakdown)%%>', html_attr($row['description_of_vehicle_breakdown']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(description_of_vehicle_breakdown)%%>', urlencode($urow['description_of_vehicle_breakdown']), $templateCode);
		$templateCode = str_replace('<%%VALUE(date_of_vehicle_breakdown)%%>', app_datetime($row['date_of_vehicle_breakdown']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(date_of_vehicle_breakdown)%%>', urlencode(app_datetime($urow['date_of_vehicle_breakdown'])), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(work_allocation_reference_number)%%>', safe_html($urow['work_allocation_reference_number']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(work_allocation_reference_number)%%>', html_attr($row['work_allocation_reference_number']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(work_allocation_reference_number)%%>', urlencode($urow['work_allocation_reference_number']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(job_card_number)%%>', safe_html($urow['job_card_number']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(job_card_number)%%>', html_attr($row['job_card_number']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(job_card_number)%%>', urlencode($urow['job_card_number']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(vehicle_registration_number)%%>', safe_html($urow['vehicle_registration_number']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(vehicle_registration_number)%%>', html_attr($row['vehicle_registration_number']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(vehicle_registration_number)%%>', urlencode($urow['vehicle_registration_number']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(closing_km)%%>', safe_html($urow['closing_km']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(closing_km)%%>', html_attr($row['closing_km']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(closing_km)%%>', urlencode($urow['closing_km']), $templateCode);
		$templateCode = str_replace('<%%VALUE(date_of_vehicle_reactivation)%%>', app_datetime($row['date_of_vehicle_reactivation']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(date_of_vehicle_reactivation)%%>', urlencode(app_datetime($urow['date_of_vehicle_reactivation'])), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(type_of_expenditure)%%>', safe_html($urow['type_of_expenditure']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(type_of_expenditure)%%>', html_attr($row['type_of_expenditure']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(type_of_expenditure)%%>', urlencode($urow['type_of_expenditure']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(labour_category)%%>', safe_html($urow['labour_category']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(labour_category)%%>', html_attr($row['labour_category']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(labour_category)%%>', urlencode($urow['labour_category']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(part_number)%%>', safe_html($urow['part_number']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(part_number)%%>', html_attr($row['part_number']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(part_number)%%>', urlencode($urow['part_number']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(part_name)%%>', safe_html($urow['part_name']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(part_name)%%>', html_attr($row['part_name']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(part_name)%%>', urlencode($urow['part_name']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(part_manufacturer_name)%%>', safe_html($urow['part_manufacturer_name']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(part_manufacturer_name)%%>', html_attr($row['part_manufacturer_name']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(part_manufacturer_name)%%>', urlencode($urow['part_manufacturer_name']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(quantity)%%>', safe_html($urow['quantity']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(quantity)%%>', html_attr($row['quantity']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(quantity)%%>', urlencode($urow['quantity']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(expense_of_item)%%>', safe_html($urow['expense_of_item']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(expense_of_item)%%>', html_attr($row['expense_of_item']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(expense_of_item)%%>', urlencode($urow['expense_of_item']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(labour_category_1)%%>', safe_html($urow['labour_category_1']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(labour_category_1)%%>', html_attr($row['labour_category_1']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(labour_category_1)%%>', urlencode($urow['labour_category_1']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(part_number_1)%%>', safe_html($urow['part_number_1']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(part_number_1)%%>', html_attr($row['part_number_1']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(part_number_1)%%>', urlencode($urow['part_number_1']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(part_name_1)%%>', safe_html($urow['part_name_1']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(part_name_1)%%>', html_attr($row['part_name_1']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(part_name_1)%%>', urlencode($urow['part_name_1']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(part_manufacturer_name_1)%%>', safe_html($urow['part_manufacturer_name_1']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(part_manufacturer_name_1)%%>', html_attr($row['part_manufacturer_name_1']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(part_manufacturer_name_1)%%>', urlencode($urow['part_manufacturer_name_1']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(quantity_1)%%>', safe_html($urow['quantity_1']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(quantity_1)%%>', html_attr($row['quantity_1']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(quantity_1)%%>', urlencode($urow['quantity_1']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(expense_of_item_1)%%>', safe_html($urow['expense_of_item_1']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(expense_of_item_1)%%>', html_attr($row['expense_of_item_1']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(expense_of_item_1)%%>', urlencode($urow['expense_of_item_1']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(material_cost)%%>', safe_html($urow['material_cost']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(material_cost)%%>', html_attr($row['material_cost']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(material_cost)%%>', urlencode($urow['material_cost']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(average_worktime_hrs)%%>', safe_html($urow['average_worktime_hrs']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(average_worktime_hrs)%%>', html_attr($row['average_worktime_hrs']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(average_worktime_hrs)%%>', urlencode($urow['average_worktime_hrs']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(standard_labour_cost_per_hour)%%>', safe_html($urow['standard_labour_cost_per_hour']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(standard_labour_cost_per_hour)%%>', html_attr($row['standard_labour_cost_per_hour']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(standard_labour_cost_per_hour)%%>', urlencode($urow['standard_labour_cost_per_hour']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(labour_charges)%%>', safe_html($urow['labour_charges']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(labour_charges)%%>', html_attr($row['labour_charges']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(labour_charges)%%>', urlencode($urow['labour_charges']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(vat)%%>', safe_html($urow['vat']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(vat)%%>', html_attr($row['vat']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(vat)%%>', urlencode($urow['vat']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(total_amount)%%>', safe_html($urow['total_amount']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(total_amount)%%>', html_attr($row['total_amount']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(total_amount)%%>', urlencode($urow['total_amount']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(workshop_name)%%>', safe_html($urow['workshop_name']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(workshop_name)%%>', html_attr($row['workshop_name']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(workshop_name)%%>', urlencode($urow['workshop_name']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(work_order_status)%%>', safe_html($urow['work_order_status']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(work_order_status)%%>', html_attr($row['work_order_status']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(work_order_status)%%>', urlencode($urow['work_order_status']), $templateCode);
		if($AllowUpdate || $AllowInsert) {
			$templateCode = str_replace('<%%HTMLAREA(comments)%%>', '<textarea name="comments" id="comments" rows="5">' . safe_html(htmlspecialchars_decode($row['comments'])) . '</textarea>', $templateCode);
		} else {
			$templateCode = str_replace('<%%HTMLAREA(comments)%%>', '<div id="comments" class="form-control-static">' . $row['comments'] . '</div>', $templateCode);
		}
		$templateCode = str_replace('<%%VALUE(comments)%%>', nl2br($row['comments']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(comments)%%>', urlencode($urow['comments']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(upload_invoice)%%>', safe_html($urow['upload_invoice']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(upload_invoice)%%>', html_attr($row['upload_invoice']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(upload_invoice)%%>', urlencode($urow['upload_invoice']), $templateCode);
		$templateCode = str_replace('<%%VALUE(date_captured)%%>', app_datetime($row['date_captured'], 'dt'), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(date_captured)%%>', urlencode(app_datetime($urow['date_captured'], 'dt')), $templateCode);
	} else {
		$templateCode = str_replace('<%%VALUE(breakdown_id)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(breakdown_id)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(breakdown_of_vehicle)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(breakdown_of_vehicle)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(breakdown_during_office_hours)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(breakdown_during_office_hours)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(breakdown_within_or_outside_the_province)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(breakdown_within_or_outside_the_province)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(description_of_vehicle_breakdown_notes)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(description_of_vehicle_breakdown_notes)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(description_of_vehicle_breakdown)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(description_of_vehicle_breakdown)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(date_of_vehicle_breakdown)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(date_of_vehicle_breakdown)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(work_allocation_reference_number)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(work_allocation_reference_number)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(job_card_number)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(job_card_number)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(vehicle_registration_number)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(vehicle_registration_number)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(closing_km)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(closing_km)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(date_of_vehicle_reactivation)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(date_of_vehicle_reactivation)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(type_of_expenditure)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(type_of_expenditure)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(labour_category)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(labour_category)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(part_number)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(part_number)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(part_name)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(part_name)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(part_manufacturer_name)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(part_manufacturer_name)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(quantity)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(quantity)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(expense_of_item)%%>', '0.00', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(expense_of_item)%%>', urlencode('0.00'), $templateCode);
		$templateCode = str_replace('<%%VALUE(labour_category_1)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(labour_category_1)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(part_number_1)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(part_number_1)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(part_name_1)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(part_name_1)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(part_manufacturer_name_1)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(part_manufacturer_name_1)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(quantity_1)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(quantity_1)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(expense_of_item_1)%%>', '0.00', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(expense_of_item_1)%%>', urlencode('0.00'), $templateCode);
		$templateCode = str_replace('<%%VALUE(material_cost)%%>', '0.00', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(material_cost)%%>', urlencode('0.00'), $templateCode);
		$templateCode = str_replace('<%%VALUE(average_worktime_hrs)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(average_worktime_hrs)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(standard_labour_cost_per_hour)%%>', '0.00', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(standard_labour_cost_per_hour)%%>', urlencode('0.00'), $templateCode);
		$templateCode = str_replace('<%%VALUE(labour_charges)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(labour_charges)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(vat)%%>', '0.15', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(vat)%%>', urlencode('0.15'), $templateCode);
		$templateCode = str_replace('<%%VALUE(total_amount)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(total_amount)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(workshop_name)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(workshop_name)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(work_order_status)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(work_order_status)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%HTMLAREA(comments)%%>', '<textarea name="comments" id="comments" rows="5"></textarea>', $templateCode);
		$templateCode = str_replace('<%%VALUE(upload_invoice)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(upload_invoice)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(date_captured)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(date_captured)%%>', urlencode(''), $templateCode);
	}

	// process translations
	$templateCode = parseTemplate($templateCode);

	// clear scrap
	$templateCode = str_replace('<%%', '<!-- ', $templateCode);
	$templateCode = str_replace('%%>', ' -->', $templateCode);

	// hide links to inaccessible tables
	if(Request::val('dvprint_x') == '') {
		$templateCode .= "\n\n<script>\$j(function() {\n";
		$arrTables = getTableList();
		foreach($arrTables as $name => $caption) {
			$templateCode .= "\t\$j('#{$name}_link').removeClass('hidden');\n";
			$templateCode .= "\t\$j('#xs_{$name}_link').removeClass('hidden');\n";
		}

		$templateCode .= $jsReadOnly;
		$templateCode .= $jsEditable;

		if(!$selected_id) {
			$templateCode.="\n\tif(document.getElementById('description_of_vehicle_breakdownEdit')) { document.getElementById('description_of_vehicle_breakdownEdit').style.display='inline'; }";
			$templateCode.="\n\tif(document.getElementById('description_of_vehicle_breakdownEditLink')) { document.getElementById('description_of_vehicle_breakdownEditLink').style.display='none'; }";
			$templateCode.="\n\tif(document.getElementById('upload_invoiceEdit')) { document.getElementById('upload_invoiceEdit').style.display='inline'; }";
			$templateCode.="\n\tif(document.getElementById('upload_invoiceEditLink')) { document.getElementById('upload_invoiceEditLink').style.display='none'; }";
			$templateCode.="\n\tif(document.getElementById('receptionist_contact_emailEdit')) { document.getElementById('receptionist_contact_emailEdit').style.display='inline'; }";
			$templateCode.="\n\tif(document.getElementById('receptionist_contact_emailEditLink')) { document.getElementById('receptionist_contact_emailEditLink').style.display='none'; }";
		}

		$templateCode.="\n});</script>\n";
	}

	// ajaxed auto-fill fields
	$templateCode .= '<script>';
	$templateCode .= '$j(function() {';

	$templateCode .= "\tdescription_of_vehicle_breakdown_notes_update_autofills$rnd1 = function() {\n";
	$templateCode .= "\t\t\$j.ajax({\n";
	if($dvprint) {
		$templateCode .= "\t\t\turl: 'breakdown_services_autofill.php?rnd1=$rnd1&mfk=description_of_vehicle_breakdown_notes&id=' + encodeURIComponent('".addslashes($row['description_of_vehicle_breakdown_notes'])."'),\n";
		$templateCode .= "\t\t\tcontentType: 'application/x-www-form-urlencoded; charset=" . datalist_db_encoding . "',\n";
		$templateCode .= "\t\t\ttype: 'GET'\n";
	} else {
		$templateCode .= "\t\t\turl: 'breakdown_services_autofill.php?rnd1=$rnd1&mfk=description_of_vehicle_breakdown_notes&id=' + encodeURIComponent(AppGini.current_description_of_vehicle_breakdown_notes{$rnd1}.value),\n";
		$templateCode .= "\t\t\tcontentType: 'application/x-www-form-urlencoded; charset=" . datalist_db_encoding . "',\n";
		$templateCode .= "\t\t\ttype: 'GET',\n";
		$templateCode .= "\t\t\tbeforeSend: function() { \$j('#description_of_vehicle_breakdown_notes$rnd1').prop('disabled', true); },\n";
		$templateCode .= "\t\t\tcomplete: function() { " . (($arrPerm['insert'] || (($arrPerm['edit'] == 1 && $ownerMemberID == getLoggedMemberID()) || ($arrPerm['edit'] == 2 && $ownerGroupID == getLoggedGroupID()) || $arrPerm['edit'] == 3)) ? "\$j('#description_of_vehicle_breakdown_notes$rnd1').prop('disabled', false); " : "\$j('#description_of_vehicle_breakdown_notes$rnd1').prop('disabled', true); ")." \$j(window).resize(); }\n";
	}
	$templateCode .= "\t\t});\n";
	$templateCode .= "\t};\n";
	if(!$dvprint) $templateCode .= "\tif(\$j('#description_of_vehicle_breakdown_notes_caption').length) \$j('#description_of_vehicle_breakdown_notes_caption').click(function() { description_of_vehicle_breakdown_notes_update_autofills$rnd1(); });\n";

	$templateCode .= "\tvehicle_registration_number_update_autofills$rnd1 = function() {\n";
	$templateCode .= "\t\t\$j.ajax({\n";
	if($dvprint) {
		$templateCode .= "\t\t\turl: 'breakdown_services_autofill.php?rnd1=$rnd1&mfk=vehicle_registration_number&id=' + encodeURIComponent('".addslashes($row['vehicle_registration_number'])."'),\n";
		$templateCode .= "\t\t\tcontentType: 'application/x-www-form-urlencoded; charset=" . datalist_db_encoding . "',\n";
		$templateCode .= "\t\t\ttype: 'GET'\n";
	} else {
		$templateCode .= "\t\t\turl: 'breakdown_services_autofill.php?rnd1=$rnd1&mfk=vehicle_registration_number&id=' + encodeURIComponent(AppGini.current_vehicle_registration_number{$rnd1}.value),\n";
		$templateCode .= "\t\t\tcontentType: 'application/x-www-form-urlencoded; charset=" . datalist_db_encoding . "',\n";
		$templateCode .= "\t\t\ttype: 'GET',\n";
		$templateCode .= "\t\t\tbeforeSend: function() { \$j('#vehicle_registration_number$rnd1').prop('disabled', true); },\n";
		$templateCode .= "\t\t\tcomplete: function() { " . (($arrPerm['insert'] || (($arrPerm['edit'] == 1 && $ownerMemberID == getLoggedMemberID()) || ($arrPerm['edit'] == 2 && $ownerGroupID == getLoggedGroupID()) || $arrPerm['edit'] == 3)) ? "\$j('#vehicle_registration_number$rnd1').prop('disabled', false); " : "\$j('#vehicle_registration_number$rnd1').prop('disabled', true); ")." \$j(window).resize(); }\n";
	}
	$templateCode .= "\t\t});\n";
	$templateCode .= "\t};\n";
	if(!$dvprint) $templateCode .= "\tif(\$j('#vehicle_registration_number_caption').length) \$j('#vehicle_registration_number_caption').click(function() { vehicle_registration_number_update_autofills$rnd1(); });\n";


	$templateCode.="});";
	$templateCode.="</script>";
	$templateCode .= $lookups;

	// handle enforced parent values for read-only lookup fields
	$filterField = Request::val('FilterField');
	$filterOperator = Request::val('FilterOperator');
	$filterValue = Request::val('FilterValue');

	// don't include blank images in lightbox gallery
	$templateCode = preg_replace('/blank.gif" data-lightbox=".*?"/', 'blank.gif"', $templateCode);

	// don't display empty email links
	$templateCode=preg_replace('/<a .*?href="mailto:".*?<\/a>/', '', $templateCode);

	/* default field values */
	$rdata = $jdata = get_defaults('breakdown_services');
	if($selected_id) {
		$jdata = get_joined_record('breakdown_services', $selected_id);
		if($jdata === false) $jdata = get_defaults('breakdown_services');
		$rdata = $row;
	}
	$templateCode .= loadView('breakdown_services-ajax-cache', ['rdata' => $rdata, 'jdata' => $jdata]);

	// hook: breakdown_services_dv
	if(function_exists('breakdown_services_dv')) {
		$args = [];
		breakdown_services_dv(($selected_id ? $selected_id : FALSE), getMemberInfo(), $templateCode, $args);
	}

	return $templateCode;
}