<?php

// Data functions (insert, update, delete, form) for table vehicle_daily_check_list

// This script and data application were generated by AppGini 22.13
// Download AppGini for free from https://bigprof.com/appgini/download/

function vehicle_daily_check_list_insert(&$error_message = '') {
	global $Translation;

	// mm: can member insert record?
	$arrPerm = getTablePermissions('vehicle_daily_check_list');
	if(!$arrPerm['insert']) return false;

	$data = [
		'inspection_certification_number' => Request::val('inspection_certification_number', ''),
		'vehicle_registration_number' => Request::lookup('vehicle_registration_number', ''),
		'make_of_vehicle' => Request::lookup('vehicle_registration_number'),
		'closing_km' => Request::lookup('closing_km', ''),
		'dashboard' => Request::val('dashboard', ''),
		'seats' => Request::val('seats', ''),
		'carpets' => Request::val('carpets', ''),
		'wipers' => Request::val('wipers', ''),
		'head_lights' => Request::val('head_lights', ''),
		'tail_lights' => Request::val('tail_lights', ''),
		'brake_lights' => Request::val('brake_lights', ''),
		'indicators' => Request::val('indicators', ''),
		'windscreen' => Request::val('windscreen', ''),
		'windows' => Request::val('windows', ''),
		'mirrors' => Request::val('mirrors', ''),
		'wheels' => Request::val('wheels', ''),
		'hubcaps' => Request::val('hubcaps', ''),
		'sparewheel' => Request::val('sparewheel', ''),
		'tools' => Request::val('tools', ''),
		'engine_oil' => Request::val('engine_oil', ''),
		'power_steering_oil' => Request::val('power_steering_oil', ''),
		'gearbox_oil' => Request::val('gearbox_oil', ''),
		'coolant' => Request::val('coolant', ''),
		'brake_oil' => Request::val('brake_oil', ''),
		'battery' => Request::val('battery', ''),
		'brakes_front' => Request::val('brakes_front', ''),
		'brakes_rear' => Request::val('brakes_rear', ''),
		'fuel_level' => Request::val('fuel_level', ''),
		'vehicle_fluid_leaks' => Request::val('vehicle_fluid_leaks', ''),
		'note' => Request::val('note', ''),
		'document_checklist_report' => Request::fileUpload('document_checklist_report', [
			'maxSize' => 5242880,
			'types' => 'txt|doc|docx|docm|odt|pdf|rtf',
			'noRename' => true,
			'dir' => '',
			'success' => function($name, $selected_id) {
			},
			'failure' => function($selected_id, $fileRemoved) {
				if(!strlen(Request::val('SelectedID'))) return '';

				/* for empty upload fields, when saving a copy of an existing record, copy the original upload field */
				return existing_value('vehicle_daily_check_list', 'document_checklist_report', Request::val('SelectedID'));
			},
		]),
		'next_inspection_date' => Request::dateComponents('next_inspection_date', '1'),
		'drivers_surname' => Request::lookup('drivers_surname', ''),
		'drivers_persal_number' => Request::lookup('drivers_surname'),
	];


	// hook: vehicle_daily_check_list_before_insert
	if(function_exists('vehicle_daily_check_list_before_insert')) {
		$args = [];
		if(!vehicle_daily_check_list_before_insert($data, getMemberInfo(), $args)) {
			if(isset($args['error_message'])) $error_message = $args['error_message'];
			return false;
		}
	}

	$error = '';
	// set empty fields to NULL
	$data = array_map(function($v) { return ($v === '' ? NULL : $v); }, $data);
	insert('vehicle_daily_check_list', backtick_keys_once($data), $error);
	if($error) {
		$error_message = $error;
		return false;
	}

	$recID = db_insert_id(db_link());

	update_calc_fields('vehicle_daily_check_list', $recID, calculated_fields()['vehicle_daily_check_list']);

	// hook: vehicle_daily_check_list_after_insert
	if(function_exists('vehicle_daily_check_list_after_insert')) {
		$res = sql("SELECT * FROM `vehicle_daily_check_list` WHERE `vehicle_daily_check_list_id`='" . makeSafe($recID, false) . "' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)) {
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = makeSafe($recID, false);
		$args = [];
		if(!vehicle_daily_check_list_after_insert($data, getMemberInfo(), $args)) { return $recID; }
	}

	// mm: save ownership data
	set_record_owner('vehicle_daily_check_list', $recID, getLoggedMemberID());

	// if this record is a copy of another record, copy children if applicable
	if(strlen(Request::val('SelectedID'))) vehicle_daily_check_list_copy_children($recID, Request::val('SelectedID'));

	return $recID;
}

function vehicle_daily_check_list_copy_children($destination_id, $source_id) {
	global $Translation;
	$requests = []; // array of curl handlers for launching insert requests
	$eo = ['silentErrors' => true];
	$safe_sid = makeSafe($source_id);

	// launch requests, asynchronously
	curl_batch($requests);
}

function vehicle_daily_check_list_delete($selected_id, $AllowDeleteOfParents = false, $skipChecks = false) {
	// insure referential integrity ...
	global $Translation;
	$selected_id = makeSafe($selected_id);

	// mm: can member delete record?
	if(!check_record_permission('vehicle_daily_check_list', $selected_id, 'delete')) {
		return $Translation['You don\'t have enough permissions to delete this record'];
	}

	// hook: vehicle_daily_check_list_before_delete
	if(function_exists('vehicle_daily_check_list_before_delete')) {
		$args = [];
		if(!vehicle_daily_check_list_before_delete($selected_id, $skipChecks, getMemberInfo(), $args))
			return $Translation['Couldn\'t delete this record'] . (
				!empty($args['error_message']) ?
					'<div class="text-bold">' . strip_tags($args['error_message']) . '</div>'
					: '' 
			);
	}

	// child table: vehicle_history
	$res = sql("SELECT `vehicle_daily_check_list_id` FROM `vehicle_daily_check_list` WHERE `vehicle_daily_check_list_id`='{$selected_id}'", $eo);
	$vehicle_daily_check_list_id = db_fetch_row($res);
	$rires = sql("SELECT COUNT(1) FROM `vehicle_history` WHERE `inspection_certification_number`='" . makeSafe($vehicle_daily_check_list_id[0]) . "'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'vehicle_history', $RetMsg);
		return $RetMsg;
	} elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation['confirm delete'];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'vehicle_history', $RetMsg);
		$RetMsg = str_replace('<Delete>', '<input type="button" class="btn btn-danger" value="' . html_attr($Translation['yes']) . '" onClick="window.location = \'vehicle_daily_check_list_view.php?SelectedID=' . urlencode($selected_id) . '&delete_x=1&confirmed=1&csrf_token=' . urlencode(csrf_token(false, true)) . '\';">', $RetMsg);
		$RetMsg = str_replace('<Cancel>', '<input type="button" class="btn btn-success" value="' . html_attr($Translation[ 'no']) . '" onClick="window.location = \'vehicle_daily_check_list_view.php?SelectedID=' . urlencode($selected_id) . '\';">', $RetMsg);
		return $RetMsg;
	}

	// child table: vehicle_history
	$res = sql("SELECT `vehicle_daily_check_list_id` FROM `vehicle_daily_check_list` WHERE `vehicle_daily_check_list_id`='{$selected_id}'", $eo);
	$vehicle_daily_check_list_id = db_fetch_row($res);
	$rires = sql("SELECT COUNT(1) FROM `vehicle_history` WHERE `document_checklist_report`='" . makeSafe($vehicle_daily_check_list_id[0]) . "'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'vehicle_history', $RetMsg);
		return $RetMsg;
	} elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation['confirm delete'];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'vehicle_history', $RetMsg);
		$RetMsg = str_replace('<Delete>', '<input type="button" class="btn btn-danger" value="' . html_attr($Translation['yes']) . '" onClick="window.location = \'vehicle_daily_check_list_view.php?SelectedID=' . urlencode($selected_id) . '&delete_x=1&confirmed=1&csrf_token=' . urlencode(csrf_token(false, true)) . '\';">', $RetMsg);
		$RetMsg = str_replace('<Cancel>', '<input type="button" class="btn btn-success" value="' . html_attr($Translation[ 'no']) . '" onClick="window.location = \'vehicle_daily_check_list_view.php?SelectedID=' . urlencode($selected_id) . '\';">', $RetMsg);
		return $RetMsg;
	}

	// child table: vehicle_history
	$res = sql("SELECT `vehicle_daily_check_list_id` FROM `vehicle_daily_check_list` WHERE `vehicle_daily_check_list_id`='{$selected_id}'", $eo);
	$vehicle_daily_check_list_id = db_fetch_row($res);
	$rires = sql("SELECT COUNT(1) FROM `vehicle_history` WHERE `next_inspection_date`='" . makeSafe($vehicle_daily_check_list_id[0]) . "'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'vehicle_history', $RetMsg);
		return $RetMsg;
	} elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation['confirm delete'];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'vehicle_history', $RetMsg);
		$RetMsg = str_replace('<Delete>', '<input type="button" class="btn btn-danger" value="' . html_attr($Translation['yes']) . '" onClick="window.location = \'vehicle_daily_check_list_view.php?SelectedID=' . urlencode($selected_id) . '&delete_x=1&confirmed=1&csrf_token=' . urlencode(csrf_token(false, true)) . '\';">', $RetMsg);
		$RetMsg = str_replace('<Cancel>', '<input type="button" class="btn btn-success" value="' . html_attr($Translation[ 'no']) . '" onClick="window.location = \'vehicle_daily_check_list_view.php?SelectedID=' . urlencode($selected_id) . '\';">', $RetMsg);
		return $RetMsg;
	}

	sql("DELETE FROM `vehicle_daily_check_list` WHERE `vehicle_daily_check_list_id`='{$selected_id}'", $eo);

	// hook: vehicle_daily_check_list_after_delete
	if(function_exists('vehicle_daily_check_list_after_delete')) {
		$args = [];
		vehicle_daily_check_list_after_delete($selected_id, getMemberInfo(), $args);
	}

	// mm: delete ownership data
	sql("DELETE FROM `membership_userrecords` WHERE `tableName`='vehicle_daily_check_list' AND `pkValue`='{$selected_id}'", $eo);
}

function vehicle_daily_check_list_update(&$selected_id, &$error_message = '') {
	global $Translation;

	// mm: can member edit record?
	if(!check_record_permission('vehicle_daily_check_list', $selected_id, 'edit')) return false;

	$data = [
		'inspection_certification_number' => Request::val('inspection_certification_number', ''),
		'vehicle_registration_number' => Request::lookup('vehicle_registration_number', ''),
		'make_of_vehicle' => Request::lookup('vehicle_registration_number'),
		'closing_km' => Request::lookup('closing_km', ''),
		'dashboard' => Request::val('dashboard', ''),
		'seats' => Request::val('seats', ''),
		'carpets' => Request::val('carpets', ''),
		'wipers' => Request::val('wipers', ''),
		'head_lights' => Request::val('head_lights', ''),
		'tail_lights' => Request::val('tail_lights', ''),
		'brake_lights' => Request::val('brake_lights', ''),
		'indicators' => Request::val('indicators', ''),
		'windscreen' => Request::val('windscreen', ''),
		'windows' => Request::val('windows', ''),
		'mirrors' => Request::val('mirrors', ''),
		'wheels' => Request::val('wheels', ''),
		'hubcaps' => Request::val('hubcaps', ''),
		'sparewheel' => Request::val('sparewheel', ''),
		'tools' => Request::val('tools', ''),
		'engine_oil' => Request::val('engine_oil', ''),
		'power_steering_oil' => Request::val('power_steering_oil', ''),
		'gearbox_oil' => Request::val('gearbox_oil', ''),
		'coolant' => Request::val('coolant', ''),
		'brake_oil' => Request::val('brake_oil', ''),
		'battery' => Request::val('battery', ''),
		'brakes_front' => Request::val('brakes_front', ''),
		'brakes_rear' => Request::val('brakes_rear', ''),
		'fuel_level' => Request::val('fuel_level', ''),
		'vehicle_fluid_leaks' => Request::val('vehicle_fluid_leaks', ''),
		'note' => Request::val('note', ''),
		'document_checklist_report' => Request::fileUpload('document_checklist_report', [
			'maxSize' => 5242880,
			'types' => 'txt|doc|docx|docm|odt|pdf|rtf',
			'noRename' => true,
			'dir' => '',
			'id' => $selected_id,
			'success' => function($name, $selected_id) {
			},
			'removeOnRequest' => true,
			'remove' => function($selected_id) {
				// do nothing: preserve removed files on server.
			},
			'failure' => function($selected_id, $fileRemoved) {
				if($fileRemoved) return '';
				return existing_value('vehicle_daily_check_list', 'document_checklist_report', $selected_id);
			},
		]),
		'next_inspection_date' => Request::dateComponents('next_inspection_date', ''),
		'drivers_surname' => Request::lookup('drivers_surname', ''),
		'drivers_persal_number' => Request::lookup('drivers_surname'),
	];

	// get existing values
	$old_data = getRecord('vehicle_daily_check_list', $selected_id);
	if(is_array($old_data)) {
		$old_data = array_map('makeSafe', $old_data);
		$old_data['selectedID'] = makeSafe($selected_id);
	}

	$data['selectedID'] = makeSafe($selected_id);

	// hook: vehicle_daily_check_list_before_update
	if(function_exists('vehicle_daily_check_list_before_update')) {
		$args = ['old_data' => $old_data];
		if(!vehicle_daily_check_list_before_update($data, getMemberInfo(), $args)) {
			if(isset($args['error_message'])) $error_message = $args['error_message'];
			return false;
		}
	}

	$set = $data; unset($set['selectedID']);
	foreach ($set as $field => $value) {
		$set[$field] = ($value !== '' && $value !== NULL) ? $value : NULL;
	}

	if(!update(
		'vehicle_daily_check_list', 
		backtick_keys_once($set), 
		['`vehicle_daily_check_list_id`' => $selected_id], 
		$error_message
	)) {
		echo $error_message;
		echo '<a href="vehicle_daily_check_list_view.php?SelectedID=' . urlencode($selected_id) . "\">{$Translation['< back']}</a>";
		exit;
	}


	$eo = ['silentErrors' => true];

	update_calc_fields('vehicle_daily_check_list', $data['selectedID'], calculated_fields()['vehicle_daily_check_list']);

	// hook: vehicle_daily_check_list_after_update
	if(function_exists('vehicle_daily_check_list_after_update')) {
		$res = sql("SELECT * FROM `vehicle_daily_check_list` WHERE `vehicle_daily_check_list_id`='{$data['selectedID']}' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)) $data = array_map('makeSafe', $row);

		$data['selectedID'] = $data['vehicle_daily_check_list_id'];
		$args = ['old_data' => $old_data];
		if(!vehicle_daily_check_list_after_update($data, getMemberInfo(), $args)) return;
	}

	// mm: update ownership data
	sql("UPDATE `membership_userrecords` SET `dateUpdated`='" . time() . "' WHERE `tableName`='vehicle_daily_check_list' AND `pkValue`='" . makeSafe($selected_id) . "'", $eo);
}

function vehicle_daily_check_list_form($selected_id = '', $AllowUpdate = 1, $AllowInsert = 1, $AllowDelete = 1, $separateDV = 0, $TemplateDV = '', $TemplateDVP = '') {
	// function to return an editable form for a table records
	// and fill it with data of record whose ID is $selected_id. If $selected_id
	// is empty, an empty form is shown, with only an 'Add New'
	// button displayed.

	global $Translation;
	$eo = ['silentErrors' => true];
	$noUploads = null;
	$row = $urow = $jsReadOnly = $jsEditable = $lookups = null;

	$noSaveAsCopy = true;

	// mm: get table permissions
	$arrPerm = getTablePermissions('vehicle_daily_check_list');
	if(!$arrPerm['insert'] && $selected_id == '')
		// no insert permission and no record selected
		// so show access denied error unless TVDV
		return $separateDV ? $Translation['tableAccessDenied'] : '';
	$AllowInsert = ($arrPerm['insert'] ? true : false);
	// print preview?
	$dvprint = false;
	if(strlen($selected_id) && Request::val('dvprint_x') != '') {
		$dvprint = true;
	}

	$filterer_vehicle_registration_number = Request::val('filterer_vehicle_registration_number');
	$filterer_closing_km = Request::val('filterer_closing_km');
	$filterer_drivers_surname = Request::val('filterer_drivers_surname');

	// populate filterers, starting from children to grand-parents

	// unique random identifier
	$rnd1 = ($dvprint ? rand(1000000, 9999999) : '');
	// combobox: vehicle_registration_number
	$combo_vehicle_registration_number = new DataCombo;
	// combobox: closing_km
	$combo_closing_km = new DataCombo;
	// combobox: dashboard
	$combo_dashboard = new Combo;
	$combo_dashboard->ListType = 2;
	$combo_dashboard->MultipleSeparator = ', ';
	$combo_dashboard->ListBoxHeight = 10;
	$combo_dashboard->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/vehicle_daily_check_list.dashboard.csv')) {
		$dashboard_data = addslashes(implode('', @file(__DIR__ . '/hooks/vehicle_daily_check_list.dashboard.csv')));
		$combo_dashboard->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($dashboard_data))));
		$combo_dashboard->ListData = $combo_dashboard->ListItem;
	} else {
		$combo_dashboard->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("Ok;; Faulty;; Need Attention"))));
		$combo_dashboard->ListData = $combo_dashboard->ListItem;
	}
	$combo_dashboard->SelectName = 'dashboard';
	// combobox: seats
	$combo_seats = new Combo;
	$combo_seats->ListType = 2;
	$combo_seats->MultipleSeparator = ', ';
	$combo_seats->ListBoxHeight = 10;
	$combo_seats->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/vehicle_daily_check_list.seats.csv')) {
		$seats_data = addslashes(implode('', @file(__DIR__ . '/hooks/vehicle_daily_check_list.seats.csv')));
		$combo_seats->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($seats_data))));
		$combo_seats->ListData = $combo_seats->ListItem;
	} else {
		$combo_seats->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("Ok;; Faulty;; Need Attention"))));
		$combo_seats->ListData = $combo_seats->ListItem;
	}
	$combo_seats->SelectName = 'seats';
	// combobox: carpets
	$combo_carpets = new Combo;
	$combo_carpets->ListType = 2;
	$combo_carpets->MultipleSeparator = ', ';
	$combo_carpets->ListBoxHeight = 10;
	$combo_carpets->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/vehicle_daily_check_list.carpets.csv')) {
		$carpets_data = addslashes(implode('', @file(__DIR__ . '/hooks/vehicle_daily_check_list.carpets.csv')));
		$combo_carpets->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($carpets_data))));
		$combo_carpets->ListData = $combo_carpets->ListItem;
	} else {
		$combo_carpets->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("Ok;; Need Attention"))));
		$combo_carpets->ListData = $combo_carpets->ListItem;
	}
	$combo_carpets->SelectName = 'carpets';
	// combobox: wipers
	$combo_wipers = new Combo;
	$combo_wipers->ListType = 2;
	$combo_wipers->MultipleSeparator = ', ';
	$combo_wipers->ListBoxHeight = 10;
	$combo_wipers->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/vehicle_daily_check_list.wipers.csv')) {
		$wipers_data = addslashes(implode('', @file(__DIR__ . '/hooks/vehicle_daily_check_list.wipers.csv')));
		$combo_wipers->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($wipers_data))));
		$combo_wipers->ListData = $combo_wipers->ListItem;
	} else {
		$combo_wipers->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("Ok;; Faulty;; Need Attention"))));
		$combo_wipers->ListData = $combo_wipers->ListItem;
	}
	$combo_wipers->SelectName = 'wipers';
	// combobox: head_lights
	$combo_head_lights = new Combo;
	$combo_head_lights->ListType = 2;
	$combo_head_lights->MultipleSeparator = ', ';
	$combo_head_lights->ListBoxHeight = 10;
	$combo_head_lights->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/vehicle_daily_check_list.head_lights.csv')) {
		$head_lights_data = addslashes(implode('', @file(__DIR__ . '/hooks/vehicle_daily_check_list.head_lights.csv')));
		$combo_head_lights->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($head_lights_data))));
		$combo_head_lights->ListData = $combo_head_lights->ListItem;
	} else {
		$combo_head_lights->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("Ok;; Faulty;; Need Attention"))));
		$combo_head_lights->ListData = $combo_head_lights->ListItem;
	}
	$combo_head_lights->SelectName = 'head_lights';
	// combobox: tail_lights
	$combo_tail_lights = new Combo;
	$combo_tail_lights->ListType = 2;
	$combo_tail_lights->MultipleSeparator = ', ';
	$combo_tail_lights->ListBoxHeight = 10;
	$combo_tail_lights->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/vehicle_daily_check_list.tail_lights.csv')) {
		$tail_lights_data = addslashes(implode('', @file(__DIR__ . '/hooks/vehicle_daily_check_list.tail_lights.csv')));
		$combo_tail_lights->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($tail_lights_data))));
		$combo_tail_lights->ListData = $combo_tail_lights->ListItem;
	} else {
		$combo_tail_lights->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("Ok;; Faulty;; Need Attention"))));
		$combo_tail_lights->ListData = $combo_tail_lights->ListItem;
	}
	$combo_tail_lights->SelectName = 'tail_lights';
	// combobox: brake_lights
	$combo_brake_lights = new Combo;
	$combo_brake_lights->ListType = 2;
	$combo_brake_lights->MultipleSeparator = ', ';
	$combo_brake_lights->ListBoxHeight = 10;
	$combo_brake_lights->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/vehicle_daily_check_list.brake_lights.csv')) {
		$brake_lights_data = addslashes(implode('', @file(__DIR__ . '/hooks/vehicle_daily_check_list.brake_lights.csv')));
		$combo_brake_lights->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($brake_lights_data))));
		$combo_brake_lights->ListData = $combo_brake_lights->ListItem;
	} else {
		$combo_brake_lights->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("Ok;; Faulty;; Need Attention"))));
		$combo_brake_lights->ListData = $combo_brake_lights->ListItem;
	}
	$combo_brake_lights->SelectName = 'brake_lights';
	// combobox: indicators
	$combo_indicators = new Combo;
	$combo_indicators->ListType = 2;
	$combo_indicators->MultipleSeparator = ', ';
	$combo_indicators->ListBoxHeight = 10;
	$combo_indicators->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/vehicle_daily_check_list.indicators.csv')) {
		$indicators_data = addslashes(implode('', @file(__DIR__ . '/hooks/vehicle_daily_check_list.indicators.csv')));
		$combo_indicators->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($indicators_data))));
		$combo_indicators->ListData = $combo_indicators->ListItem;
	} else {
		$combo_indicators->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("Ok;; Faulty;; Need Attention"))));
		$combo_indicators->ListData = $combo_indicators->ListItem;
	}
	$combo_indicators->SelectName = 'indicators';
	// combobox: windscreen
	$combo_windscreen = new Combo;
	$combo_windscreen->ListType = 2;
	$combo_windscreen->MultipleSeparator = ', ';
	$combo_windscreen->ListBoxHeight = 10;
	$combo_windscreen->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/vehicle_daily_check_list.windscreen.csv')) {
		$windscreen_data = addslashes(implode('', @file(__DIR__ . '/hooks/vehicle_daily_check_list.windscreen.csv')));
		$combo_windscreen->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($windscreen_data))));
		$combo_windscreen->ListData = $combo_windscreen->ListItem;
	} else {
		$combo_windscreen->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("Ok;; Faulty;; Need Attention"))));
		$combo_windscreen->ListData = $combo_windscreen->ListItem;
	}
	$combo_windscreen->SelectName = 'windscreen';
	// combobox: windows
	$combo_windows = new Combo;
	$combo_windows->ListType = 2;
	$combo_windows->MultipleSeparator = ', ';
	$combo_windows->ListBoxHeight = 10;
	$combo_windows->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/vehicle_daily_check_list.windows.csv')) {
		$windows_data = addslashes(implode('', @file(__DIR__ . '/hooks/vehicle_daily_check_list.windows.csv')));
		$combo_windows->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($windows_data))));
		$combo_windows->ListData = $combo_windows->ListItem;
	} else {
		$combo_windows->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("Ok;; Faulty;; Need Attention"))));
		$combo_windows->ListData = $combo_windows->ListItem;
	}
	$combo_windows->SelectName = 'windows';
	// combobox: mirrors
	$combo_mirrors = new Combo;
	$combo_mirrors->ListType = 2;
	$combo_mirrors->MultipleSeparator = ', ';
	$combo_mirrors->ListBoxHeight = 10;
	$combo_mirrors->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/vehicle_daily_check_list.mirrors.csv')) {
		$mirrors_data = addslashes(implode('', @file(__DIR__ . '/hooks/vehicle_daily_check_list.mirrors.csv')));
		$combo_mirrors->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($mirrors_data))));
		$combo_mirrors->ListData = $combo_mirrors->ListItem;
	} else {
		$combo_mirrors->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("Ok;; Faulty;; Need Attention"))));
		$combo_mirrors->ListData = $combo_mirrors->ListItem;
	}
	$combo_mirrors->SelectName = 'mirrors';
	// combobox: wheels
	$combo_wheels = new Combo;
	$combo_wheels->ListType = 2;
	$combo_wheels->MultipleSeparator = ', ';
	$combo_wheels->ListBoxHeight = 10;
	$combo_wheels->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/vehicle_daily_check_list.wheels.csv')) {
		$wheels_data = addslashes(implode('', @file(__DIR__ . '/hooks/vehicle_daily_check_list.wheels.csv')));
		$combo_wheels->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($wheels_data))));
		$combo_wheels->ListData = $combo_wheels->ListItem;
	} else {
		$combo_wheels->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("Ok;; Faulty;; Need Attention"))));
		$combo_wheels->ListData = $combo_wheels->ListItem;
	}
	$combo_wheels->SelectName = 'wheels';
	// combobox: hubcaps
	$combo_hubcaps = new Combo;
	$combo_hubcaps->ListType = 2;
	$combo_hubcaps->MultipleSeparator = ', ';
	$combo_hubcaps->ListBoxHeight = 10;
	$combo_hubcaps->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/vehicle_daily_check_list.hubcaps.csv')) {
		$hubcaps_data = addslashes(implode('', @file(__DIR__ . '/hooks/vehicle_daily_check_list.hubcaps.csv')));
		$combo_hubcaps->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($hubcaps_data))));
		$combo_hubcaps->ListData = $combo_hubcaps->ListItem;
	} else {
		$combo_hubcaps->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("Ok;; Faulty;; Need Attention"))));
		$combo_hubcaps->ListData = $combo_hubcaps->ListItem;
	}
	$combo_hubcaps->SelectName = 'hubcaps';
	// combobox: sparewheel
	$combo_sparewheel = new Combo;
	$combo_sparewheel->ListType = 2;
	$combo_sparewheel->MultipleSeparator = ', ';
	$combo_sparewheel->ListBoxHeight = 10;
	$combo_sparewheel->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/vehicle_daily_check_list.sparewheel.csv')) {
		$sparewheel_data = addslashes(implode('', @file(__DIR__ . '/hooks/vehicle_daily_check_list.sparewheel.csv')));
		$combo_sparewheel->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($sparewheel_data))));
		$combo_sparewheel->ListData = $combo_sparewheel->ListItem;
	} else {
		$combo_sparewheel->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("Ok;; Faulty;; Need Attention"))));
		$combo_sparewheel->ListData = $combo_sparewheel->ListItem;
	}
	$combo_sparewheel->SelectName = 'sparewheel';
	// combobox: tools
	$combo_tools = new Combo;
	$combo_tools->ListType = 2;
	$combo_tools->MultipleSeparator = ', ';
	$combo_tools->ListBoxHeight = 10;
	$combo_tools->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/vehicle_daily_check_list.tools.csv')) {
		$tools_data = addslashes(implode('', @file(__DIR__ . '/hooks/vehicle_daily_check_list.tools.csv')));
		$combo_tools->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($tools_data))));
		$combo_tools->ListData = $combo_tools->ListItem;
	} else {
		$combo_tools->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("Ok;; Faulty;; Missing;; Broken;; Need Attention"))));
		$combo_tools->ListData = $combo_tools->ListItem;
	}
	$combo_tools->SelectName = 'tools';
	// combobox: engine_oil
	$combo_engine_oil = new Combo;
	$combo_engine_oil->ListType = 2;
	$combo_engine_oil->MultipleSeparator = ', ';
	$combo_engine_oil->ListBoxHeight = 10;
	$combo_engine_oil->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/vehicle_daily_check_list.engine_oil.csv')) {
		$engine_oil_data = addslashes(implode('', @file(__DIR__ . '/hooks/vehicle_daily_check_list.engine_oil.csv')));
		$combo_engine_oil->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($engine_oil_data))));
		$combo_engine_oil->ListData = $combo_engine_oil->ListItem;
	} else {
		$combo_engine_oil->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("Ok;; Low;; Faulty;; Need Attention"))));
		$combo_engine_oil->ListData = $combo_engine_oil->ListItem;
	}
	$combo_engine_oil->SelectName = 'engine_oil';
	// combobox: power_steering_oil
	$combo_power_steering_oil = new Combo;
	$combo_power_steering_oil->ListType = 2;
	$combo_power_steering_oil->MultipleSeparator = ', ';
	$combo_power_steering_oil->ListBoxHeight = 10;
	$combo_power_steering_oil->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/vehicle_daily_check_list.power_steering_oil.csv')) {
		$power_steering_oil_data = addslashes(implode('', @file(__DIR__ . '/hooks/vehicle_daily_check_list.power_steering_oil.csv')));
		$combo_power_steering_oil->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($power_steering_oil_data))));
		$combo_power_steering_oil->ListData = $combo_power_steering_oil->ListItem;
	} else {
		$combo_power_steering_oil->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("Ok;; Low;;Faulty;; Need Attention"))));
		$combo_power_steering_oil->ListData = $combo_power_steering_oil->ListItem;
	}
	$combo_power_steering_oil->SelectName = 'power_steering_oil';
	// combobox: gearbox_oil
	$combo_gearbox_oil = new Combo;
	$combo_gearbox_oil->ListType = 2;
	$combo_gearbox_oil->MultipleSeparator = ', ';
	$combo_gearbox_oil->ListBoxHeight = 10;
	$combo_gearbox_oil->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/vehicle_daily_check_list.gearbox_oil.csv')) {
		$gearbox_oil_data = addslashes(implode('', @file(__DIR__ . '/hooks/vehicle_daily_check_list.gearbox_oil.csv')));
		$combo_gearbox_oil->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($gearbox_oil_data))));
		$combo_gearbox_oil->ListData = $combo_gearbox_oil->ListItem;
	} else {
		$combo_gearbox_oil->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("Ok;; Low;; Faulty;; Need Attention"))));
		$combo_gearbox_oil->ListData = $combo_gearbox_oil->ListItem;
	}
	$combo_gearbox_oil->SelectName = 'gearbox_oil';
	// combobox: coolant
	$combo_coolant = new Combo;
	$combo_coolant->ListType = 2;
	$combo_coolant->MultipleSeparator = ', ';
	$combo_coolant->ListBoxHeight = 10;
	$combo_coolant->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/vehicle_daily_check_list.coolant.csv')) {
		$coolant_data = addslashes(implode('', @file(__DIR__ . '/hooks/vehicle_daily_check_list.coolant.csv')));
		$combo_coolant->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($coolant_data))));
		$combo_coolant->ListData = $combo_coolant->ListItem;
	} else {
		$combo_coolant->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("Ok;; Low;; Need Attention"))));
		$combo_coolant->ListData = $combo_coolant->ListItem;
	}
	$combo_coolant->SelectName = 'coolant';
	// combobox: brake_oil
	$combo_brake_oil = new Combo;
	$combo_brake_oil->ListType = 2;
	$combo_brake_oil->MultipleSeparator = ', ';
	$combo_brake_oil->ListBoxHeight = 10;
	$combo_brake_oil->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/vehicle_daily_check_list.brake_oil.csv')) {
		$brake_oil_data = addslashes(implode('', @file(__DIR__ . '/hooks/vehicle_daily_check_list.brake_oil.csv')));
		$combo_brake_oil->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($brake_oil_data))));
		$combo_brake_oil->ListData = $combo_brake_oil->ListItem;
	} else {
		$combo_brake_oil->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("Ok;; Low;; Faulty;; Need Attention"))));
		$combo_brake_oil->ListData = $combo_brake_oil->ListItem;
	}
	$combo_brake_oil->SelectName = 'brake_oil';
	// combobox: battery
	$combo_battery = new Combo;
	$combo_battery->ListType = 2;
	$combo_battery->MultipleSeparator = ', ';
	$combo_battery->ListBoxHeight = 10;
	$combo_battery->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/vehicle_daily_check_list.battery.csv')) {
		$battery_data = addslashes(implode('', @file(__DIR__ . '/hooks/vehicle_daily_check_list.battery.csv')));
		$combo_battery->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($battery_data))));
		$combo_battery->ListData = $combo_battery->ListItem;
	} else {
		$combo_battery->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("Ok;; Faulty;; Need Attention"))));
		$combo_battery->ListData = $combo_battery->ListItem;
	}
	$combo_battery->SelectName = 'battery';
	// combobox: brakes_front
	$combo_brakes_front = new Combo;
	$combo_brakes_front->ListType = 2;
	$combo_brakes_front->MultipleSeparator = ', ';
	$combo_brakes_front->ListBoxHeight = 10;
	$combo_brakes_front->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/vehicle_daily_check_list.brakes_front.csv')) {
		$brakes_front_data = addslashes(implode('', @file(__DIR__ . '/hooks/vehicle_daily_check_list.brakes_front.csv')));
		$combo_brakes_front->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($brakes_front_data))));
		$combo_brakes_front->ListData = $combo_brakes_front->ListItem;
	} else {
		$combo_brakes_front->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("Ok;; Faulty;; Need Attention"))));
		$combo_brakes_front->ListData = $combo_brakes_front->ListItem;
	}
	$combo_brakes_front->SelectName = 'brakes_front';
	// combobox: brakes_rear
	$combo_brakes_rear = new Combo;
	$combo_brakes_rear->ListType = 2;
	$combo_brakes_rear->MultipleSeparator = ', ';
	$combo_brakes_rear->ListBoxHeight = 10;
	$combo_brakes_rear->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/vehicle_daily_check_list.brakes_rear.csv')) {
		$brakes_rear_data = addslashes(implode('', @file(__DIR__ . '/hooks/vehicle_daily_check_list.brakes_rear.csv')));
		$combo_brakes_rear->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($brakes_rear_data))));
		$combo_brakes_rear->ListData = $combo_brakes_rear->ListItem;
	} else {
		$combo_brakes_rear->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("Ok;; Faulty;; Need Attention"))));
		$combo_brakes_rear->ListData = $combo_brakes_rear->ListItem;
	}
	$combo_brakes_rear->SelectName = 'brakes_rear';
	// combobox: fuel_level
	$combo_fuel_level = new Combo;
	$combo_fuel_level->ListType = 2;
	$combo_fuel_level->MultipleSeparator = ', ';
	$combo_fuel_level->ListBoxHeight = 10;
	$combo_fuel_level->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/vehicle_daily_check_list.fuel_level.csv')) {
		$fuel_level_data = addslashes(implode('', @file(__DIR__ . '/hooks/vehicle_daily_check_list.fuel_level.csv')));
		$combo_fuel_level->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($fuel_level_data))));
		$combo_fuel_level->ListData = $combo_fuel_level->ListItem;
	} else {
		$combo_fuel_level->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("Ok;; Low;; Faulty;; Need Attention"))));
		$combo_fuel_level->ListData = $combo_fuel_level->ListItem;
	}
	$combo_fuel_level->SelectName = 'fuel_level';
	// combobox: vehicle_fluid_leaks
	$combo_vehicle_fluid_leaks = new Combo;
	$combo_vehicle_fluid_leaks->ListType = 2;
	$combo_vehicle_fluid_leaks->MultipleSeparator = ', ';
	$combo_vehicle_fluid_leaks->ListBoxHeight = 10;
	$combo_vehicle_fluid_leaks->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/vehicle_daily_check_list.vehicle_fluid_leaks.csv')) {
		$vehicle_fluid_leaks_data = addslashes(implode('', @file(__DIR__ . '/hooks/vehicle_daily_check_list.vehicle_fluid_leaks.csv')));
		$combo_vehicle_fluid_leaks->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($vehicle_fluid_leaks_data))));
		$combo_vehicle_fluid_leaks->ListData = $combo_vehicle_fluid_leaks->ListItem;
	} else {
		$combo_vehicle_fluid_leaks->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("Ok;; Faulty;; Need Attention"))));
		$combo_vehicle_fluid_leaks->ListData = $combo_vehicle_fluid_leaks->ListItem;
	}
	$combo_vehicle_fluid_leaks->SelectName = 'vehicle_fluid_leaks';
	// combobox: next_inspection_date
	$combo_next_inspection_date = new DateCombo;
	$combo_next_inspection_date->DateFormat = "dmy";
	$combo_next_inspection_date->MinYear = defined('vehicle_daily_check_list.next_inspection_date.MinYear') ? constant('vehicle_daily_check_list.next_inspection_date.MinYear') : 1900;
	$combo_next_inspection_date->MaxYear = defined('vehicle_daily_check_list.next_inspection_date.MaxYear') ? constant('vehicle_daily_check_list.next_inspection_date.MaxYear') : 2100;
	$combo_next_inspection_date->DefaultDate = parseMySQLDate('1', '1');
	$combo_next_inspection_date->MonthNames = $Translation['month names'];
	$combo_next_inspection_date->NamePrefix = 'next_inspection_date';
	// combobox: drivers_surname
	$combo_drivers_surname = new DataCombo;

	if($selected_id) {
		// mm: check member permissions
		if(!$arrPerm['view']) return $Translation['tableAccessDenied'];

		// mm: who is the owner?
		$ownerGroupID = sqlValue("SELECT `groupID` FROM `membership_userrecords` WHERE `tableName`='vehicle_daily_check_list' AND `pkValue`='" . makeSafe($selected_id) . "'");
		$ownerMemberID = sqlValue("SELECT LCASE(`memberID`) FROM `membership_userrecords` WHERE `tableName`='vehicle_daily_check_list' AND `pkValue`='" . makeSafe($selected_id) . "'");

		if($arrPerm['view'] == 1 && getLoggedMemberID() != $ownerMemberID) return $Translation['tableAccessDenied'];
		if($arrPerm['view'] == 2 && getLoggedGroupID() != $ownerGroupID) return $Translation['tableAccessDenied'];

		// can edit?
		$AllowUpdate = 0;
		if(($arrPerm['edit'] == 1 && $ownerMemberID == getLoggedMemberID()) || ($arrPerm['edit'] == 2 && $ownerGroupID == getLoggedGroupID()) || $arrPerm['edit'] == 3) {
			$AllowUpdate = 1;
		}

		$res = sql("SELECT * FROM `vehicle_daily_check_list` WHERE `vehicle_daily_check_list_id`='" . makeSafe($selected_id) . "'", $eo);
		if(!($row = db_fetch_array($res))) {
			return error_message($Translation['No records found'], 'vehicle_daily_check_list_view.php', false);
		}
		$combo_vehicle_registration_number->SelectedData = $row['vehicle_registration_number'];
		$combo_closing_km->SelectedData = $row['closing_km'];
		$combo_dashboard->SelectedData = $row['dashboard'];
		$combo_seats->SelectedData = $row['seats'];
		$combo_carpets->SelectedData = $row['carpets'];
		$combo_wipers->SelectedData = $row['wipers'];
		$combo_head_lights->SelectedData = $row['head_lights'];
		$combo_tail_lights->SelectedData = $row['tail_lights'];
		$combo_brake_lights->SelectedData = $row['brake_lights'];
		$combo_indicators->SelectedData = $row['indicators'];
		$combo_windscreen->SelectedData = $row['windscreen'];
		$combo_windows->SelectedData = $row['windows'];
		$combo_mirrors->SelectedData = $row['mirrors'];
		$combo_wheels->SelectedData = $row['wheels'];
		$combo_hubcaps->SelectedData = $row['hubcaps'];
		$combo_sparewheel->SelectedData = $row['sparewheel'];
		$combo_tools->SelectedData = $row['tools'];
		$combo_engine_oil->SelectedData = $row['engine_oil'];
		$combo_power_steering_oil->SelectedData = $row['power_steering_oil'];
		$combo_gearbox_oil->SelectedData = $row['gearbox_oil'];
		$combo_coolant->SelectedData = $row['coolant'];
		$combo_brake_oil->SelectedData = $row['brake_oil'];
		$combo_battery->SelectedData = $row['battery'];
		$combo_brakes_front->SelectedData = $row['brakes_front'];
		$combo_brakes_rear->SelectedData = $row['brakes_rear'];
		$combo_fuel_level->SelectedData = $row['fuel_level'];
		$combo_vehicle_fluid_leaks->SelectedData = $row['vehicle_fluid_leaks'];
		$combo_next_inspection_date->DefaultDate = $row['next_inspection_date'];
		$combo_drivers_surname->SelectedData = $row['drivers_surname'];
		$urow = $row; /* unsanitized data */
		$row = array_map('safe_html', $row);
	} else {
		$filterField = Request::val('FilterField');
		$filterOperator = Request::val('FilterOperator');
		$filterValue = Request::val('FilterValue');
		$combo_vehicle_registration_number->SelectedData = $filterer_vehicle_registration_number;
		$combo_closing_km->SelectedData = $filterer_closing_km;
		$combo_dashboard->SelectedText = (isset($filterField[1]) && $filterField[1] == '6' && $filterOperator[1] == '<=>' ? $filterValue[1] : '');
		$combo_seats->SelectedText = (isset($filterField[1]) && $filterField[1] == '7' && $filterOperator[1] == '<=>' ? $filterValue[1] : '');
		$combo_carpets->SelectedText = (isset($filterField[1]) && $filterField[1] == '8' && $filterOperator[1] == '<=>' ? $filterValue[1] : '');
		$combo_wipers->SelectedText = (isset($filterField[1]) && $filterField[1] == '9' && $filterOperator[1] == '<=>' ? $filterValue[1] : '');
		$combo_head_lights->SelectedText = (isset($filterField[1]) && $filterField[1] == '10' && $filterOperator[1] == '<=>' ? $filterValue[1] : '');
		$combo_tail_lights->SelectedText = (isset($filterField[1]) && $filterField[1] == '11' && $filterOperator[1] == '<=>' ? $filterValue[1] : '');
		$combo_brake_lights->SelectedText = (isset($filterField[1]) && $filterField[1] == '12' && $filterOperator[1] == '<=>' ? $filterValue[1] : '');
		$combo_indicators->SelectedText = (isset($filterField[1]) && $filterField[1] == '13' && $filterOperator[1] == '<=>' ? $filterValue[1] : '');
		$combo_windscreen->SelectedText = (isset($filterField[1]) && $filterField[1] == '14' && $filterOperator[1] == '<=>' ? $filterValue[1] : '');
		$combo_windows->SelectedText = (isset($filterField[1]) && $filterField[1] == '15' && $filterOperator[1] == '<=>' ? $filterValue[1] : '');
		$combo_mirrors->SelectedText = (isset($filterField[1]) && $filterField[1] == '16' && $filterOperator[1] == '<=>' ? $filterValue[1] : '');
		$combo_wheels->SelectedText = (isset($filterField[1]) && $filterField[1] == '17' && $filterOperator[1] == '<=>' ? $filterValue[1] : '');
		$combo_hubcaps->SelectedText = (isset($filterField[1]) && $filterField[1] == '18' && $filterOperator[1] == '<=>' ? $filterValue[1] : '');
		$combo_sparewheel->SelectedText = (isset($filterField[1]) && $filterField[1] == '19' && $filterOperator[1] == '<=>' ? $filterValue[1] : '');
		$combo_tools->SelectedText = (isset($filterField[1]) && $filterField[1] == '20' && $filterOperator[1] == '<=>' ? $filterValue[1] : '');
		$combo_engine_oil->SelectedText = (isset($filterField[1]) && $filterField[1] == '21' && $filterOperator[1] == '<=>' ? $filterValue[1] : '');
		$combo_power_steering_oil->SelectedText = (isset($filterField[1]) && $filterField[1] == '22' && $filterOperator[1] == '<=>' ? $filterValue[1] : '');
		$combo_gearbox_oil->SelectedText = (isset($filterField[1]) && $filterField[1] == '23' && $filterOperator[1] == '<=>' ? $filterValue[1] : '');
		$combo_coolant->SelectedText = (isset($filterField[1]) && $filterField[1] == '24' && $filterOperator[1] == '<=>' ? $filterValue[1] : '');
		$combo_brake_oil->SelectedText = (isset($filterField[1]) && $filterField[1] == '25' && $filterOperator[1] == '<=>' ? $filterValue[1] : '');
		$combo_battery->SelectedText = (isset($filterField[1]) && $filterField[1] == '26' && $filterOperator[1] == '<=>' ? $filterValue[1] : '');
		$combo_brakes_front->SelectedText = (isset($filterField[1]) && $filterField[1] == '27' && $filterOperator[1] == '<=>' ? $filterValue[1] : '');
		$combo_brakes_rear->SelectedText = (isset($filterField[1]) && $filterField[1] == '28' && $filterOperator[1] == '<=>' ? $filterValue[1] : '');
		$combo_fuel_level->SelectedText = (isset($filterField[1]) && $filterField[1] == '29' && $filterOperator[1] == '<=>' ? $filterValue[1] : '');
		$combo_vehicle_fluid_leaks->SelectedText = (isset($filterField[1]) && $filterField[1] == '30' && $filterOperator[1] == '<=>' ? $filterValue[1] : '');
		$combo_drivers_surname->SelectedData = $filterer_drivers_surname;
	}
	$combo_vehicle_registration_number->HTML = '<span id="vehicle_registration_number-container' . $rnd1 . '"></span><input type="hidden" name="vehicle_registration_number" id="vehicle_registration_number' . $rnd1 . '" value="' . html_attr($combo_vehicle_registration_number->SelectedData) . '">';
	$combo_vehicle_registration_number->MatchText = '<span id="vehicle_registration_number-container-readonly' . $rnd1 . '"></span><input type="hidden" name="vehicle_registration_number" id="vehicle_registration_number' . $rnd1 . '" value="' . html_attr($combo_vehicle_registration_number->SelectedData) . '">';
	$combo_closing_km->HTML = '<span id="closing_km-container' . $rnd1 . '"></span><input type="hidden" name="closing_km" id="closing_km' . $rnd1 . '" value="' . html_attr($combo_closing_km->SelectedData) . '">';
	$combo_closing_km->MatchText = '<span id="closing_km-container-readonly' . $rnd1 . '"></span><input type="hidden" name="closing_km" id="closing_km' . $rnd1 . '" value="' . html_attr($combo_closing_km->SelectedData) . '">';
	$combo_dashboard->Render();
	$combo_seats->Render();
	$combo_carpets->Render();
	$combo_wipers->Render();
	$combo_head_lights->Render();
	$combo_tail_lights->Render();
	$combo_brake_lights->Render();
	$combo_indicators->Render();
	$combo_windscreen->Render();
	$combo_windows->Render();
	$combo_mirrors->Render();
	$combo_wheels->Render();
	$combo_hubcaps->Render();
	$combo_sparewheel->Render();
	$combo_tools->Render();
	$combo_engine_oil->Render();
	$combo_power_steering_oil->Render();
	$combo_gearbox_oil->Render();
	$combo_coolant->Render();
	$combo_brake_oil->Render();
	$combo_battery->Render();
	$combo_brakes_front->Render();
	$combo_brakes_rear->Render();
	$combo_fuel_level->Render();
	$combo_vehicle_fluid_leaks->Render();
	$combo_drivers_surname->HTML = '<span id="drivers_surname-container' . $rnd1 . '"></span><input type="hidden" name="drivers_surname" id="drivers_surname' . $rnd1 . '" value="' . html_attr($combo_drivers_surname->SelectedData) . '">';
	$combo_drivers_surname->MatchText = '<span id="drivers_surname-container-readonly' . $rnd1 . '"></span><input type="hidden" name="drivers_surname" id="drivers_surname' . $rnd1 . '" value="' . html_attr($combo_drivers_surname->SelectedData) . '">';

	ob_start();
	?>

	<script>
		// initial lookup values
		AppGini.current_vehicle_registration_number__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['vehicle_registration_number'] : htmlspecialchars($filterer_vehicle_registration_number, ENT_QUOTES)); ?>"};
		AppGini.current_closing_km__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['closing_km'] : htmlspecialchars($filterer_closing_km, ENT_QUOTES)); ?>"};
		AppGini.current_drivers_surname__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['drivers_surname'] : htmlspecialchars($filterer_drivers_surname, ENT_QUOTES)); ?>"};

		jQuery(function() {
			setTimeout(function() {
				if(typeof(vehicle_registration_number_reload__RAND__) == 'function') vehicle_registration_number_reload__RAND__();
				if(typeof(closing_km_reload__RAND__) == 'function') closing_km_reload__RAND__();
				if(typeof(drivers_surname_reload__RAND__) == 'function') drivers_surname_reload__RAND__();
			}, 50); /* we need to slightly delay client-side execution of the above code to allow AppGini.ajaxCache to work */
		});
		function vehicle_registration_number_reload__RAND__() {
		<?php if(($AllowUpdate || ($arrPerm['insert'] && !$selected_id)) && !$dvprint) { ?>

			$j("#vehicle_registration_number-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_vehicle_registration_number__RAND__.value, t: 'vehicle_daily_check_list', f: 'vehicle_registration_number' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="vehicle_registration_number"]').val(resp.results[0].id);
							$j('[id=vehicle_registration_number-container-readonly__RAND__]').html('<span class="match-text" id="vehicle_registration_number-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=gmt_fleet_register_view_parent]').hide(); } else { $j('.btn[id=gmt_fleet_register_view_parent]').show(); }


							if(typeof(vehicle_registration_number_update_autofills__RAND__) == 'function') vehicle_registration_number_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'vehicle_daily_check_list', f: 'vehicle_registration_number' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_vehicle_registration_number__RAND__.value = e.added.id;
				AppGini.current_vehicle_registration_number__RAND__.text = e.added.text;
				$j('[name="vehicle_registration_number"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=gmt_fleet_register_view_parent]').hide(); } else { $j('.btn[id=gmt_fleet_register_view_parent]').show(); }


				if(typeof(vehicle_registration_number_update_autofills__RAND__) == 'function') vehicle_registration_number_update_autofills__RAND__();
			});

			if(!$j("#vehicle_registration_number-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_vehicle_registration_number__RAND__.value, t: 'vehicle_daily_check_list', f: 'vehicle_registration_number' },
					success: function(resp) {
						$j('[name="vehicle_registration_number"]').val(resp.results[0].id);
						$j('[id=vehicle_registration_number-container-readonly__RAND__]').html('<span class="match-text" id="vehicle_registration_number-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=gmt_fleet_register_view_parent]').hide(); } else { $j('.btn[id=gmt_fleet_register_view_parent]').show(); }

						if(typeof(vehicle_registration_number_update_autofills__RAND__) == 'function') vehicle_registration_number_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_vehicle_registration_number__RAND__.value, t: 'vehicle_daily_check_list', f: 'vehicle_registration_number' },
				success: function(resp) {
					$j('[id=vehicle_registration_number-container__RAND__], [id=vehicle_registration_number-container-readonly__RAND__]').html('<span class="match-text" id="vehicle_registration_number-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=gmt_fleet_register_view_parent]').hide(); } else { $j('.btn[id=gmt_fleet_register_view_parent]').show(); }

					if(typeof(vehicle_registration_number_update_autofills__RAND__) == 'function') vehicle_registration_number_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function closing_km_reload__RAND__() {
		<?php if(($AllowUpdate || ($arrPerm['insert'] && !$selected_id)) && !$dvprint) { ?>

			$j("#closing_km-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_closing_km__RAND__.value, t: 'vehicle_daily_check_list', f: 'closing_km' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="closing_km"]').val(resp.results[0].id);
							$j('[id=closing_km-container-readonly__RAND__]').html('<span class="match-text" id="closing_km-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=log_sheet_view_parent]').hide(); } else { $j('.btn[id=log_sheet_view_parent]').show(); }


							if(typeof(closing_km_update_autofills__RAND__) == 'function') closing_km_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'vehicle_daily_check_list', f: 'closing_km' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_closing_km__RAND__.value = e.added.id;
				AppGini.current_closing_km__RAND__.text = e.added.text;
				$j('[name="closing_km"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=log_sheet_view_parent]').hide(); } else { $j('.btn[id=log_sheet_view_parent]').show(); }


				if(typeof(closing_km_update_autofills__RAND__) == 'function') closing_km_update_autofills__RAND__();
			});

			if(!$j("#closing_km-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_closing_km__RAND__.value, t: 'vehicle_daily_check_list', f: 'closing_km' },
					success: function(resp) {
						$j('[name="closing_km"]').val(resp.results[0].id);
						$j('[id=closing_km-container-readonly__RAND__]').html('<span class="match-text" id="closing_km-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=log_sheet_view_parent]').hide(); } else { $j('.btn[id=log_sheet_view_parent]').show(); }

						if(typeof(closing_km_update_autofills__RAND__) == 'function') closing_km_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_closing_km__RAND__.value, t: 'vehicle_daily_check_list', f: 'closing_km' },
				success: function(resp) {
					$j('[id=closing_km-container__RAND__], [id=closing_km-container-readonly__RAND__]').html('<span class="match-text" id="closing_km-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=log_sheet_view_parent]').hide(); } else { $j('.btn[id=log_sheet_view_parent]').show(); }

					if(typeof(closing_km_update_autofills__RAND__) == 'function') closing_km_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function drivers_surname_reload__RAND__() {
		<?php if(($AllowUpdate || ($arrPerm['insert'] && !$selected_id)) && !$dvprint) { ?>

			$j("#drivers_surname-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_drivers_surname__RAND__.value, t: 'vehicle_daily_check_list', f: 'drivers_surname' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="drivers_surname"]').val(resp.results[0].id);
							$j('[id=drivers_surname-container-readonly__RAND__]').html('<span class="match-text" id="drivers_surname-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=driver_view_parent]').hide(); } else { $j('.btn[id=driver_view_parent]').show(); }


							if(typeof(drivers_surname_update_autofills__RAND__) == 'function') drivers_surname_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'vehicle_daily_check_list', f: 'drivers_surname' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_drivers_surname__RAND__.value = e.added.id;
				AppGini.current_drivers_surname__RAND__.text = e.added.text;
				$j('[name="drivers_surname"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=driver_view_parent]').hide(); } else { $j('.btn[id=driver_view_parent]').show(); }


				if(typeof(drivers_surname_update_autofills__RAND__) == 'function') drivers_surname_update_autofills__RAND__();
			});

			if(!$j("#drivers_surname-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_drivers_surname__RAND__.value, t: 'vehicle_daily_check_list', f: 'drivers_surname' },
					success: function(resp) {
						$j('[name="drivers_surname"]').val(resp.results[0].id);
						$j('[id=drivers_surname-container-readonly__RAND__]').html('<span class="match-text" id="drivers_surname-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=driver_view_parent]').hide(); } else { $j('.btn[id=driver_view_parent]').show(); }

						if(typeof(drivers_surname_update_autofills__RAND__) == 'function') drivers_surname_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_drivers_surname__RAND__.value, t: 'vehicle_daily_check_list', f: 'drivers_surname' },
				success: function(resp) {
					$j('[id=drivers_surname-container__RAND__], [id=drivers_surname-container-readonly__RAND__]').html('<span class="match-text" id="drivers_surname-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=driver_view_parent]').hide(); } else { $j('.btn[id=driver_view_parent]').show(); }

					if(typeof(drivers_surname_update_autofills__RAND__) == 'function') drivers_surname_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
	</script>
	<?php

	$lookups = str_replace('__RAND__', $rnd1, ob_get_clean());


	// code for template based detail view forms

	// open the detail view template
	if($dvprint) {
		$template_file = is_file("./{$TemplateDVP}") ? "./{$TemplateDVP}" : './templates/vehicle_daily_check_list_templateDVP.html';
		$templateCode = @file_get_contents($template_file);
	} else {
		$template_file = is_file("./{$TemplateDV}") ? "./{$TemplateDV}" : './templates/vehicle_daily_check_list_templateDV.html';
		$templateCode = @file_get_contents($template_file);
	}

	// process form title
	$templateCode = str_replace('<%%DETAIL_VIEW_TITLE%%>', 'Daily Checked Details:', $templateCode);
	$templateCode = str_replace('<%%RND1%%>', $rnd1, $templateCode);
	$templateCode = str_replace('<%%EMBEDDED%%>', (Request::val('Embedded') ? 'Embedded=1' : ''), $templateCode);
	// process buttons
	if($arrPerm['insert'] && !$selected_id) { // allow insert and no record selected?
		if(!$selected_id) $templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-success" id="insert" name="insert_x" value="1" onclick="return vehicle_daily_check_list_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save New'] . '</button>', $templateCode);
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="insert" name="insert_x" value="1" onclick="return vehicle_daily_check_list_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save As Copy'] . '</button>', $templateCode);
	} else {
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '', $templateCode);
	}

	// 'Back' button action
	if(Request::val('Embedded')) {
		$backAction = 'AppGini.closeParentModal(); return false;';
	} else {
		$backAction = '$j(\'form\').eq(0).attr(\'novalidate\', \'novalidate\'); document.myform.reset(); return true;';
	}

	if($selected_id) {
		if(!Request::val('Embedded')) $templateCode = str_replace('<%%DVPRINT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="dvprint" name="dvprint_x" value="1" onclick="$j(\'form\').eq(0).prop(\'novalidate\', true); document.myform.reset(); return true;" title="' . html_attr($Translation['Print Preview']) . '"><i class="glyphicon glyphicon-print"></i> ' . $Translation['Print Preview'] . '</button>', $templateCode);
		if($AllowUpdate) {
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '<button type="submit" class="btn btn-success btn-lg" id="update" name="update_x" value="1" onclick="return vehicle_daily_check_list_validateData();" title="' . html_attr($Translation['Save Changes']) . '"><i class="glyphicon glyphicon-ok"></i> ' . $Translation['Save Changes'] . '</button>', $templateCode);
		} else {
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		}
		if(($arrPerm['delete'] == 1 && $ownerMemberID == getLoggedMemberID()) || ($arrPerm['delete'] == 2 && $ownerGroupID == getLoggedGroupID()) || $arrPerm['delete'] == 3) { // allow delete?
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '<button type="submit" class="btn btn-danger" id="delete" name="delete_x" value="1" onclick="return confirm(\'' . $Translation['are you sure?'] . '\');" title="' . html_attr($Translation['Delete']) . '"><i class="glyphicon glyphicon-trash"></i> ' . $Translation['Delete'] . '</button>', $templateCode);
		} else {
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		}
		$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>', $templateCode);
	} else {
		$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);

		// if not in embedded mode and user has insert only but no view/update/delete,
		// remove 'back' button
		if(
			$arrPerm['insert']
			&& !$arrPerm['update'] && !$arrPerm['delete'] && !$arrPerm['view']
			&& !Request::val('Embedded')
		)
			$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '', $templateCode);
		elseif($separateDV)
			$templateCode = str_replace(
				'<%%DESELECT_BUTTON%%>', 
				'<button
					type="submit" 
					class="btn btn-default" 
					id="deselect" 
					name="deselect_x" 
					value="1" 
					onclick="' . $backAction . '" 
					title="' . html_attr($Translation['Back']) . '">
						<i class="glyphicon glyphicon-chevron-left"></i> ' .
						$Translation['Back'] .
				'</button>',
				$templateCode
			);
		else
			$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '', $templateCode);
	}

	// set records to read only if user can't insert new records and can't edit current record
	if(($selected_id && !$AllowUpdate) || (!$selected_id && !$AllowInsert)) {
		$jsReadOnly = '';
		$jsReadOnly .= "\tjQuery('#inspection_certification_number').replaceWith('<div class=\"form-control-static\" id=\"inspection_certification_number\">' + (jQuery('#inspection_certification_number').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#vehicle_registration_number').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#vehicle_registration_number_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#closing_km').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#closing_km_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('input[name=dashboard]').parent().html('<div class=\"form-control-static\">' + jQuery('input[name=dashboard]:checked').next().text() + '</div>')\n";
		$jsReadOnly .= "\tjQuery('input[name=seats]').parent().html('<div class=\"form-control-static\">' + jQuery('input[name=seats]:checked').next().text() + '</div>')\n";
		$jsReadOnly .= "\tjQuery('input[name=carpets]').parent().html('<div class=\"form-control-static\">' + jQuery('input[name=carpets]:checked').next().text() + '</div>')\n";
		$jsReadOnly .= "\tjQuery('input[name=wipers]').parent().html('<div class=\"form-control-static\">' + jQuery('input[name=wipers]:checked').next().text() + '</div>')\n";
		$jsReadOnly .= "\tjQuery('input[name=head_lights]').parent().html('<div class=\"form-control-static\">' + jQuery('input[name=head_lights]:checked').next().text() + '</div>')\n";
		$jsReadOnly .= "\tjQuery('input[name=tail_lights]').parent().html('<div class=\"form-control-static\">' + jQuery('input[name=tail_lights]:checked').next().text() + '</div>')\n";
		$jsReadOnly .= "\tjQuery('input[name=brake_lights]').parent().html('<div class=\"form-control-static\">' + jQuery('input[name=brake_lights]:checked').next().text() + '</div>')\n";
		$jsReadOnly .= "\tjQuery('input[name=indicators]').parent().html('<div class=\"form-control-static\">' + jQuery('input[name=indicators]:checked').next().text() + '</div>')\n";
		$jsReadOnly .= "\tjQuery('input[name=windscreen]').parent().html('<div class=\"form-control-static\">' + jQuery('input[name=windscreen]:checked').next().text() + '</div>')\n";
		$jsReadOnly .= "\tjQuery('input[name=windows]').parent().html('<div class=\"form-control-static\">' + jQuery('input[name=windows]:checked').next().text() + '</div>')\n";
		$jsReadOnly .= "\tjQuery('input[name=mirrors]').parent().html('<div class=\"form-control-static\">' + jQuery('input[name=mirrors]:checked').next().text() + '</div>')\n";
		$jsReadOnly .= "\tjQuery('input[name=wheels]').parent().html('<div class=\"form-control-static\">' + jQuery('input[name=wheels]:checked').next().text() + '</div>')\n";
		$jsReadOnly .= "\tjQuery('input[name=hubcaps]').parent().html('<div class=\"form-control-static\">' + jQuery('input[name=hubcaps]:checked').next().text() + '</div>')\n";
		$jsReadOnly .= "\tjQuery('input[name=sparewheel]').parent().html('<div class=\"form-control-static\">' + jQuery('input[name=sparewheel]:checked').next().text() + '</div>')\n";
		$jsReadOnly .= "\tjQuery('input[name=tools]').parent().html('<div class=\"form-control-static\">' + jQuery('input[name=tools]:checked').next().text() + '</div>')\n";
		$jsReadOnly .= "\tjQuery('input[name=engine_oil]').parent().html('<div class=\"form-control-static\">' + jQuery('input[name=engine_oil]:checked').next().text() + '</div>')\n";
		$jsReadOnly .= "\tjQuery('input[name=power_steering_oil]').parent().html('<div class=\"form-control-static\">' + jQuery('input[name=power_steering_oil]:checked').next().text() + '</div>')\n";
		$jsReadOnly .= "\tjQuery('input[name=gearbox_oil]').parent().html('<div class=\"form-control-static\">' + jQuery('input[name=gearbox_oil]:checked').next().text() + '</div>')\n";
		$jsReadOnly .= "\tjQuery('input[name=coolant]').parent().html('<div class=\"form-control-static\">' + jQuery('input[name=coolant]:checked').next().text() + '</div>')\n";
		$jsReadOnly .= "\tjQuery('input[name=brake_oil]').parent().html('<div class=\"form-control-static\">' + jQuery('input[name=brake_oil]:checked').next().text() + '</div>')\n";
		$jsReadOnly .= "\tjQuery('input[name=battery]').parent().html('<div class=\"form-control-static\">' + jQuery('input[name=battery]:checked').next().text() + '</div>')\n";
		$jsReadOnly .= "\tjQuery('input[name=brakes_front]').parent().html('<div class=\"form-control-static\">' + jQuery('input[name=brakes_front]:checked').next().text() + '</div>')\n";
		$jsReadOnly .= "\tjQuery('input[name=brakes_rear]').parent().html('<div class=\"form-control-static\">' + jQuery('input[name=brakes_rear]:checked').next().text() + '</div>')\n";
		$jsReadOnly .= "\tjQuery('input[name=fuel_level]').parent().html('<div class=\"form-control-static\">' + jQuery('input[name=fuel_level]:checked').next().text() + '</div>')\n";
		$jsReadOnly .= "\tjQuery('input[name=vehicle_fluid_leaks]').parent().html('<div class=\"form-control-static\">' + jQuery('input[name=vehicle_fluid_leaks]:checked').next().text() + '</div>')\n";
		$jsReadOnly .= "\tjQuery('#document_checklist_report').replaceWith('<div class=\"form-control-static\" id=\"document_checklist_report\">' + (jQuery('#document_checklist_report').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#document_checklist_report, #document_checklist_report-edit-link').hide();\n";
		$jsReadOnly .= "\tjQuery('#next_inspection_date').prop('readonly', true);\n";
		$jsReadOnly .= "\tjQuery('#next_inspection_dateDay, #next_inspection_dateMonth, #next_inspection_dateYear').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#drivers_surname').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#drivers_surname_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('.select2-container').hide();\n";

		$noUploads = true;
	} elseif(($AllowInsert && !$selected_id) || ($AllowUpdate && $selected_id)) {
		$jsEditable = "\tjQuery('form').eq(0).data('already_changed', true);"; // temporarily disable form change handler
		$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', false);"; // re-enable form change handler
	}

	// process combos
	$templateCode = str_replace('<%%COMBO(vehicle_registration_number)%%>', $combo_vehicle_registration_number->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(vehicle_registration_number)%%>', $combo_vehicle_registration_number->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(vehicle_registration_number)%%>', urlencode($combo_vehicle_registration_number->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(closing_km)%%>', $combo_closing_km->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(closing_km)%%>', $combo_closing_km->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(closing_km)%%>', urlencode($combo_closing_km->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(dashboard)%%>', $combo_dashboard->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(dashboard)%%>', $combo_dashboard->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(seats)%%>', $combo_seats->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(seats)%%>', $combo_seats->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(carpets)%%>', $combo_carpets->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(carpets)%%>', $combo_carpets->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(wipers)%%>', $combo_wipers->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(wipers)%%>', $combo_wipers->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(head_lights)%%>', $combo_head_lights->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(head_lights)%%>', $combo_head_lights->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(tail_lights)%%>', $combo_tail_lights->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(tail_lights)%%>', $combo_tail_lights->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(brake_lights)%%>', $combo_brake_lights->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(brake_lights)%%>', $combo_brake_lights->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(indicators)%%>', $combo_indicators->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(indicators)%%>', $combo_indicators->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(windscreen)%%>', $combo_windscreen->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(windscreen)%%>', $combo_windscreen->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(windows)%%>', $combo_windows->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(windows)%%>', $combo_windows->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(mirrors)%%>', $combo_mirrors->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(mirrors)%%>', $combo_mirrors->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(wheels)%%>', $combo_wheels->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(wheels)%%>', $combo_wheels->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(hubcaps)%%>', $combo_hubcaps->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(hubcaps)%%>', $combo_hubcaps->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(sparewheel)%%>', $combo_sparewheel->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(sparewheel)%%>', $combo_sparewheel->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(tools)%%>', $combo_tools->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(tools)%%>', $combo_tools->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(engine_oil)%%>', $combo_engine_oil->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(engine_oil)%%>', $combo_engine_oil->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(power_steering_oil)%%>', $combo_power_steering_oil->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(power_steering_oil)%%>', $combo_power_steering_oil->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(gearbox_oil)%%>', $combo_gearbox_oil->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(gearbox_oil)%%>', $combo_gearbox_oil->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(coolant)%%>', $combo_coolant->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(coolant)%%>', $combo_coolant->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(brake_oil)%%>', $combo_brake_oil->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(brake_oil)%%>', $combo_brake_oil->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(battery)%%>', $combo_battery->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(battery)%%>', $combo_battery->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(brakes_front)%%>', $combo_brakes_front->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(brakes_front)%%>', $combo_brakes_front->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(brakes_rear)%%>', $combo_brakes_rear->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(brakes_rear)%%>', $combo_brakes_rear->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(fuel_level)%%>', $combo_fuel_level->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(fuel_level)%%>', $combo_fuel_level->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(vehicle_fluid_leaks)%%>', $combo_vehicle_fluid_leaks->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(vehicle_fluid_leaks)%%>', $combo_vehicle_fluid_leaks->SelectedData, $templateCode);
	$templateCode = str_replace(
		'<%%COMBO(next_inspection_date)%%>', 
		($selected_id && !$arrPerm['edit'] && ($noSaveAsCopy || !$arrPerm['insert']) ? 
			'<div class="form-control-static">' . $combo_next_inspection_date->GetHTML(true) . '</div>' : 
			$combo_next_inspection_date->GetHTML()
		), $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(next_inspection_date)%%>', $combo_next_inspection_date->GetHTML(true), $templateCode);
	$templateCode = str_replace('<%%COMBO(drivers_surname)%%>', $combo_drivers_surname->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(drivers_surname)%%>', $combo_drivers_surname->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(drivers_surname)%%>', urlencode($combo_drivers_surname->MatchText), $templateCode);

	/* lookup fields array: 'lookup field name' => ['parent table name', 'lookup field caption'] */
	$lookup_fields = ['vehicle_registration_number' => ['gmt_fleet_register', 'Registration Number:'], 'closing_km' => ['log_sheet', 'Odometer Reading KM:'], 'drivers_surname' => ['driver', 'Driver\'s Surname:'], ];
	foreach($lookup_fields as $luf => $ptfc) {
		$pt_perm = getTablePermissions($ptfc[0]);

		// process foreign key links
		if($pt_perm['view'] || $pt_perm['edit']) {
			$templateCode = str_replace("<%%PLINK({$luf})%%>", '<button type="button" class="btn btn-default view_parent" id="' . $ptfc[0] . '_view_parent" title="' . html_attr($Translation['View'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-eye-open"></i></button>', $templateCode);
		}

		// if user has insert permission to parent table of a lookup field, put an add new button
		if($pt_perm['insert'] /* && !Request::val('Embedded')*/) {
			$templateCode = str_replace("<%%ADDNEW({$ptfc[0]})%%>", '<button type="button" class="btn btn-default add_new_parent" id="' . $ptfc[0] . '_add_new" title="' . html_attr($Translation['Add New'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-plus text-success"></i></button>', $templateCode);
		}
	}

	// process images
	$templateCode = str_replace('<%%UPLOADFILE(vehicle_daily_check_list_id)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(inspection_certification_number)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(vehicle_registration_number)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(closing_km)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(dashboard)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(seats)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(carpets)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(wipers)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(head_lights)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(tail_lights)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(brake_lights)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(indicators)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(windscreen)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(windows)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(mirrors)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(wheels)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(hubcaps)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(sparewheel)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(tools)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(engine_oil)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(power_steering_oil)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(gearbox_oil)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(coolant)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(brake_oil)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(battery)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(brakes_front)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(brakes_rear)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(fuel_level)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(vehicle_fluid_leaks)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(note)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(document_checklist_report)%%>', ($noUploads ? '' : "<div>{$Translation['upload image']}</div>" . '<i class="glyphicon glyphicon-remove text-danger clear-upload hidden"></i> <input type="file" name="document_checklist_report" id="document_checklist_report" data-filetypes="txt|doc|docx|docm|odt|pdf|rtf" data-maxsize="5242880" accept=".txt,.doc,.docx,.docm,.odt,.pdf,.rtf">'), $templateCode);
	if($AllowUpdate && $row['document_checklist_report'] != '') {
		$templateCode = str_replace('<%%REMOVEFILE(document_checklist_report)%%>', '<br><input type="checkbox" name="document_checklist_report_remove" id="document_checklist_report_remove" value="1"> <label for="document_checklist_report_remove" style="color: red; font-weight: bold;">'.$Translation['remove image'].'</label>', $templateCode);
	} else {
		$templateCode = str_replace('<%%REMOVEFILE(document_checklist_report)%%>', '', $templateCode);
	}
	$templateCode = str_replace('<%%UPLOADFILE(next_inspection_date)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(drivers_surname)%%>', '', $templateCode);

	// process values
	if($selected_id) {
		if( $dvprint) $templateCode = str_replace('<%%VALUE(vehicle_daily_check_list_id)%%>', safe_html($urow['vehicle_daily_check_list_id']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(vehicle_daily_check_list_id)%%>', html_attr($row['vehicle_daily_check_list_id']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(vehicle_daily_check_list_id)%%>', urlencode($urow['vehicle_daily_check_list_id']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(inspection_certification_number)%%>', safe_html($urow['inspection_certification_number']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(inspection_certification_number)%%>', html_attr($row['inspection_certification_number']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(inspection_certification_number)%%>', urlencode($urow['inspection_certification_number']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(vehicle_registration_number)%%>', safe_html($urow['vehicle_registration_number']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(vehicle_registration_number)%%>', html_attr($row['vehicle_registration_number']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(vehicle_registration_number)%%>', urlencode($urow['vehicle_registration_number']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(closing_km)%%>', safe_html($urow['closing_km']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(closing_km)%%>', html_attr($row['closing_km']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(closing_km)%%>', urlencode($urow['closing_km']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(dashboard)%%>', safe_html($urow['dashboard']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(dashboard)%%>', html_attr($row['dashboard']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(dashboard)%%>', urlencode($urow['dashboard']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(seats)%%>', safe_html($urow['seats']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(seats)%%>', html_attr($row['seats']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(seats)%%>', urlencode($urow['seats']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(carpets)%%>', safe_html($urow['carpets']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(carpets)%%>', html_attr($row['carpets']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(carpets)%%>', urlencode($urow['carpets']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(wipers)%%>', safe_html($urow['wipers']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(wipers)%%>', html_attr($row['wipers']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(wipers)%%>', urlencode($urow['wipers']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(head_lights)%%>', safe_html($urow['head_lights']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(head_lights)%%>', html_attr($row['head_lights']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(head_lights)%%>', urlencode($urow['head_lights']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(tail_lights)%%>', safe_html($urow['tail_lights']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(tail_lights)%%>', html_attr($row['tail_lights']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(tail_lights)%%>', urlencode($urow['tail_lights']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(brake_lights)%%>', safe_html($urow['brake_lights']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(brake_lights)%%>', html_attr($row['brake_lights']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(brake_lights)%%>', urlencode($urow['brake_lights']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(indicators)%%>', safe_html($urow['indicators']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(indicators)%%>', html_attr($row['indicators']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(indicators)%%>', urlencode($urow['indicators']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(windscreen)%%>', safe_html($urow['windscreen']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(windscreen)%%>', html_attr($row['windscreen']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(windscreen)%%>', urlencode($urow['windscreen']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(windows)%%>', safe_html($urow['windows']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(windows)%%>', html_attr($row['windows']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(windows)%%>', urlencode($urow['windows']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(mirrors)%%>', safe_html($urow['mirrors']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(mirrors)%%>', html_attr($row['mirrors']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(mirrors)%%>', urlencode($urow['mirrors']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(wheels)%%>', safe_html($urow['wheels']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(wheels)%%>', html_attr($row['wheels']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(wheels)%%>', urlencode($urow['wheels']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(hubcaps)%%>', safe_html($urow['hubcaps']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(hubcaps)%%>', html_attr($row['hubcaps']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(hubcaps)%%>', urlencode($urow['hubcaps']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(sparewheel)%%>', safe_html($urow['sparewheel']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(sparewheel)%%>', html_attr($row['sparewheel']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(sparewheel)%%>', urlencode($urow['sparewheel']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(tools)%%>', safe_html($urow['tools']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(tools)%%>', html_attr($row['tools']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(tools)%%>', urlencode($urow['tools']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(engine_oil)%%>', safe_html($urow['engine_oil']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(engine_oil)%%>', html_attr($row['engine_oil']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(engine_oil)%%>', urlencode($urow['engine_oil']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(power_steering_oil)%%>', safe_html($urow['power_steering_oil']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(power_steering_oil)%%>', html_attr($row['power_steering_oil']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(power_steering_oil)%%>', urlencode($urow['power_steering_oil']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(gearbox_oil)%%>', safe_html($urow['gearbox_oil']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(gearbox_oil)%%>', html_attr($row['gearbox_oil']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(gearbox_oil)%%>', urlencode($urow['gearbox_oil']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(coolant)%%>', safe_html($urow['coolant']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(coolant)%%>', html_attr($row['coolant']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(coolant)%%>', urlencode($urow['coolant']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(brake_oil)%%>', safe_html($urow['brake_oil']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(brake_oil)%%>', html_attr($row['brake_oil']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(brake_oil)%%>', urlencode($urow['brake_oil']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(battery)%%>', safe_html($urow['battery']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(battery)%%>', html_attr($row['battery']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(battery)%%>', urlencode($urow['battery']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(brakes_front)%%>', safe_html($urow['brakes_front']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(brakes_front)%%>', html_attr($row['brakes_front']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(brakes_front)%%>', urlencode($urow['brakes_front']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(brakes_rear)%%>', safe_html($urow['brakes_rear']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(brakes_rear)%%>', html_attr($row['brakes_rear']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(brakes_rear)%%>', urlencode($urow['brakes_rear']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(fuel_level)%%>', safe_html($urow['fuel_level']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(fuel_level)%%>', html_attr($row['fuel_level']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(fuel_level)%%>', urlencode($urow['fuel_level']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(vehicle_fluid_leaks)%%>', safe_html($urow['vehicle_fluid_leaks']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(vehicle_fluid_leaks)%%>', html_attr($row['vehicle_fluid_leaks']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(vehicle_fluid_leaks)%%>', urlencode($urow['vehicle_fluid_leaks']), $templateCode);
		if($AllowUpdate || $AllowInsert) {
			$templateCode = str_replace('<%%HTMLAREA(note)%%>', '<textarea name="note" id="note" rows="5">' . safe_html(htmlspecialchars_decode($row['note'])) . '</textarea>', $templateCode);
		} else {
			$templateCode = str_replace('<%%HTMLAREA(note)%%>', '<div id="note" class="form-control-static">' . $row['note'] . '</div>', $templateCode);
		}
		$templateCode = str_replace('<%%VALUE(note)%%>', nl2br($row['note']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(note)%%>', urlencode($urow['note']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(document_checklist_report)%%>', safe_html($urow['document_checklist_report']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(document_checklist_report)%%>', html_attr($row['document_checklist_report']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(document_checklist_report)%%>', urlencode($urow['document_checklist_report']), $templateCode);
		$templateCode = str_replace('<%%VALUE(next_inspection_date)%%>', app_datetime($row['next_inspection_date']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(next_inspection_date)%%>', urlencode(app_datetime($urow['next_inspection_date'])), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(drivers_surname)%%>', safe_html($urow['drivers_surname']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(drivers_surname)%%>', html_attr($row['drivers_surname']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(drivers_surname)%%>', urlencode($urow['drivers_surname']), $templateCode);
	} else {
		$templateCode = str_replace('<%%VALUE(vehicle_daily_check_list_id)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(vehicle_daily_check_list_id)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(inspection_certification_number)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(inspection_certification_number)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(vehicle_registration_number)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(vehicle_registration_number)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(closing_km)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(closing_km)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(dashboard)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(dashboard)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(seats)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(seats)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(carpets)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(carpets)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(wipers)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(wipers)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(head_lights)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(head_lights)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(tail_lights)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(tail_lights)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(brake_lights)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(brake_lights)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(indicators)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(indicators)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(windscreen)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(windscreen)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(windows)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(windows)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(mirrors)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(mirrors)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(wheels)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(wheels)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(hubcaps)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(hubcaps)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(sparewheel)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(sparewheel)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(tools)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(tools)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(engine_oil)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(engine_oil)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(power_steering_oil)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(power_steering_oil)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(gearbox_oil)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(gearbox_oil)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(coolant)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(coolant)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(brake_oil)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(brake_oil)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(battery)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(battery)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(brakes_front)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(brakes_front)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(brakes_rear)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(brakes_rear)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(fuel_level)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(fuel_level)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(vehicle_fluid_leaks)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(vehicle_fluid_leaks)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%HTMLAREA(note)%%>', '<textarea name="note" id="note" rows="5"></textarea>', $templateCode);
		$templateCode = str_replace('<%%VALUE(document_checklist_report)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(document_checklist_report)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(next_inspection_date)%%>', '1', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(next_inspection_date)%%>', urlencode('1'), $templateCode);
		$templateCode = str_replace('<%%VALUE(drivers_surname)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(drivers_surname)%%>', urlencode(''), $templateCode);
	}

	// process translations
	$templateCode = parseTemplate($templateCode);

	// clear scrap
	$templateCode = str_replace('<%%', '<!-- ', $templateCode);
	$templateCode = str_replace('%%>', ' -->', $templateCode);

	// hide links to inaccessible tables
	if(Request::val('dvprint_x') == '') {
		$templateCode .= "\n\n<script>\$j(function() {\n";
		$arrTables = getTableList();
		foreach($arrTables as $name => $caption) {
			$templateCode .= "\t\$j('#{$name}_link').removeClass('hidden');\n";
			$templateCode .= "\t\$j('#xs_{$name}_link').removeClass('hidden');\n";
		}

		$templateCode .= $jsReadOnly;
		$templateCode .= $jsEditable;

		if(!$selected_id) {
			$templateCode.="\n\tif(document.getElementById('document_checklist_reportEdit')) { document.getElementById('document_checklist_reportEdit').style.display='inline'; }";
			$templateCode.="\n\tif(document.getElementById('document_checklist_reportEditLink')) { document.getElementById('document_checklist_reportEditLink').style.display='none'; }";
		}

		$templateCode.="\n});</script>\n";
	}

	// ajaxed auto-fill fields
	$templateCode .= '<script>';
	$templateCode .= '$j(function() {';

	$templateCode .= "\tvehicle_registration_number_update_autofills$rnd1 = function() {\n";
	$templateCode .= "\t\t\$j.ajax({\n";
	if($dvprint) {
		$templateCode .= "\t\t\turl: 'vehicle_daily_check_list_autofill.php?rnd1=$rnd1&mfk=vehicle_registration_number&id=' + encodeURIComponent('".addslashes($row['vehicle_registration_number'])."'),\n";
		$templateCode .= "\t\t\tcontentType: 'application/x-www-form-urlencoded; charset=" . datalist_db_encoding . "',\n";
		$templateCode .= "\t\t\ttype: 'GET'\n";
	} else {
		$templateCode .= "\t\t\turl: 'vehicle_daily_check_list_autofill.php?rnd1=$rnd1&mfk=vehicle_registration_number&id=' + encodeURIComponent(AppGini.current_vehicle_registration_number{$rnd1}.value),\n";
		$templateCode .= "\t\t\tcontentType: 'application/x-www-form-urlencoded; charset=" . datalist_db_encoding . "',\n";
		$templateCode .= "\t\t\ttype: 'GET',\n";
		$templateCode .= "\t\t\tbeforeSend: function() { \$j('#vehicle_registration_number$rnd1').prop('disabled', true); },\n";
		$templateCode .= "\t\t\tcomplete: function() { " . (($arrPerm['insert'] || (($arrPerm['edit'] == 1 && $ownerMemberID == getLoggedMemberID()) || ($arrPerm['edit'] == 2 && $ownerGroupID == getLoggedGroupID()) || $arrPerm['edit'] == 3)) ? "\$j('#vehicle_registration_number$rnd1').prop('disabled', false); " : "\$j('#vehicle_registration_number$rnd1').prop('disabled', true); ")." \$j(window).resize(); }\n";
	}
	$templateCode .= "\t\t});\n";
	$templateCode .= "\t};\n";
	if(!$dvprint) $templateCode .= "\tif(\$j('#vehicle_registration_number_caption').length) \$j('#vehicle_registration_number_caption').click(function() { vehicle_registration_number_update_autofills$rnd1(); });\n";

	$templateCode .= "\tdrivers_surname_update_autofills$rnd1 = function() {\n";
	$templateCode .= "\t\t\$j.ajax({\n";
	if($dvprint) {
		$templateCode .= "\t\t\turl: 'vehicle_daily_check_list_autofill.php?rnd1=$rnd1&mfk=drivers_surname&id=' + encodeURIComponent('".addslashes($row['drivers_surname'])."'),\n";
		$templateCode .= "\t\t\tcontentType: 'application/x-www-form-urlencoded; charset=" . datalist_db_encoding . "',\n";
		$templateCode .= "\t\t\ttype: 'GET'\n";
	} else {
		$templateCode .= "\t\t\turl: 'vehicle_daily_check_list_autofill.php?rnd1=$rnd1&mfk=drivers_surname&id=' + encodeURIComponent(AppGini.current_drivers_surname{$rnd1}.value),\n";
		$templateCode .= "\t\t\tcontentType: 'application/x-www-form-urlencoded; charset=" . datalist_db_encoding . "',\n";
		$templateCode .= "\t\t\ttype: 'GET',\n";
		$templateCode .= "\t\t\tbeforeSend: function() { \$j('#drivers_surname$rnd1').prop('disabled', true); },\n";
		$templateCode .= "\t\t\tcomplete: function() { " . (($arrPerm['insert'] || (($arrPerm['edit'] == 1 && $ownerMemberID == getLoggedMemberID()) || ($arrPerm['edit'] == 2 && $ownerGroupID == getLoggedGroupID()) || $arrPerm['edit'] == 3)) ? "\$j('#drivers_surname$rnd1').prop('disabled', false); " : "\$j('#drivers_surname$rnd1').prop('disabled', true); ")." \$j(window).resize(); }\n";
	}
	$templateCode .= "\t\t});\n";
	$templateCode .= "\t};\n";
	if(!$dvprint) $templateCode .= "\tif(\$j('#drivers_surname_caption').length) \$j('#drivers_surname_caption').click(function() { drivers_surname_update_autofills$rnd1(); });\n";


	$templateCode.="});";
	$templateCode.="</script>";
	$templateCode .= $lookups;

	// handle enforced parent values for read-only lookup fields
	$filterField = Request::val('FilterField');
	$filterOperator = Request::val('FilterOperator');
	$filterValue = Request::val('FilterValue');

	// don't include blank images in lightbox gallery
	$templateCode = preg_replace('/blank.gif" data-lightbox=".*?"/', 'blank.gif"', $templateCode);

	// don't display empty email links
	$templateCode=preg_replace('/<a .*?href="mailto:".*?<\/a>/', '', $templateCode);

	/* default field values */
	$rdata = $jdata = get_defaults('vehicle_daily_check_list');
	if($selected_id) {
		$jdata = get_joined_record('vehicle_daily_check_list', $selected_id);
		if($jdata === false) $jdata = get_defaults('vehicle_daily_check_list');
		$rdata = $row;
	}
	$templateCode .= loadView('vehicle_daily_check_list-ajax-cache', ['rdata' => $rdata, 'jdata' => $jdata]);

	// hook: vehicle_daily_check_list_dv
	if(function_exists('vehicle_daily_check_list_dv')) {
		$args = [];
		vehicle_daily_check_list_dv(($selected_id ? $selected_id : FALSE), getMemberInfo(), $templateCode, $args);
	}

	return $templateCode;
}