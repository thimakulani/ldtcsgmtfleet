<?php

// Data functions (insert, update, delete, form) for table log_sheet

// This script and data application were generated by AppGini 22.13
// Download AppGini for free from https://bigprof.com/appgini/download/

function log_sheet_insert(&$error_message = '') {
	global $Translation;

	// mm: can member insert record?
	$arrPerm = getTablePermissions('log_sheet');
	if(!$arrPerm['insert']) return false;

	$data = [
		'vehicle_registration_number' => Request::lookup('vehicle_registration_number', ''),
		'register_number' => Request::lookup('register_number', ''),
		'make_of_vehicle' => Request::lookup('vehicle_registration_number'),
		'model_of_vehicle' => Request::lookup('model_of_vehicle', ''),
		'year_model_specification' => Request::lookup('vehicle_registration_number'),
		'colour_of_vehicle' => Request::lookup('colour_of_vehicle', ''),
		'engine_capacity' => Request::lookup('vehicle_registration_number'),
		'renewal_of_license' => Request::dateComponents('renewal_of_license', ''),
		'district' => Request::lookup('vehicle_registration_number'),
		'month' => Request::dateComponents('month', ''),
		'drivers_name_and_surname' => Request::lookup('drivers_name_and_surname', ''),
		'drivers_persal_number' => Request::lookup('drivers_name_and_surname'),
		'opening_km' => Request::val('opening_km', ''),
		'total_trip_distance' => Request::val('total_trip_distance', ''),
		'closing_km' => Request::val('closing_km', ''),
		'fuel_type' => Request::lookup('fuel_type', ''),
		'fuel_tank_capacity' => Request::val('fuel_tank_capacity', '0.00'),
		'vendor' => Request::val('vendor', ''),
		'fuel_cost_litre' => Request::val('fuel_cost_litre', '0.00'),
		'refuel_quantity_1' => Request::val('refuel_quantity_1', '0.00'),
		'refuel_first_time_date' => Request::dateComponents('refuel_first_time_date', '1'),
		'trip_distance_refuel_1' => Request::val('trip_distance_refuel_1', ''),
		'refuel_quantity_2' => Request::val('refuel_quantity_2', '0.00'),
		'refuel_second_time_date' => Request::dateComponents('refuel_second_time_date', '1'),
		'trip_distance_refuel_2' => Request::val('trip_distance_refuel_2', ''),
		'refuel_quantity_3' => Request::val('refuel_quantity_3', '0.00'),
		'refuel_third_time_date' => Request::dateComponents('refuel_third_time_date', '1'),
		'trip_distance_refuel_3' => Request::val('trip_distance_refuel_3', ''),
		'refuel_quantity_4' => Request::val('refuel_quantity_4', '0.00'),
		'refuel_fourth_time_date' => Request::dateComponents('refuel_fourth_time_date', '1'),
		'trip_distance_refuel_4' => Request::val('trip_distance_refuel_4', ''),
		'refuel_quantity_5' => Request::val('refuel_quantity_5', '0.00'),
		'refuel_fifth_time_date' => Request::dateComponents('refuel_fifth_time_date', '1'),
		'trip_distance_refuel_5' => Request::val('trip_distance_refuel_5', ''),
		'refuel_quantity_6' => Request::val('refuel_quantity_6', '0.00'),
		'trip_distance_refuel_6' => Request::val('trip_distance_refuel_6', ''),
		'refuel_sixth_time_date' => Request::dateComponents('refuel_sixth_time_date', '1'),
		'times_refuel_current_month' => Request::val('times_refuel_current_month', ''),
		'total_fuel_quantity' => Request::val('total_fuel_quantity', '0.00'),
		'fuel_consumption' => Request::val('fuel_consumption', '0.00'),
		'fuel_total_cost' => Request::val('fuel_total_cost', '0.00'),
		'payment_e_fuel_card' => Request::val('payment_e_fuel_card', ''),
		'captured_by' => Request::val('captured_by', ''),
		'comments' => Request::val('comments', ''),
		'date_captured' => Request::dateComponents('date_captured', ''),
		'complete_fill_up' => Request::val('complete_fill_up', ''),
	];


	// hook: log_sheet_before_insert
	if(function_exists('log_sheet_before_insert')) {
		$args = [];
		if(!log_sheet_before_insert($data, getMemberInfo(), $args)) {
			if(isset($args['error_message'])) $error_message = $args['error_message'];
			return false;
		}
	}

	$error = '';
	// set empty fields to NULL
	$data = array_map(function($v) { return ($v === '' ? NULL : $v); }, $data);
	insert('log_sheet', backtick_keys_once($data), $error);
	if($error) {
		$error_message = $error;
		return false;
	}

	$recID = db_insert_id(db_link());

	update_calc_fields('log_sheet', $recID, calculated_fields()['log_sheet']);

	// hook: log_sheet_after_insert
	if(function_exists('log_sheet_after_insert')) {
		$res = sql("SELECT * FROM `log_sheet` WHERE `fuel_log_sheet_id`='" . makeSafe($recID, false) . "' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)) {
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = makeSafe($recID, false);
		$args = [];
		if(!log_sheet_after_insert($data, getMemberInfo(), $args)) { return $recID; }
	}

	// mm: save ownership data
	set_record_owner('log_sheet', $recID, getLoggedMemberID());

	// if this record is a copy of another record, copy children if applicable
	if(strlen(Request::val('SelectedID'))) log_sheet_copy_children($recID, Request::val('SelectedID'));

	return $recID;
}

function log_sheet_copy_children($destination_id, $source_id) {
	global $Translation;
	$requests = []; // array of curl handlers for launching insert requests
	$eo = ['silentErrors' => true];
	$safe_sid = makeSafe($source_id);

	// launch requests, asynchronously
	curl_batch($requests);
}

function log_sheet_delete($selected_id, $AllowDeleteOfParents = false, $skipChecks = false) {
	// insure referential integrity ...
	global $Translation;
	$selected_id = makeSafe($selected_id);

	// mm: can member delete record?
	if(!check_record_permission('log_sheet', $selected_id, 'delete')) {
		return $Translation['You don\'t have enough permissions to delete this record'];
	}

	// hook: log_sheet_before_delete
	if(function_exists('log_sheet_before_delete')) {
		$args = [];
		if(!log_sheet_before_delete($selected_id, $skipChecks, getMemberInfo(), $args))
			return $Translation['Couldn\'t delete this record'] . (
				!empty($args['error_message']) ?
					'<div class="text-bold">' . strip_tags($args['error_message']) . '</div>'
					: '' 
			);
	}

	// child table: vehicle_history
	$res = sql("SELECT `fuel_log_sheet_id` FROM `log_sheet` WHERE `fuel_log_sheet_id`='{$selected_id}'", $eo);
	$fuel_log_sheet_id = db_fetch_row($res);
	$rires = sql("SELECT COUNT(1) FROM `vehicle_history` WHERE `closing_km`='" . makeSafe($fuel_log_sheet_id[0]) . "'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'vehicle_history', $RetMsg);
		return $RetMsg;
	} elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation['confirm delete'];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'vehicle_history', $RetMsg);
		$RetMsg = str_replace('<Delete>', '<input type="button" class="btn btn-danger" value="' . html_attr($Translation['yes']) . '" onClick="window.location = \'log_sheet_view.php?SelectedID=' . urlencode($selected_id) . '&delete_x=1&confirmed=1&csrf_token=' . urlencode(csrf_token(false, true)) . '\';">', $RetMsg);
		$RetMsg = str_replace('<Cancel>', '<input type="button" class="btn btn-success" value="' . html_attr($Translation[ 'no']) . '" onClick="window.location = \'log_sheet_view.php?SelectedID=' . urlencode($selected_id) . '\';">', $RetMsg);
		return $RetMsg;
	}

	// child table: vehicle_payments
	$res = sql("SELECT `fuel_log_sheet_id` FROM `log_sheet` WHERE `fuel_log_sheet_id`='{$selected_id}'", $eo);
	$fuel_log_sheet_id = db_fetch_row($res);
	$rires = sql("SELECT COUNT(1) FROM `vehicle_payments` WHERE `closing_km`='" . makeSafe($fuel_log_sheet_id[0]) . "'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'vehicle_payments', $RetMsg);
		return $RetMsg;
	} elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation['confirm delete'];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'vehicle_payments', $RetMsg);
		$RetMsg = str_replace('<Delete>', '<input type="button" class="btn btn-danger" value="' . html_attr($Translation['yes']) . '" onClick="window.location = \'log_sheet_view.php?SelectedID=' . urlencode($selected_id) . '&delete_x=1&confirmed=1&csrf_token=' . urlencode(csrf_token(false, true)) . '\';">', $RetMsg);
		$RetMsg = str_replace('<Cancel>', '<input type="button" class="btn btn-success" value="' . html_attr($Translation[ 'no']) . '" onClick="window.location = \'log_sheet_view.php?SelectedID=' . urlencode($selected_id) . '\';">', $RetMsg);
		return $RetMsg;
	}

	// child table: service
	$res = sql("SELECT `fuel_log_sheet_id` FROM `log_sheet` WHERE `fuel_log_sheet_id`='{$selected_id}'", $eo);
	$fuel_log_sheet_id = db_fetch_row($res);
	$rires = sql("SELECT COUNT(1) FROM `service` WHERE `closing_km`='" . makeSafe($fuel_log_sheet_id[0]) . "'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'service', $RetMsg);
		return $RetMsg;
	} elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation['confirm delete'];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'service', $RetMsg);
		$RetMsg = str_replace('<Delete>', '<input type="button" class="btn btn-danger" value="' . html_attr($Translation['yes']) . '" onClick="window.location = \'log_sheet_view.php?SelectedID=' . urlencode($selected_id) . '&delete_x=1&confirmed=1&csrf_token=' . urlencode(csrf_token(false, true)) . '\';">', $RetMsg);
		$RetMsg = str_replace('<Cancel>', '<input type="button" class="btn btn-success" value="' . html_attr($Translation[ 'no']) . '" onClick="window.location = \'log_sheet_view.php?SelectedID=' . urlencode($selected_id) . '\';">', $RetMsg);
		return $RetMsg;
	}

	// child table: schedule
	$res = sql("SELECT `fuel_log_sheet_id` FROM `log_sheet` WHERE `fuel_log_sheet_id`='{$selected_id}'", $eo);
	$fuel_log_sheet_id = db_fetch_row($res);
	$rires = sql("SELECT COUNT(1) FROM `schedule` WHERE `closing_km`='" . makeSafe($fuel_log_sheet_id[0]) . "'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'schedule', $RetMsg);
		return $RetMsg;
	} elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation['confirm delete'];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'schedule', $RetMsg);
		$RetMsg = str_replace('<Delete>', '<input type="button" class="btn btn-danger" value="' . html_attr($Translation['yes']) . '" onClick="window.location = \'log_sheet_view.php?SelectedID=' . urlencode($selected_id) . '&delete_x=1&confirmed=1&csrf_token=' . urlencode(csrf_token(false, true)) . '\';">', $RetMsg);
		$RetMsg = str_replace('<Cancel>', '<input type="button" class="btn btn-success" value="' . html_attr($Translation[ 'no']) . '" onClick="window.location = \'log_sheet_view.php?SelectedID=' . urlencode($selected_id) . '\';">', $RetMsg);
		return $RetMsg;
	}

	// child table: purchase_orders
	$res = sql("SELECT `fuel_log_sheet_id` FROM `log_sheet` WHERE `fuel_log_sheet_id`='{$selected_id}'", $eo);
	$fuel_log_sheet_id = db_fetch_row($res);
	$rires = sql("SELECT COUNT(1) FROM `purchase_orders` WHERE `closing_km`='" . makeSafe($fuel_log_sheet_id[0]) . "'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'purchase_orders', $RetMsg);
		return $RetMsg;
	} elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation['confirm delete'];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'purchase_orders', $RetMsg);
		$RetMsg = str_replace('<Delete>', '<input type="button" class="btn btn-danger" value="' . html_attr($Translation['yes']) . '" onClick="window.location = \'log_sheet_view.php?SelectedID=' . urlencode($selected_id) . '&delete_x=1&confirmed=1&csrf_token=' . urlencode(csrf_token(false, true)) . '\';">', $RetMsg);
		$RetMsg = str_replace('<Cancel>', '<input type="button" class="btn btn-success" value="' . html_attr($Translation[ 'no']) . '" onClick="window.location = \'log_sheet_view.php?SelectedID=' . urlencode($selected_id) . '\';">', $RetMsg);
		return $RetMsg;
	}

	// child table: accidents
	$res = sql("SELECT `fuel_log_sheet_id` FROM `log_sheet` WHERE `fuel_log_sheet_id`='{$selected_id}'", $eo);
	$fuel_log_sheet_id = db_fetch_row($res);
	$rires = sql("SELECT COUNT(1) FROM `accidents` WHERE `closing_km`='" . makeSafe($fuel_log_sheet_id[0]) . "'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'accidents', $RetMsg);
		return $RetMsg;
	} elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation['confirm delete'];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'accidents', $RetMsg);
		$RetMsg = str_replace('<Delete>', '<input type="button" class="btn btn-danger" value="' . html_attr($Translation['yes']) . '" onClick="window.location = \'log_sheet_view.php?SelectedID=' . urlencode($selected_id) . '&delete_x=1&confirmed=1&csrf_token=' . urlencode(csrf_token(false, true)) . '\';">', $RetMsg);
		$RetMsg = str_replace('<Cancel>', '<input type="button" class="btn btn-success" value="' . html_attr($Translation[ 'no']) . '" onClick="window.location = \'log_sheet_view.php?SelectedID=' . urlencode($selected_id) . '\';">', $RetMsg);
		return $RetMsg;
	}

	// child table: claim
	$res = sql("SELECT `fuel_log_sheet_id` FROM `log_sheet` WHERE `fuel_log_sheet_id`='{$selected_id}'", $eo);
	$fuel_log_sheet_id = db_fetch_row($res);
	$rires = sql("SELECT COUNT(1) FROM `claim` WHERE `closing_km`='" . makeSafe($fuel_log_sheet_id[0]) . "'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'claim', $RetMsg);
		return $RetMsg;
	} elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation['confirm delete'];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'claim', $RetMsg);
		$RetMsg = str_replace('<Delete>', '<input type="button" class="btn btn-danger" value="' . html_attr($Translation['yes']) . '" onClick="window.location = \'log_sheet_view.php?SelectedID=' . urlencode($selected_id) . '&delete_x=1&confirmed=1&csrf_token=' . urlencode(csrf_token(false, true)) . '\';">', $RetMsg);
		$RetMsg = str_replace('<Cancel>', '<input type="button" class="btn btn-success" value="' . html_attr($Translation[ 'no']) . '" onClick="window.location = \'log_sheet_view.php?SelectedID=' . urlencode($selected_id) . '\';">', $RetMsg);
		return $RetMsg;
	}

	// child table: vehicle_daily_check_list
	$res = sql("SELECT `fuel_log_sheet_id` FROM `log_sheet` WHERE `fuel_log_sheet_id`='{$selected_id}'", $eo);
	$fuel_log_sheet_id = db_fetch_row($res);
	$rires = sql("SELECT COUNT(1) FROM `vehicle_daily_check_list` WHERE `closing_km`='" . makeSafe($fuel_log_sheet_id[0]) . "'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'vehicle_daily_check_list', $RetMsg);
		return $RetMsg;
	} elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation['confirm delete'];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'vehicle_daily_check_list', $RetMsg);
		$RetMsg = str_replace('<Delete>', '<input type="button" class="btn btn-danger" value="' . html_attr($Translation['yes']) . '" onClick="window.location = \'log_sheet_view.php?SelectedID=' . urlencode($selected_id) . '&delete_x=1&confirmed=1&csrf_token=' . urlencode(csrf_token(false, true)) . '\';">', $RetMsg);
		$RetMsg = str_replace('<Cancel>', '<input type="button" class="btn btn-success" value="' . html_attr($Translation[ 'no']) . '" onClick="window.location = \'log_sheet_view.php?SelectedID=' . urlencode($selected_id) . '\';">', $RetMsg);
		return $RetMsg;
	}

	// child table: breakdown_services
	$res = sql("SELECT `fuel_log_sheet_id` FROM `log_sheet` WHERE `fuel_log_sheet_id`='{$selected_id}'", $eo);
	$fuel_log_sheet_id = db_fetch_row($res);
	$rires = sql("SELECT COUNT(1) FROM `breakdown_services` WHERE `closing_km`='" . makeSafe($fuel_log_sheet_id[0]) . "'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'breakdown_services', $RetMsg);
		return $RetMsg;
	} elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation['confirm delete'];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'breakdown_services', $RetMsg);
		$RetMsg = str_replace('<Delete>', '<input type="button" class="btn btn-danger" value="' . html_attr($Translation['yes']) . '" onClick="window.location = \'log_sheet_view.php?SelectedID=' . urlencode($selected_id) . '&delete_x=1&confirmed=1&csrf_token=' . urlencode(csrf_token(false, true)) . '\';">', $RetMsg);
		$RetMsg = str_replace('<Cancel>', '<input type="button" class="btn btn-success" value="' . html_attr($Translation[ 'no']) . '" onClick="window.location = \'log_sheet_view.php?SelectedID=' . urlencode($selected_id) . '\';">', $RetMsg);
		return $RetMsg;
	}

	// child table: modification_to_vehicle
	$res = sql("SELECT `fuel_log_sheet_id` FROM `log_sheet` WHERE `fuel_log_sheet_id`='{$selected_id}'", $eo);
	$fuel_log_sheet_id = db_fetch_row($res);
	$rires = sql("SELECT COUNT(1) FROM `modification_to_vehicle` WHERE `closing_km`='" . makeSafe($fuel_log_sheet_id[0]) . "'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'modification_to_vehicle', $RetMsg);
		return $RetMsg;
	} elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation['confirm delete'];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'modification_to_vehicle', $RetMsg);
		$RetMsg = str_replace('<Delete>', '<input type="button" class="btn btn-danger" value="' . html_attr($Translation['yes']) . '" onClick="window.location = \'log_sheet_view.php?SelectedID=' . urlencode($selected_id) . '&delete_x=1&confirmed=1&csrf_token=' . urlencode(csrf_token(false, true)) . '\';">', $RetMsg);
		$RetMsg = str_replace('<Cancel>', '<input type="button" class="btn btn-success" value="' . html_attr($Translation[ 'no']) . '" onClick="window.location = \'log_sheet_view.php?SelectedID=' . urlencode($selected_id) . '\';">', $RetMsg);
		return $RetMsg;
	}

	// child table: vehicle_handing_over_checklist
	$res = sql("SELECT `fuel_log_sheet_id` FROM `log_sheet` WHERE `fuel_log_sheet_id`='{$selected_id}'", $eo);
	$fuel_log_sheet_id = db_fetch_row($res);
	$rires = sql("SELECT COUNT(1) FROM `vehicle_handing_over_checklist` WHERE `vehicle_registration_number`='" . makeSafe($fuel_log_sheet_id[0]) . "'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'vehicle_handing_over_checklist', $RetMsg);
		return $RetMsg;
	} elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation['confirm delete'];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'vehicle_handing_over_checklist', $RetMsg);
		$RetMsg = str_replace('<Delete>', '<input type="button" class="btn btn-danger" value="' . html_attr($Translation['yes']) . '" onClick="window.location = \'log_sheet_view.php?SelectedID=' . urlencode($selected_id) . '&delete_x=1&confirmed=1&csrf_token=' . urlencode(csrf_token(false, true)) . '\';">', $RetMsg);
		$RetMsg = str_replace('<Cancel>', '<input type="button" class="btn btn-success" value="' . html_attr($Translation[ 'no']) . '" onClick="window.location = \'log_sheet_view.php?SelectedID=' . urlencode($selected_id) . '\';">', $RetMsg);
		return $RetMsg;
	}

	// child table: vehicle_return_check_list
	$res = sql("SELECT `fuel_log_sheet_id` FROM `log_sheet` WHERE `fuel_log_sheet_id`='{$selected_id}'", $eo);
	$fuel_log_sheet_id = db_fetch_row($res);
	$rires = sql("SELECT COUNT(1) FROM `vehicle_return_check_list` WHERE `closing_km`='" . makeSafe($fuel_log_sheet_id[0]) . "'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'vehicle_return_check_list', $RetMsg);
		return $RetMsg;
	} elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation['confirm delete'];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'vehicle_return_check_list', $RetMsg);
		$RetMsg = str_replace('<Delete>', '<input type="button" class="btn btn-danger" value="' . html_attr($Translation['yes']) . '" onClick="window.location = \'log_sheet_view.php?SelectedID=' . urlencode($selected_id) . '&delete_x=1&confirmed=1&csrf_token=' . urlencode(csrf_token(false, true)) . '\';">', $RetMsg);
		$RetMsg = str_replace('<Cancel>', '<input type="button" class="btn btn-success" value="' . html_attr($Translation[ 'no']) . '" onClick="window.location = \'log_sheet_view.php?SelectedID=' . urlencode($selected_id) . '\';">', $RetMsg);
		return $RetMsg;
	}

	sql("DELETE FROM `log_sheet` WHERE `fuel_log_sheet_id`='{$selected_id}'", $eo);

	// hook: log_sheet_after_delete
	if(function_exists('log_sheet_after_delete')) {
		$args = [];
		log_sheet_after_delete($selected_id, getMemberInfo(), $args);
	}

	// mm: delete ownership data
	sql("DELETE FROM `membership_userrecords` WHERE `tableName`='log_sheet' AND `pkValue`='{$selected_id}'", $eo);
}

function log_sheet_update(&$selected_id, &$error_message = '') {
	global $Translation;

	// mm: can member edit record?
	if(!check_record_permission('log_sheet', $selected_id, 'edit')) return false;

	$data = [
		'vehicle_registration_number' => Request::lookup('vehicle_registration_number', ''),
		'register_number' => Request::lookup('register_number', ''),
		'make_of_vehicle' => Request::lookup('vehicle_registration_number'),
		'model_of_vehicle' => Request::lookup('model_of_vehicle', ''),
		'year_model_specification' => Request::lookup('vehicle_registration_number'),
		'colour_of_vehicle' => Request::lookup('colour_of_vehicle', ''),
		'engine_capacity' => Request::lookup('vehicle_registration_number'),
		'renewal_of_license' => Request::dateComponents('renewal_of_license', ''),
		'district' => Request::lookup('vehicle_registration_number'),
		'month' => Request::dateComponents('month', ''),
		'drivers_name_and_surname' => Request::lookup('drivers_name_and_surname', ''),
		'drivers_persal_number' => Request::lookup('drivers_name_and_surname'),
		'opening_km' => Request::val('opening_km', ''),
		'total_trip_distance' => Request::val('total_trip_distance', ''),
		'closing_km' => Request::val('closing_km', ''),
		'fuel_type' => Request::lookup('fuel_type', ''),
		'fuel_tank_capacity' => Request::val('fuel_tank_capacity', ''),
		'vendor' => Request::val('vendor', ''),
		'fuel_cost_litre' => Request::val('fuel_cost_litre', ''),
		'refuel_quantity_1' => Request::val('refuel_quantity_1', ''),
		'refuel_first_time_date' => Request::dateComponents('refuel_first_time_date', ''),
		'trip_distance_refuel_1' => Request::val('trip_distance_refuel_1', ''),
		'refuel_quantity_2' => Request::val('refuel_quantity_2', ''),
		'refuel_second_time_date' => Request::dateComponents('refuel_second_time_date', ''),
		'trip_distance_refuel_2' => Request::val('trip_distance_refuel_2', ''),
		'refuel_quantity_3' => Request::val('refuel_quantity_3', ''),
		'refuel_third_time_date' => Request::dateComponents('refuel_third_time_date', ''),
		'trip_distance_refuel_3' => Request::val('trip_distance_refuel_3', ''),
		'refuel_quantity_4' => Request::val('refuel_quantity_4', ''),
		'refuel_fourth_time_date' => Request::dateComponents('refuel_fourth_time_date', ''),
		'trip_distance_refuel_4' => Request::val('trip_distance_refuel_4', ''),
		'refuel_quantity_5' => Request::val('refuel_quantity_5', ''),
		'refuel_fifth_time_date' => Request::dateComponents('refuel_fifth_time_date', ''),
		'trip_distance_refuel_5' => Request::val('trip_distance_refuel_5', ''),
		'refuel_quantity_6' => Request::val('refuel_quantity_6', ''),
		'trip_distance_refuel_6' => Request::val('trip_distance_refuel_6', ''),
		'refuel_sixth_time_date' => Request::dateComponents('refuel_sixth_time_date', ''),
		'times_refuel_current_month' => Request::val('times_refuel_current_month', ''),
		'total_fuel_quantity' => Request::val('total_fuel_quantity', ''),
		'fuel_consumption' => Request::val('fuel_consumption', ''),
		'fuel_total_cost' => Request::val('fuel_total_cost', ''),
		'payment_e_fuel_card' => Request::val('payment_e_fuel_card', ''),
		'captured_by' => Request::val('captured_by', ''),
		'comments' => Request::val('comments', ''),
		'date_captured' => Request::dateComponents('date_captured', ''),
		'complete_fill_up' => Request::val('complete_fill_up', ''),
	];

	// get existing values
	$old_data = getRecord('log_sheet', $selected_id);
	if(is_array($old_data)) {
		$old_data = array_map('makeSafe', $old_data);
		$old_data['selectedID'] = makeSafe($selected_id);
	}

	$data['selectedID'] = makeSafe($selected_id);

	// hook: log_sheet_before_update
	if(function_exists('log_sheet_before_update')) {
		$args = ['old_data' => $old_data];
		if(!log_sheet_before_update($data, getMemberInfo(), $args)) {
			if(isset($args['error_message'])) $error_message = $args['error_message'];
			return false;
		}
	}

	$set = $data; unset($set['selectedID']);
	foreach ($set as $field => $value) {
		$set[$field] = ($value !== '' && $value !== NULL) ? $value : NULL;
	}

	if(!update(
		'log_sheet', 
		backtick_keys_once($set), 
		['`fuel_log_sheet_id`' => $selected_id], 
		$error_message
	)) {
		echo $error_message;
		echo '<a href="log_sheet_view.php?SelectedID=' . urlencode($selected_id) . "\">{$Translation['< back']}</a>";
		exit;
	}


	$eo = ['silentErrors' => true];

	update_calc_fields('log_sheet', $data['selectedID'], calculated_fields()['log_sheet']);

	// hook: log_sheet_after_update
	if(function_exists('log_sheet_after_update')) {
		$res = sql("SELECT * FROM `log_sheet` WHERE `fuel_log_sheet_id`='{$data['selectedID']}' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)) $data = array_map('makeSafe', $row);

		$data['selectedID'] = $data['fuel_log_sheet_id'];
		$args = ['old_data' => $old_data];
		if(!log_sheet_after_update($data, getMemberInfo(), $args)) return;
	}

	// mm: update ownership data
	sql("UPDATE `membership_userrecords` SET `dateUpdated`='" . time() . "' WHERE `tableName`='log_sheet' AND `pkValue`='" . makeSafe($selected_id) . "'", $eo);
}

function log_sheet_form($selected_id = '', $AllowUpdate = 1, $AllowInsert = 1, $AllowDelete = 1, $separateDV = 0, $TemplateDV = '', $TemplateDVP = '') {
	// function to return an editable form for a table records
	// and fill it with data of record whose ID is $selected_id. If $selected_id
	// is empty, an empty form is shown, with only an 'Add New'
	// button displayed.

	global $Translation;
	$eo = ['silentErrors' => true];
	$noUploads = null;
	$row = $urow = $jsReadOnly = $jsEditable = $lookups = null;

	$noSaveAsCopy = true;

	// mm: get table permissions
	$arrPerm = getTablePermissions('log_sheet');
	if(!$arrPerm['insert'] && $selected_id == '')
		// no insert permission and no record selected
		// so show access denied error unless TVDV
		return $separateDV ? $Translation['tableAccessDenied'] : '';
	$AllowInsert = ($arrPerm['insert'] ? true : false);
	// print preview?
	$dvprint = false;
	if(strlen($selected_id) && Request::val('dvprint_x') != '') {
		$dvprint = true;
	}

	$filterer_vehicle_registration_number = Request::val('filterer_vehicle_registration_number');
	$filterer_register_number = Request::val('filterer_register_number');
	$filterer_model_of_vehicle = Request::val('filterer_model_of_vehicle');
	$filterer_colour_of_vehicle = Request::val('filterer_colour_of_vehicle');
	$filterer_drivers_name_and_surname = Request::val('filterer_drivers_name_and_surname');
	$filterer_fuel_type = Request::val('filterer_fuel_type');

	// populate filterers, starting from children to grand-parents

	// unique random identifier
	$rnd1 = ($dvprint ? rand(1000000, 9999999) : '');
	// combobox: vehicle_registration_number
	$combo_vehicle_registration_number = new DataCombo;
	// combobox: register_number
	$combo_register_number = new DataCombo;
	// combobox: model_of_vehicle
	$combo_model_of_vehicle = new DataCombo;
	// combobox: colour_of_vehicle
	$combo_colour_of_vehicle = new DataCombo;
	// combobox: renewal_of_license
	$combo_renewal_of_license = new DateCombo;
	$combo_renewal_of_license->DateFormat = "dmy";
	$combo_renewal_of_license->MinYear = defined('log_sheet.renewal_of_license.MinYear') ? constant('log_sheet.renewal_of_license.MinYear') : 1900;
	$combo_renewal_of_license->MaxYear = defined('log_sheet.renewal_of_license.MaxYear') ? constant('log_sheet.renewal_of_license.MaxYear') : 2100;
	$combo_renewal_of_license->DefaultDate = parseMySQLDate('', '');
	$combo_renewal_of_license->MonthNames = $Translation['month names'];
	$combo_renewal_of_license->NamePrefix = 'renewal_of_license';
	// combobox: month
	$combo_month = new DateCombo;
	$combo_month->DateFormat = "dmy";
	$combo_month->MinYear = defined('log_sheet.month.MinYear') ? constant('log_sheet.month.MinYear') : 1900;
	$combo_month->MaxYear = defined('log_sheet.month.MaxYear') ? constant('log_sheet.month.MaxYear') : 2100;
	$combo_month->DefaultDate = parseMySQLDate('', '');
	$combo_month->MonthNames = $Translation['month names'];
	$combo_month->NamePrefix = 'month';
	// combobox: drivers_name_and_surname
	$combo_drivers_name_and_surname = new DataCombo;
	// combobox: fuel_type
	$combo_fuel_type = new DataCombo;
	// combobox: refuel_first_time_date
	$combo_refuel_first_time_date = new DateCombo;
	$combo_refuel_first_time_date->DateFormat = "dmy";
	$combo_refuel_first_time_date->MinYear = defined('log_sheet.refuel_first_time_date.MinYear') ? constant('log_sheet.refuel_first_time_date.MinYear') : 1900;
	$combo_refuel_first_time_date->MaxYear = defined('log_sheet.refuel_first_time_date.MaxYear') ? constant('log_sheet.refuel_first_time_date.MaxYear') : 2100;
	$combo_refuel_first_time_date->DefaultDate = parseMySQLDate('1', '1');
	$combo_refuel_first_time_date->MonthNames = $Translation['month names'];
	$combo_refuel_first_time_date->NamePrefix = 'refuel_first_time_date';
	// combobox: refuel_second_time_date
	$combo_refuel_second_time_date = new DateCombo;
	$combo_refuel_second_time_date->DateFormat = "dmy";
	$combo_refuel_second_time_date->MinYear = defined('log_sheet.refuel_second_time_date.MinYear') ? constant('log_sheet.refuel_second_time_date.MinYear') : 1900;
	$combo_refuel_second_time_date->MaxYear = defined('log_sheet.refuel_second_time_date.MaxYear') ? constant('log_sheet.refuel_second_time_date.MaxYear') : 2100;
	$combo_refuel_second_time_date->DefaultDate = parseMySQLDate('1', '1');
	$combo_refuel_second_time_date->MonthNames = $Translation['month names'];
	$combo_refuel_second_time_date->NamePrefix = 'refuel_second_time_date';
	// combobox: refuel_third_time_date
	$combo_refuel_third_time_date = new DateCombo;
	$combo_refuel_third_time_date->DateFormat = "dmy";
	$combo_refuel_third_time_date->MinYear = defined('log_sheet.refuel_third_time_date.MinYear') ? constant('log_sheet.refuel_third_time_date.MinYear') : 1900;
	$combo_refuel_third_time_date->MaxYear = defined('log_sheet.refuel_third_time_date.MaxYear') ? constant('log_sheet.refuel_third_time_date.MaxYear') : 2100;
	$combo_refuel_third_time_date->DefaultDate = parseMySQLDate('1', '1');
	$combo_refuel_third_time_date->MonthNames = $Translation['month names'];
	$combo_refuel_third_time_date->NamePrefix = 'refuel_third_time_date';
	// combobox: refuel_fourth_time_date
	$combo_refuel_fourth_time_date = new DateCombo;
	$combo_refuel_fourth_time_date->DateFormat = "dmy";
	$combo_refuel_fourth_time_date->MinYear = defined('log_sheet.refuel_fourth_time_date.MinYear') ? constant('log_sheet.refuel_fourth_time_date.MinYear') : 1900;
	$combo_refuel_fourth_time_date->MaxYear = defined('log_sheet.refuel_fourth_time_date.MaxYear') ? constant('log_sheet.refuel_fourth_time_date.MaxYear') : 2100;
	$combo_refuel_fourth_time_date->DefaultDate = parseMySQLDate('1', '1');
	$combo_refuel_fourth_time_date->MonthNames = $Translation['month names'];
	$combo_refuel_fourth_time_date->NamePrefix = 'refuel_fourth_time_date';
	// combobox: refuel_fifth_time_date
	$combo_refuel_fifth_time_date = new DateCombo;
	$combo_refuel_fifth_time_date->DateFormat = "dmy";
	$combo_refuel_fifth_time_date->MinYear = defined('log_sheet.refuel_fifth_time_date.MinYear') ? constant('log_sheet.refuel_fifth_time_date.MinYear') : 1900;
	$combo_refuel_fifth_time_date->MaxYear = defined('log_sheet.refuel_fifth_time_date.MaxYear') ? constant('log_sheet.refuel_fifth_time_date.MaxYear') : 2100;
	$combo_refuel_fifth_time_date->DefaultDate = parseMySQLDate('1', '1');
	$combo_refuel_fifth_time_date->MonthNames = $Translation['month names'];
	$combo_refuel_fifth_time_date->NamePrefix = 'refuel_fifth_time_date';
	// combobox: refuel_sixth_time_date
	$combo_refuel_sixth_time_date = new DateCombo;
	$combo_refuel_sixth_time_date->DateFormat = "dmy";
	$combo_refuel_sixth_time_date->MinYear = defined('log_sheet.refuel_sixth_time_date.MinYear') ? constant('log_sheet.refuel_sixth_time_date.MinYear') : 1900;
	$combo_refuel_sixth_time_date->MaxYear = defined('log_sheet.refuel_sixth_time_date.MaxYear') ? constant('log_sheet.refuel_sixth_time_date.MaxYear') : 2100;
	$combo_refuel_sixth_time_date->DefaultDate = parseMySQLDate('1', '1');
	$combo_refuel_sixth_time_date->MonthNames = $Translation['month names'];
	$combo_refuel_sixth_time_date->NamePrefix = 'refuel_sixth_time_date';
	// combobox: payment_e_fuel_card
	$combo_payment_e_fuel_card = new Combo;
	$combo_payment_e_fuel_card->ListType = 2;
	$combo_payment_e_fuel_card->MultipleSeparator = ', ';
	$combo_payment_e_fuel_card->ListBoxHeight = 10;
	$combo_payment_e_fuel_card->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/log_sheet.payment_e_fuel_card.csv')) {
		$payment_e_fuel_card_data = addslashes(implode('', @file(__DIR__ . '/hooks/log_sheet.payment_e_fuel_card.csv')));
		$combo_payment_e_fuel_card->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($payment_e_fuel_card_data))));
		$combo_payment_e_fuel_card->ListData = $combo_payment_e_fuel_card->ListItem;
	} else {
		$combo_payment_e_fuel_card->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("Yes;;No"))));
		$combo_payment_e_fuel_card->ListData = $combo_payment_e_fuel_card->ListItem;
	}
	$combo_payment_e_fuel_card->SelectName = 'payment_e_fuel_card';
	// combobox: date_captured
	$combo_date_captured = new DateCombo;
	$combo_date_captured->DateFormat = "dmy";
	$combo_date_captured->MinYear = defined('log_sheet.date_captured.MinYear') ? constant('log_sheet.date_captured.MinYear') : 1900;
	$combo_date_captured->MaxYear = defined('log_sheet.date_captured.MaxYear') ? constant('log_sheet.date_captured.MaxYear') : 2100;
	$combo_date_captured->DefaultDate = parseMySQLDate('', '');
	$combo_date_captured->MonthNames = $Translation['month names'];
	$combo_date_captured->NamePrefix = 'date_captured';
	// combobox: complete_fill_up
	$combo_complete_fill_up = new Combo;
	$combo_complete_fill_up->ListType = 2;
	$combo_complete_fill_up->MultipleSeparator = ', ';
	$combo_complete_fill_up->ListBoxHeight = 10;
	$combo_complete_fill_up->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/log_sheet.complete_fill_up.csv')) {
		$complete_fill_up_data = addslashes(implode('', @file(__DIR__ . '/hooks/log_sheet.complete_fill_up.csv')));
		$combo_complete_fill_up->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($complete_fill_up_data))));
		$combo_complete_fill_up->ListData = $combo_complete_fill_up->ListItem;
	} else {
		$combo_complete_fill_up->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("Yes;;No;;1/4 Tank;;1/2 Tank;;3/4 Tank;;Fill up"))));
		$combo_complete_fill_up->ListData = $combo_complete_fill_up->ListItem;
	}
	$combo_complete_fill_up->SelectName = 'complete_fill_up';

	if($selected_id) {
		// mm: check member permissions
		if(!$arrPerm['view']) return $Translation['tableAccessDenied'];

		// mm: who is the owner?
		$ownerGroupID = sqlValue("SELECT `groupID` FROM `membership_userrecords` WHERE `tableName`='log_sheet' AND `pkValue`='" . makeSafe($selected_id) . "'");
		$ownerMemberID = sqlValue("SELECT LCASE(`memberID`) FROM `membership_userrecords` WHERE `tableName`='log_sheet' AND `pkValue`='" . makeSafe($selected_id) . "'");

		if($arrPerm['view'] == 1 && getLoggedMemberID() != $ownerMemberID) return $Translation['tableAccessDenied'];
		if($arrPerm['view'] == 2 && getLoggedGroupID() != $ownerGroupID) return $Translation['tableAccessDenied'];

		// can edit?
		$AllowUpdate = 0;
		if(($arrPerm['edit'] == 1 && $ownerMemberID == getLoggedMemberID()) || ($arrPerm['edit'] == 2 && $ownerGroupID == getLoggedGroupID()) || $arrPerm['edit'] == 3) {
			$AllowUpdate = 1;
		}

		$res = sql("SELECT * FROM `log_sheet` WHERE `fuel_log_sheet_id`='" . makeSafe($selected_id) . "'", $eo);
		if(!($row = db_fetch_array($res))) {
			return error_message($Translation['No records found'], 'log_sheet_view.php', false);
		}
		$combo_vehicle_registration_number->SelectedData = $row['vehicle_registration_number'];
		$combo_register_number->SelectedData = $row['register_number'];
		$combo_model_of_vehicle->SelectedData = $row['model_of_vehicle'];
		$combo_colour_of_vehicle->SelectedData = $row['colour_of_vehicle'];
		$combo_renewal_of_license->DefaultDate = $row['renewal_of_license'];
		$combo_month->DefaultDate = $row['month'];
		$combo_drivers_name_and_surname->SelectedData = $row['drivers_name_and_surname'];
		$combo_fuel_type->SelectedData = $row['fuel_type'];
		$combo_refuel_first_time_date->DefaultDate = $row['refuel_first_time_date'];
		$combo_refuel_second_time_date->DefaultDate = $row['refuel_second_time_date'];
		$combo_refuel_third_time_date->DefaultDate = $row['refuel_third_time_date'];
		$combo_refuel_fourth_time_date->DefaultDate = $row['refuel_fourth_time_date'];
		$combo_refuel_fifth_time_date->DefaultDate = $row['refuel_fifth_time_date'];
		$combo_refuel_sixth_time_date->DefaultDate = $row['refuel_sixth_time_date'];
		$combo_payment_e_fuel_card->SelectedData = $row['payment_e_fuel_card'];
		$combo_date_captured->DefaultDate = $row['date_captured'];
		$combo_complete_fill_up->SelectedData = $row['complete_fill_up'];
		$urow = $row; /* unsanitized data */
		$row = array_map('safe_html', $row);
	} else {
		$filterField = Request::val('FilterField');
		$filterOperator = Request::val('FilterOperator');
		$filterValue = Request::val('FilterValue');
		$combo_vehicle_registration_number->SelectedData = $filterer_vehicle_registration_number;
		$combo_register_number->SelectedData = $filterer_register_number;
		$combo_model_of_vehicle->SelectedData = $filterer_model_of_vehicle;
		$combo_colour_of_vehicle->SelectedData = $filterer_colour_of_vehicle;
		$combo_drivers_name_and_surname->SelectedData = $filterer_drivers_name_and_surname;
		$combo_fuel_type->SelectedData = $filterer_fuel_type;
		$combo_payment_e_fuel_card->SelectedText = (isset($filterField[1]) && $filterField[1] == '43' && $filterOperator[1] == '<=>' ? $filterValue[1] : '');
		$combo_complete_fill_up->SelectedText = (isset($filterField[1]) && $filterField[1] == '47' && $filterOperator[1] == '<=>' ? $filterValue[1] : '');
	}
	$combo_vehicle_registration_number->HTML = '<span id="vehicle_registration_number-container' . $rnd1 . '"></span><input type="hidden" name="vehicle_registration_number" id="vehicle_registration_number' . $rnd1 . '" value="' . html_attr($combo_vehicle_registration_number->SelectedData) . '">';
	$combo_vehicle_registration_number->MatchText = '<span id="vehicle_registration_number-container-readonly' . $rnd1 . '"></span><input type="hidden" name="vehicle_registration_number" id="vehicle_registration_number' . $rnd1 . '" value="' . html_attr($combo_vehicle_registration_number->SelectedData) . '">';
	$combo_register_number->HTML = '<span id="register_number-container' . $rnd1 . '"></span><input type="hidden" name="register_number" id="register_number' . $rnd1 . '" value="' . html_attr($combo_register_number->SelectedData) . '">';
	$combo_register_number->MatchText = '<span id="register_number-container-readonly' . $rnd1 . '"></span><input type="hidden" name="register_number" id="register_number' . $rnd1 . '" value="' . html_attr($combo_register_number->SelectedData) . '">';
	$combo_model_of_vehicle->HTML = '<span id="model_of_vehicle-container' . $rnd1 . '"></span><input type="hidden" name="model_of_vehicle" id="model_of_vehicle' . $rnd1 . '" value="' . html_attr($combo_model_of_vehicle->SelectedData) . '">';
	$combo_model_of_vehicle->MatchText = '<span id="model_of_vehicle-container-readonly' . $rnd1 . '"></span><input type="hidden" name="model_of_vehicle" id="model_of_vehicle' . $rnd1 . '" value="' . html_attr($combo_model_of_vehicle->SelectedData) . '">';
	$combo_colour_of_vehicle->HTML = '<span id="colour_of_vehicle-container' . $rnd1 . '"></span><input type="hidden" name="colour_of_vehicle" id="colour_of_vehicle' . $rnd1 . '" value="' . html_attr($combo_colour_of_vehicle->SelectedData) . '">';
	$combo_colour_of_vehicle->MatchText = '<span id="colour_of_vehicle-container-readonly' . $rnd1 . '"></span><input type="hidden" name="colour_of_vehicle" id="colour_of_vehicle' . $rnd1 . '" value="' . html_attr($combo_colour_of_vehicle->SelectedData) . '">';
	$combo_drivers_name_and_surname->HTML = '<span id="drivers_name_and_surname-container' . $rnd1 . '"></span><input type="hidden" name="drivers_name_and_surname" id="drivers_name_and_surname' . $rnd1 . '" value="' . html_attr($combo_drivers_name_and_surname->SelectedData) . '">';
	$combo_drivers_name_and_surname->MatchText = '<span id="drivers_name_and_surname-container-readonly' . $rnd1 . '"></span><input type="hidden" name="drivers_name_and_surname" id="drivers_name_and_surname' . $rnd1 . '" value="' . html_attr($combo_drivers_name_and_surname->SelectedData) . '">';
	$combo_fuel_type->HTML = '<span id="fuel_type-container' . $rnd1 . '"></span><input type="hidden" name="fuel_type" id="fuel_type' . $rnd1 . '" value="' . html_attr($combo_fuel_type->SelectedData) . '">';
	$combo_fuel_type->MatchText = '<span id="fuel_type-container-readonly' . $rnd1 . '"></span><input type="hidden" name="fuel_type" id="fuel_type' . $rnd1 . '" value="' . html_attr($combo_fuel_type->SelectedData) . '">';
	$combo_payment_e_fuel_card->Render();
	$combo_complete_fill_up->Render();

	ob_start();
	?>

	<script>
		// initial lookup values
		AppGini.current_vehicle_registration_number__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['vehicle_registration_number'] : htmlspecialchars($filterer_vehicle_registration_number, ENT_QUOTES)); ?>"};
		AppGini.current_register_number__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['register_number'] : htmlspecialchars($filterer_register_number, ENT_QUOTES)); ?>"};
		AppGini.current_model_of_vehicle__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['model_of_vehicle'] : htmlspecialchars($filterer_model_of_vehicle, ENT_QUOTES)); ?>"};
		AppGini.current_colour_of_vehicle__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['colour_of_vehicle'] : htmlspecialchars($filterer_colour_of_vehicle, ENT_QUOTES)); ?>"};
		AppGini.current_drivers_name_and_surname__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['drivers_name_and_surname'] : htmlspecialchars($filterer_drivers_name_and_surname, ENT_QUOTES)); ?>"};
		AppGini.current_fuel_type__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['fuel_type'] : htmlspecialchars($filterer_fuel_type, ENT_QUOTES)); ?>"};

		jQuery(function() {
			setTimeout(function() {
				if(typeof(vehicle_registration_number_reload__RAND__) == 'function') vehicle_registration_number_reload__RAND__();
				if(typeof(register_number_reload__RAND__) == 'function') register_number_reload__RAND__();
				if(typeof(model_of_vehicle_reload__RAND__) == 'function') model_of_vehicle_reload__RAND__();
				if(typeof(colour_of_vehicle_reload__RAND__) == 'function') colour_of_vehicle_reload__RAND__();
				if(typeof(drivers_name_and_surname_reload__RAND__) == 'function') drivers_name_and_surname_reload__RAND__();
				if(typeof(fuel_type_reload__RAND__) == 'function') fuel_type_reload__RAND__();
			}, 50); /* we need to slightly delay client-side execution of the above code to allow AppGini.ajaxCache to work */
		});
		function vehicle_registration_number_reload__RAND__() {
		<?php if(($AllowUpdate || ($arrPerm['insert'] && !$selected_id)) && !$dvprint) { ?>

			$j("#vehicle_registration_number-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_vehicle_registration_number__RAND__.value, t: 'log_sheet', f: 'vehicle_registration_number' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="vehicle_registration_number"]').val(resp.results[0].id);
							$j('[id=vehicle_registration_number-container-readonly__RAND__]').html('<span class="match-text" id="vehicle_registration_number-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=gmt_fleet_register_view_parent]').hide(); } else { $j('.btn[id=gmt_fleet_register_view_parent]').show(); }


							if(typeof(vehicle_registration_number_update_autofills__RAND__) == 'function') vehicle_registration_number_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'log_sheet', f: 'vehicle_registration_number' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_vehicle_registration_number__RAND__.value = e.added.id;
				AppGini.current_vehicle_registration_number__RAND__.text = e.added.text;
				$j('[name="vehicle_registration_number"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=gmt_fleet_register_view_parent]').hide(); } else { $j('.btn[id=gmt_fleet_register_view_parent]').show(); }


				if(typeof(vehicle_registration_number_update_autofills__RAND__) == 'function') vehicle_registration_number_update_autofills__RAND__();
			});

			if(!$j("#vehicle_registration_number-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_vehicle_registration_number__RAND__.value, t: 'log_sheet', f: 'vehicle_registration_number' },
					success: function(resp) {
						$j('[name="vehicle_registration_number"]').val(resp.results[0].id);
						$j('[id=vehicle_registration_number-container-readonly__RAND__]').html('<span class="match-text" id="vehicle_registration_number-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=gmt_fleet_register_view_parent]').hide(); } else { $j('.btn[id=gmt_fleet_register_view_parent]').show(); }

						if(typeof(vehicle_registration_number_update_autofills__RAND__) == 'function') vehicle_registration_number_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_vehicle_registration_number__RAND__.value, t: 'log_sheet', f: 'vehicle_registration_number' },
				success: function(resp) {
					$j('[id=vehicle_registration_number-container__RAND__], [id=vehicle_registration_number-container-readonly__RAND__]').html('<span class="match-text" id="vehicle_registration_number-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=gmt_fleet_register_view_parent]').hide(); } else { $j('.btn[id=gmt_fleet_register_view_parent]').show(); }

					if(typeof(vehicle_registration_number_update_autofills__RAND__) == 'function') vehicle_registration_number_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function register_number_reload__RAND__() {
		<?php if(($AllowUpdate || ($arrPerm['insert'] && !$selected_id)) && !$dvprint) { ?>

			$j("#register_number-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_register_number__RAND__.value, t: 'log_sheet', f: 'register_number' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="register_number"]').val(resp.results[0].id);
							$j('[id=register_number-container-readonly__RAND__]').html('<span class="match-text" id="register_number-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=gmt_fleet_register_view_parent]').hide(); } else { $j('.btn[id=gmt_fleet_register_view_parent]').show(); }


							if(typeof(register_number_update_autofills__RAND__) == 'function') register_number_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'log_sheet', f: 'register_number' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_register_number__RAND__.value = e.added.id;
				AppGini.current_register_number__RAND__.text = e.added.text;
				$j('[name="register_number"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=gmt_fleet_register_view_parent]').hide(); } else { $j('.btn[id=gmt_fleet_register_view_parent]').show(); }


				if(typeof(register_number_update_autofills__RAND__) == 'function') register_number_update_autofills__RAND__();
			});

			if(!$j("#register_number-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_register_number__RAND__.value, t: 'log_sheet', f: 'register_number' },
					success: function(resp) {
						$j('[name="register_number"]').val(resp.results[0].id);
						$j('[id=register_number-container-readonly__RAND__]').html('<span class="match-text" id="register_number-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=gmt_fleet_register_view_parent]').hide(); } else { $j('.btn[id=gmt_fleet_register_view_parent]').show(); }

						if(typeof(register_number_update_autofills__RAND__) == 'function') register_number_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_register_number__RAND__.value, t: 'log_sheet', f: 'register_number' },
				success: function(resp) {
					$j('[id=register_number-container__RAND__], [id=register_number-container-readonly__RAND__]').html('<span class="match-text" id="register_number-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=gmt_fleet_register_view_parent]').hide(); } else { $j('.btn[id=gmt_fleet_register_view_parent]').show(); }

					if(typeof(register_number_update_autofills__RAND__) == 'function') register_number_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function model_of_vehicle_reload__RAND__() {
		<?php if(($AllowUpdate || ($arrPerm['insert'] && !$selected_id)) && !$dvprint) { ?>

			$j("#model_of_vehicle-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_model_of_vehicle__RAND__.value, t: 'log_sheet', f: 'model_of_vehicle' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="model_of_vehicle"]').val(resp.results[0].id);
							$j('[id=model_of_vehicle-container-readonly__RAND__]').html('<span class="match-text" id="model_of_vehicle-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=gmt_fleet_register_view_parent]').hide(); } else { $j('.btn[id=gmt_fleet_register_view_parent]').show(); }


							if(typeof(model_of_vehicle_update_autofills__RAND__) == 'function') model_of_vehicle_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'log_sheet', f: 'model_of_vehicle' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_model_of_vehicle__RAND__.value = e.added.id;
				AppGini.current_model_of_vehicle__RAND__.text = e.added.text;
				$j('[name="model_of_vehicle"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=gmt_fleet_register_view_parent]').hide(); } else { $j('.btn[id=gmt_fleet_register_view_parent]').show(); }


				if(typeof(model_of_vehicle_update_autofills__RAND__) == 'function') model_of_vehicle_update_autofills__RAND__();
			});

			if(!$j("#model_of_vehicle-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_model_of_vehicle__RAND__.value, t: 'log_sheet', f: 'model_of_vehicle' },
					success: function(resp) {
						$j('[name="model_of_vehicle"]').val(resp.results[0].id);
						$j('[id=model_of_vehicle-container-readonly__RAND__]').html('<span class="match-text" id="model_of_vehicle-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=gmt_fleet_register_view_parent]').hide(); } else { $j('.btn[id=gmt_fleet_register_view_parent]').show(); }

						if(typeof(model_of_vehicle_update_autofills__RAND__) == 'function') model_of_vehicle_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_model_of_vehicle__RAND__.value, t: 'log_sheet', f: 'model_of_vehicle' },
				success: function(resp) {
					$j('[id=model_of_vehicle-container__RAND__], [id=model_of_vehicle-container-readonly__RAND__]').html('<span class="match-text" id="model_of_vehicle-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=gmt_fleet_register_view_parent]').hide(); } else { $j('.btn[id=gmt_fleet_register_view_parent]').show(); }

					if(typeof(model_of_vehicle_update_autofills__RAND__) == 'function') model_of_vehicle_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function colour_of_vehicle_reload__RAND__() {
		<?php if(($AllowUpdate || ($arrPerm['insert'] && !$selected_id)) && !$dvprint) { ?>

			$j("#colour_of_vehicle-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_colour_of_vehicle__RAND__.value, t: 'log_sheet', f: 'colour_of_vehicle' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="colour_of_vehicle"]').val(resp.results[0].id);
							$j('[id=colour_of_vehicle-container-readonly__RAND__]').html('<span class="match-text" id="colour_of_vehicle-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=vehicle_colour_view_parent]').hide(); } else { $j('.btn[id=vehicle_colour_view_parent]').show(); }


							if(typeof(colour_of_vehicle_update_autofills__RAND__) == 'function') colour_of_vehicle_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'log_sheet', f: 'colour_of_vehicle' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_colour_of_vehicle__RAND__.value = e.added.id;
				AppGini.current_colour_of_vehicle__RAND__.text = e.added.text;
				$j('[name="colour_of_vehicle"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=vehicle_colour_view_parent]').hide(); } else { $j('.btn[id=vehicle_colour_view_parent]').show(); }


				if(typeof(colour_of_vehicle_update_autofills__RAND__) == 'function') colour_of_vehicle_update_autofills__RAND__();
			});

			if(!$j("#colour_of_vehicle-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_colour_of_vehicle__RAND__.value, t: 'log_sheet', f: 'colour_of_vehicle' },
					success: function(resp) {
						$j('[name="colour_of_vehicle"]').val(resp.results[0].id);
						$j('[id=colour_of_vehicle-container-readonly__RAND__]').html('<span class="match-text" id="colour_of_vehicle-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=vehicle_colour_view_parent]').hide(); } else { $j('.btn[id=vehicle_colour_view_parent]').show(); }

						if(typeof(colour_of_vehicle_update_autofills__RAND__) == 'function') colour_of_vehicle_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_colour_of_vehicle__RAND__.value, t: 'log_sheet', f: 'colour_of_vehicle' },
				success: function(resp) {
					$j('[id=colour_of_vehicle-container__RAND__], [id=colour_of_vehicle-container-readonly__RAND__]').html('<span class="match-text" id="colour_of_vehicle-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=vehicle_colour_view_parent]').hide(); } else { $j('.btn[id=vehicle_colour_view_parent]').show(); }

					if(typeof(colour_of_vehicle_update_autofills__RAND__) == 'function') colour_of_vehicle_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function drivers_name_and_surname_reload__RAND__() {
		<?php if(($AllowUpdate || ($arrPerm['insert'] && !$selected_id)) && !$dvprint) { ?>

			$j("#drivers_name_and_surname-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_drivers_name_and_surname__RAND__.value, t: 'log_sheet', f: 'drivers_name_and_surname' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="drivers_name_and_surname"]').val(resp.results[0].id);
							$j('[id=drivers_name_and_surname-container-readonly__RAND__]').html('<span class="match-text" id="drivers_name_and_surname-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=driver_view_parent]').hide(); } else { $j('.btn[id=driver_view_parent]').show(); }


							if(typeof(drivers_name_and_surname_update_autofills__RAND__) == 'function') drivers_name_and_surname_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'log_sheet', f: 'drivers_name_and_surname' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_drivers_name_and_surname__RAND__.value = e.added.id;
				AppGini.current_drivers_name_and_surname__RAND__.text = e.added.text;
				$j('[name="drivers_name_and_surname"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=driver_view_parent]').hide(); } else { $j('.btn[id=driver_view_parent]').show(); }


				if(typeof(drivers_name_and_surname_update_autofills__RAND__) == 'function') drivers_name_and_surname_update_autofills__RAND__();
			});

			if(!$j("#drivers_name_and_surname-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_drivers_name_and_surname__RAND__.value, t: 'log_sheet', f: 'drivers_name_and_surname' },
					success: function(resp) {
						$j('[name="drivers_name_and_surname"]').val(resp.results[0].id);
						$j('[id=drivers_name_and_surname-container-readonly__RAND__]').html('<span class="match-text" id="drivers_name_and_surname-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=driver_view_parent]').hide(); } else { $j('.btn[id=driver_view_parent]').show(); }

						if(typeof(drivers_name_and_surname_update_autofills__RAND__) == 'function') drivers_name_and_surname_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_drivers_name_and_surname__RAND__.value, t: 'log_sheet', f: 'drivers_name_and_surname' },
				success: function(resp) {
					$j('[id=drivers_name_and_surname-container__RAND__], [id=drivers_name_and_surname-container-readonly__RAND__]').html('<span class="match-text" id="drivers_name_and_surname-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=driver_view_parent]').hide(); } else { $j('.btn[id=driver_view_parent]').show(); }

					if(typeof(drivers_name_and_surname_update_autofills__RAND__) == 'function') drivers_name_and_surname_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function fuel_type_reload__RAND__() {
		<?php if(($AllowUpdate || ($arrPerm['insert'] && !$selected_id)) && !$dvprint) { ?>

			$j("#fuel_type-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_fuel_type__RAND__.value, t: 'log_sheet', f: 'fuel_type' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="fuel_type"]').val(resp.results[0].id);
							$j('[id=fuel_type-container-readonly__RAND__]').html('<span class="match-text" id="fuel_type-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=fuel_type_view_parent]').hide(); } else { $j('.btn[id=fuel_type_view_parent]').show(); }


							if(typeof(fuel_type_update_autofills__RAND__) == 'function') fuel_type_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'log_sheet', f: 'fuel_type' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_fuel_type__RAND__.value = e.added.id;
				AppGini.current_fuel_type__RAND__.text = e.added.text;
				$j('[name="fuel_type"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=fuel_type_view_parent]').hide(); } else { $j('.btn[id=fuel_type_view_parent]').show(); }


				if(typeof(fuel_type_update_autofills__RAND__) == 'function') fuel_type_update_autofills__RAND__();
			});

			if(!$j("#fuel_type-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_fuel_type__RAND__.value, t: 'log_sheet', f: 'fuel_type' },
					success: function(resp) {
						$j('[name="fuel_type"]').val(resp.results[0].id);
						$j('[id=fuel_type-container-readonly__RAND__]').html('<span class="match-text" id="fuel_type-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=fuel_type_view_parent]').hide(); } else { $j('.btn[id=fuel_type_view_parent]').show(); }

						if(typeof(fuel_type_update_autofills__RAND__) == 'function') fuel_type_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_fuel_type__RAND__.value, t: 'log_sheet', f: 'fuel_type' },
				success: function(resp) {
					$j('[id=fuel_type-container__RAND__], [id=fuel_type-container-readonly__RAND__]').html('<span class="match-text" id="fuel_type-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=fuel_type_view_parent]').hide(); } else { $j('.btn[id=fuel_type_view_parent]').show(); }

					if(typeof(fuel_type_update_autofills__RAND__) == 'function') fuel_type_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
	</script>
	<?php

	$lookups = str_replace('__RAND__', $rnd1, ob_get_clean());


	// code for template based detail view forms

	// open the detail view template
	if($dvprint) {
		$template_file = is_file("./{$TemplateDVP}") ? "./{$TemplateDVP}" : './templates/log_sheet_templateDVP.html';
		$templateCode = @file_get_contents($template_file);
	} else {
		$template_file = is_file("./{$TemplateDV}") ? "./{$TemplateDV}" : './templates/log_sheet_templateDV.html';
		$templateCode = @file_get_contents($template_file);
	}

	// process form title
	$templateCode = str_replace('<%%DETAIL_VIEW_TITLE%%>', 'Trip & Fuel Log Sheet Details:', $templateCode);
	$templateCode = str_replace('<%%RND1%%>', $rnd1, $templateCode);
	$templateCode = str_replace('<%%EMBEDDED%%>', (Request::val('Embedded') ? 'Embedded=1' : ''), $templateCode);
	// process buttons
	if($arrPerm['insert'] && !$selected_id) { // allow insert and no record selected?
		if(!$selected_id) $templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-success" id="insert" name="insert_x" value="1" onclick="return log_sheet_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save New'] . '</button>', $templateCode);
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="insert" name="insert_x" value="1" onclick="return log_sheet_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save As Copy'] . '</button>', $templateCode);
	} else {
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '', $templateCode);
	}

	// 'Back' button action
	if(Request::val('Embedded')) {
		$backAction = 'AppGini.closeParentModal(); return false;';
	} else {
		$backAction = '$j(\'form\').eq(0).attr(\'novalidate\', \'novalidate\'); document.myform.reset(); return true;';
	}

	if($selected_id) {
		if(!Request::val('Embedded')) $templateCode = str_replace('<%%DVPRINT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="dvprint" name="dvprint_x" value="1" onclick="$j(\'form\').eq(0).prop(\'novalidate\', true); document.myform.reset(); return true;" title="' . html_attr($Translation['Print Preview']) . '"><i class="glyphicon glyphicon-print"></i> ' . $Translation['Print Preview'] . '</button>', $templateCode);
		if($AllowUpdate) {
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '<button type="submit" class="btn btn-success btn-lg" id="update" name="update_x" value="1" onclick="return log_sheet_validateData();" title="' . html_attr($Translation['Save Changes']) . '"><i class="glyphicon glyphicon-ok"></i> ' . $Translation['Save Changes'] . '</button>', $templateCode);
		} else {
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		}
		if(($arrPerm['delete'] == 1 && $ownerMemberID == getLoggedMemberID()) || ($arrPerm['delete'] == 2 && $ownerGroupID == getLoggedGroupID()) || $arrPerm['delete'] == 3) { // allow delete?
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '<button type="submit" class="btn btn-danger" id="delete" name="delete_x" value="1" onclick="return confirm(\'' . $Translation['are you sure?'] . '\');" title="' . html_attr($Translation['Delete']) . '"><i class="glyphicon glyphicon-trash"></i> ' . $Translation['Delete'] . '</button>', $templateCode);
		} else {
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		}
		$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>', $templateCode);
	} else {
		$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);

		// if not in embedded mode and user has insert only but no view/update/delete,
		// remove 'back' button
		if(
			$arrPerm['insert']
			&& !$arrPerm['update'] && !$arrPerm['delete'] && !$arrPerm['view']
			&& !Request::val('Embedded')
		)
			$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '', $templateCode);
		elseif($separateDV)
			$templateCode = str_replace(
				'<%%DESELECT_BUTTON%%>', 
				'<button
					type="submit" 
					class="btn btn-default" 
					id="deselect" 
					name="deselect_x" 
					value="1" 
					onclick="' . $backAction . '" 
					title="' . html_attr($Translation['Back']) . '">
						<i class="glyphicon glyphicon-chevron-left"></i> ' .
						$Translation['Back'] .
				'</button>',
				$templateCode
			);
		else
			$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '', $templateCode);
	}

	// set records to read only if user can't insert new records and can't edit current record
	if(($selected_id && !$AllowUpdate) || (!$selected_id && !$AllowInsert)) {
		$jsReadOnly = '';
		$jsReadOnly .= "\tjQuery('#vehicle_registration_number').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#vehicle_registration_number_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#register_number').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#register_number_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#model_of_vehicle').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#model_of_vehicle_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#colour_of_vehicle').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#colour_of_vehicle_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#renewal_of_license').prop('readonly', true);\n";
		$jsReadOnly .= "\tjQuery('#renewal_of_licenseDay, #renewal_of_licenseMonth, #renewal_of_licenseYear').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#month').prop('readonly', true);\n";
		$jsReadOnly .= "\tjQuery('#monthDay, #monthMonth, #monthYear').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#drivers_name_and_surname').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#drivers_name_and_surname_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#opening_km').replaceWith('<div class=\"form-control-static\" id=\"opening_km\">' + (jQuery('#opening_km').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#total_trip_distance').replaceWith('<div class=\"form-control-static\" id=\"total_trip_distance\">' + (jQuery('#total_trip_distance').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#closing_km').replaceWith('<div class=\"form-control-static\" id=\"closing_km\">' + (jQuery('#closing_km').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#fuel_type').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#fuel_type_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#fuel_tank_capacity').replaceWith('<div class=\"form-control-static\" id=\"fuel_tank_capacity\">' + (jQuery('#fuel_tank_capacity').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#vendor').replaceWith('<div class=\"form-control-static\" id=\"vendor\">' + (jQuery('#vendor').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#fuel_cost_litre').replaceWith('<div class=\"form-control-static\" id=\"fuel_cost_litre\">' + (jQuery('#fuel_cost_litre').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#refuel_quantity_1').replaceWith('<div class=\"form-control-static\" id=\"refuel_quantity_1\">' + (jQuery('#refuel_quantity_1').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#refuel_first_time_date').prop('readonly', true);\n";
		$jsReadOnly .= "\tjQuery('#refuel_first_time_dateDay, #refuel_first_time_dateMonth, #refuel_first_time_dateYear').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#trip_distance_refuel_1').replaceWith('<div class=\"form-control-static\" id=\"trip_distance_refuel_1\">' + (jQuery('#trip_distance_refuel_1').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#refuel_quantity_2').replaceWith('<div class=\"form-control-static\" id=\"refuel_quantity_2\">' + (jQuery('#refuel_quantity_2').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#refuel_second_time_date').prop('readonly', true);\n";
		$jsReadOnly .= "\tjQuery('#refuel_second_time_dateDay, #refuel_second_time_dateMonth, #refuel_second_time_dateYear').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#trip_distance_refuel_2').replaceWith('<div class=\"form-control-static\" id=\"trip_distance_refuel_2\">' + (jQuery('#trip_distance_refuel_2').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#refuel_quantity_3').replaceWith('<div class=\"form-control-static\" id=\"refuel_quantity_3\">' + (jQuery('#refuel_quantity_3').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#refuel_third_time_date').prop('readonly', true);\n";
		$jsReadOnly .= "\tjQuery('#refuel_third_time_dateDay, #refuel_third_time_dateMonth, #refuel_third_time_dateYear').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#trip_distance_refuel_3').replaceWith('<div class=\"form-control-static\" id=\"trip_distance_refuel_3\">' + (jQuery('#trip_distance_refuel_3').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#refuel_quantity_4').replaceWith('<div class=\"form-control-static\" id=\"refuel_quantity_4\">' + (jQuery('#refuel_quantity_4').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#refuel_fourth_time_date').prop('readonly', true);\n";
		$jsReadOnly .= "\tjQuery('#refuel_fourth_time_dateDay, #refuel_fourth_time_dateMonth, #refuel_fourth_time_dateYear').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#trip_distance_refuel_4').replaceWith('<div class=\"form-control-static\" id=\"trip_distance_refuel_4\">' + (jQuery('#trip_distance_refuel_4').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#refuel_quantity_5').replaceWith('<div class=\"form-control-static\" id=\"refuel_quantity_5\">' + (jQuery('#refuel_quantity_5').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#refuel_fifth_time_date').prop('readonly', true);\n";
		$jsReadOnly .= "\tjQuery('#refuel_fifth_time_dateDay, #refuel_fifth_time_dateMonth, #refuel_fifth_time_dateYear').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#trip_distance_refuel_5').replaceWith('<div class=\"form-control-static\" id=\"trip_distance_refuel_5\">' + (jQuery('#trip_distance_refuel_5').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#refuel_quantity_6').replaceWith('<div class=\"form-control-static\" id=\"refuel_quantity_6\">' + (jQuery('#refuel_quantity_6').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#trip_distance_refuel_6').replaceWith('<div class=\"form-control-static\" id=\"trip_distance_refuel_6\">' + (jQuery('#trip_distance_refuel_6').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#refuel_sixth_time_date').prop('readonly', true);\n";
		$jsReadOnly .= "\tjQuery('#refuel_sixth_time_dateDay, #refuel_sixth_time_dateMonth, #refuel_sixth_time_dateYear').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#times_refuel_current_month').replaceWith('<div class=\"form-control-static\" id=\"times_refuel_current_month\">' + (jQuery('#times_refuel_current_month').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#total_fuel_quantity').replaceWith('<div class=\"form-control-static\" id=\"total_fuel_quantity\">' + (jQuery('#total_fuel_quantity').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#fuel_consumption').replaceWith('<div class=\"form-control-static\" id=\"fuel_consumption\">' + (jQuery('#fuel_consumption').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#fuel_total_cost').replaceWith('<div class=\"form-control-static\" id=\"fuel_total_cost\">' + (jQuery('#fuel_total_cost').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('input[name=payment_e_fuel_card]').parent().html('<div class=\"form-control-static\">' + jQuery('input[name=payment_e_fuel_card]:checked').next().text() + '</div>')\n";
		$jsReadOnly .= "\tjQuery('#captured_by').replaceWith('<div class=\"form-control-static\" id=\"captured_by\">' + (jQuery('#captured_by').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#date_captured').prop('readonly', true);\n";
		$jsReadOnly .= "\tjQuery('#date_capturedDay, #date_capturedMonth, #date_capturedYear').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('input[name=complete_fill_up]').parent().html('<div class=\"form-control-static\">' + jQuery('input[name=complete_fill_up]:checked').next().text() + '</div>')\n";
		$jsReadOnly .= "\tjQuery('.select2-container').hide();\n";

		$noUploads = true;
	} elseif(($AllowInsert && !$selected_id) || ($AllowUpdate && $selected_id)) {
		$jsEditable = "\tjQuery('form').eq(0).data('already_changed', true);"; // temporarily disable form change handler
		$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', false);"; // re-enable form change handler
	}

	// process combos
	$templateCode = str_replace('<%%COMBO(vehicle_registration_number)%%>', $combo_vehicle_registration_number->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(vehicle_registration_number)%%>', $combo_vehicle_registration_number->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(vehicle_registration_number)%%>', urlencode($combo_vehicle_registration_number->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(register_number)%%>', $combo_register_number->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(register_number)%%>', $combo_register_number->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(register_number)%%>', urlencode($combo_register_number->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(model_of_vehicle)%%>', $combo_model_of_vehicle->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(model_of_vehicle)%%>', $combo_model_of_vehicle->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(model_of_vehicle)%%>', urlencode($combo_model_of_vehicle->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(colour_of_vehicle)%%>', $combo_colour_of_vehicle->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(colour_of_vehicle)%%>', $combo_colour_of_vehicle->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(colour_of_vehicle)%%>', urlencode($combo_colour_of_vehicle->MatchText), $templateCode);
	$templateCode = str_replace(
		'<%%COMBO(renewal_of_license)%%>', 
		($selected_id && !$arrPerm['edit'] && ($noSaveAsCopy || !$arrPerm['insert']) ? 
			'<div class="form-control-static">' . $combo_renewal_of_license->GetHTML(true) . '</div>' : 
			$combo_renewal_of_license->GetHTML()
		), $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(renewal_of_license)%%>', $combo_renewal_of_license->GetHTML(true), $templateCode);
	$templateCode = str_replace(
		'<%%COMBO(month)%%>', 
		($selected_id && !$arrPerm['edit'] && ($noSaveAsCopy || !$arrPerm['insert']) ? 
			'<div class="form-control-static">' . $combo_month->GetHTML(true) . '</div>' : 
			$combo_month->GetHTML()
		), $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(month)%%>', $combo_month->GetHTML(true), $templateCode);
	$templateCode = str_replace('<%%COMBO(drivers_name_and_surname)%%>', $combo_drivers_name_and_surname->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(drivers_name_and_surname)%%>', $combo_drivers_name_and_surname->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(drivers_name_and_surname)%%>', urlencode($combo_drivers_name_and_surname->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(fuel_type)%%>', $combo_fuel_type->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(fuel_type)%%>', $combo_fuel_type->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(fuel_type)%%>', urlencode($combo_fuel_type->MatchText), $templateCode);
	$templateCode = str_replace(
		'<%%COMBO(refuel_first_time_date)%%>', 
		($selected_id && !$arrPerm['edit'] && ($noSaveAsCopy || !$arrPerm['insert']) ? 
			'<div class="form-control-static">' . $combo_refuel_first_time_date->GetHTML(true) . '</div>' : 
			$combo_refuel_first_time_date->GetHTML()
		), $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(refuel_first_time_date)%%>', $combo_refuel_first_time_date->GetHTML(true), $templateCode);
	$templateCode = str_replace(
		'<%%COMBO(refuel_second_time_date)%%>', 
		($selected_id && !$arrPerm['edit'] && ($noSaveAsCopy || !$arrPerm['insert']) ? 
			'<div class="form-control-static">' . $combo_refuel_second_time_date->GetHTML(true) . '</div>' : 
			$combo_refuel_second_time_date->GetHTML()
		), $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(refuel_second_time_date)%%>', $combo_refuel_second_time_date->GetHTML(true), $templateCode);
	$templateCode = str_replace(
		'<%%COMBO(refuel_third_time_date)%%>', 
		($selected_id && !$arrPerm['edit'] && ($noSaveAsCopy || !$arrPerm['insert']) ? 
			'<div class="form-control-static">' . $combo_refuel_third_time_date->GetHTML(true) . '</div>' : 
			$combo_refuel_third_time_date->GetHTML()
		), $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(refuel_third_time_date)%%>', $combo_refuel_third_time_date->GetHTML(true), $templateCode);
	$templateCode = str_replace(
		'<%%COMBO(refuel_fourth_time_date)%%>', 
		($selected_id && !$arrPerm['edit'] && ($noSaveAsCopy || !$arrPerm['insert']) ? 
			'<div class="form-control-static">' . $combo_refuel_fourth_time_date->GetHTML(true) . '</div>' : 
			$combo_refuel_fourth_time_date->GetHTML()
		), $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(refuel_fourth_time_date)%%>', $combo_refuel_fourth_time_date->GetHTML(true), $templateCode);
	$templateCode = str_replace(
		'<%%COMBO(refuel_fifth_time_date)%%>', 
		($selected_id && !$arrPerm['edit'] && ($noSaveAsCopy || !$arrPerm['insert']) ? 
			'<div class="form-control-static">' . $combo_refuel_fifth_time_date->GetHTML(true) . '</div>' : 
			$combo_refuel_fifth_time_date->GetHTML()
		), $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(refuel_fifth_time_date)%%>', $combo_refuel_fifth_time_date->GetHTML(true), $templateCode);
	$templateCode = str_replace(
		'<%%COMBO(refuel_sixth_time_date)%%>', 
		($selected_id && !$arrPerm['edit'] && ($noSaveAsCopy || !$arrPerm['insert']) ? 
			'<div class="form-control-static">' . $combo_refuel_sixth_time_date->GetHTML(true) . '</div>' : 
			$combo_refuel_sixth_time_date->GetHTML()
		), $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(refuel_sixth_time_date)%%>', $combo_refuel_sixth_time_date->GetHTML(true), $templateCode);
	$templateCode = str_replace('<%%COMBO(payment_e_fuel_card)%%>', $combo_payment_e_fuel_card->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(payment_e_fuel_card)%%>', $combo_payment_e_fuel_card->SelectedData, $templateCode);
	$templateCode = str_replace(
		'<%%COMBO(date_captured)%%>', 
		($selected_id && !$arrPerm['edit'] && ($noSaveAsCopy || !$arrPerm['insert']) ? 
			'<div class="form-control-static">' . $combo_date_captured->GetHTML(true) . '</div>' : 
			$combo_date_captured->GetHTML()
		), $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(date_captured)%%>', $combo_date_captured->GetHTML(true), $templateCode);
	$templateCode = str_replace('<%%COMBO(complete_fill_up)%%>', $combo_complete_fill_up->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(complete_fill_up)%%>', $combo_complete_fill_up->SelectedData, $templateCode);

	/* lookup fields array: 'lookup field name' => ['parent table name', 'lookup field caption'] */
	$lookup_fields = ['vehicle_registration_number' => ['gmt_fleet_register', 'Registration Number:'], 'register_number' => ['gmt_fleet_register', 'Register Number:'], 'model_of_vehicle' => ['gmt_fleet_register', 'Model of Vehicle:'], 'colour_of_vehicle' => ['vehicle_colour', 'Colour of Vehicle:'], 'drivers_name_and_surname' => ['driver', 'Driver\'s Surname:'], 'fuel_type' => ['fuel_type', 'Fuel Type:'], ];
	foreach($lookup_fields as $luf => $ptfc) {
		$pt_perm = getTablePermissions($ptfc[0]);

		// process foreign key links
		if($pt_perm['view'] || $pt_perm['edit']) {
			$templateCode = str_replace("<%%PLINK({$luf})%%>", '<button type="button" class="btn btn-default view_parent" id="' . $ptfc[0] . '_view_parent" title="' . html_attr($Translation['View'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-eye-open"></i></button>', $templateCode);
		}

		// if user has insert permission to parent table of a lookup field, put an add new button
		if($pt_perm['insert'] /* && !Request::val('Embedded')*/) {
			$templateCode = str_replace("<%%ADDNEW({$ptfc[0]})%%>", '<button type="button" class="btn btn-default add_new_parent" id="' . $ptfc[0] . '_add_new" title="' . html_attr($Translation['Add New'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-plus text-success"></i></button>', $templateCode);
		}
	}

	// process images
	$templateCode = str_replace('<%%UPLOADFILE(fuel_log_sheet_id)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(vehicle_registration_number)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(register_number)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(model_of_vehicle)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(colour_of_vehicle)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(renewal_of_license)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(month)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(drivers_name_and_surname)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(opening_km)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(total_trip_distance)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(closing_km)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(fuel_type)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(fuel_tank_capacity)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(vendor)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(fuel_cost_litre)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(refuel_quantity_1)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(refuel_first_time_date)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(trip_distance_refuel_1)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(refuel_quantity_2)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(refuel_second_time_date)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(trip_distance_refuel_2)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(refuel_quantity_3)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(refuel_third_time_date)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(trip_distance_refuel_3)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(refuel_quantity_4)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(refuel_fourth_time_date)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(trip_distance_refuel_4)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(refuel_quantity_5)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(refuel_fifth_time_date)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(trip_distance_refuel_5)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(refuel_quantity_6)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(trip_distance_refuel_6)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(refuel_sixth_time_date)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(times_refuel_current_month)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(total_fuel_quantity)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(fuel_consumption)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(fuel_total_cost)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(payment_e_fuel_card)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(captured_by)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(comments)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(date_captured)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(complete_fill_up)%%>', '', $templateCode);

	// process values
	if($selected_id) {
		if( $dvprint) $templateCode = str_replace('<%%VALUE(fuel_log_sheet_id)%%>', safe_html($urow['fuel_log_sheet_id']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(fuel_log_sheet_id)%%>', html_attr($row['fuel_log_sheet_id']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(fuel_log_sheet_id)%%>', urlencode($urow['fuel_log_sheet_id']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(vehicle_registration_number)%%>', safe_html($urow['vehicle_registration_number']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(vehicle_registration_number)%%>', html_attr($row['vehicle_registration_number']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(vehicle_registration_number)%%>', urlencode($urow['vehicle_registration_number']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(register_number)%%>', safe_html($urow['register_number']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(register_number)%%>', html_attr($row['register_number']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(register_number)%%>', urlencode($urow['register_number']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(model_of_vehicle)%%>', safe_html($urow['model_of_vehicle']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(model_of_vehicle)%%>', html_attr($row['model_of_vehicle']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(model_of_vehicle)%%>', urlencode($urow['model_of_vehicle']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(colour_of_vehicle)%%>', safe_html($urow['colour_of_vehicle']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(colour_of_vehicle)%%>', html_attr($row['colour_of_vehicle']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(colour_of_vehicle)%%>', urlencode($urow['colour_of_vehicle']), $templateCode);
		$templateCode = str_replace('<%%VALUE(renewal_of_license)%%>', app_datetime($row['renewal_of_license']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(renewal_of_license)%%>', urlencode(app_datetime($urow['renewal_of_license'])), $templateCode);
		$templateCode = str_replace('<%%VALUE(month)%%>', app_datetime($row['month']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(month)%%>', urlencode(app_datetime($urow['month'])), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(drivers_name_and_surname)%%>', safe_html($urow['drivers_name_and_surname']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(drivers_name_and_surname)%%>', html_attr($row['drivers_name_and_surname']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(drivers_name_and_surname)%%>', urlencode($urow['drivers_name_and_surname']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(opening_km)%%>', safe_html($urow['opening_km']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(opening_km)%%>', html_attr($row['opening_km']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(opening_km)%%>', urlencode($urow['opening_km']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(total_trip_distance)%%>', safe_html($urow['total_trip_distance']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(total_trip_distance)%%>', html_attr($row['total_trip_distance']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(total_trip_distance)%%>', urlencode($urow['total_trip_distance']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(closing_km)%%>', safe_html($urow['closing_km']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(closing_km)%%>', html_attr($row['closing_km']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(closing_km)%%>', urlencode($urow['closing_km']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(fuel_type)%%>', safe_html($urow['fuel_type']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(fuel_type)%%>', html_attr($row['fuel_type']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(fuel_type)%%>', urlencode($urow['fuel_type']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(fuel_tank_capacity)%%>', safe_html($urow['fuel_tank_capacity']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(fuel_tank_capacity)%%>', html_attr($row['fuel_tank_capacity']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(fuel_tank_capacity)%%>', urlencode($urow['fuel_tank_capacity']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(vendor)%%>', safe_html($urow['vendor']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(vendor)%%>', html_attr($row['vendor']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(vendor)%%>', urlencode($urow['vendor']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(fuel_cost_litre)%%>', safe_html($urow['fuel_cost_litre']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(fuel_cost_litre)%%>', html_attr($row['fuel_cost_litre']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(fuel_cost_litre)%%>', urlencode($urow['fuel_cost_litre']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(refuel_quantity_1)%%>', safe_html($urow['refuel_quantity_1']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(refuel_quantity_1)%%>', html_attr($row['refuel_quantity_1']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(refuel_quantity_1)%%>', urlencode($urow['refuel_quantity_1']), $templateCode);
		$templateCode = str_replace('<%%VALUE(refuel_first_time_date)%%>', app_datetime($row['refuel_first_time_date']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(refuel_first_time_date)%%>', urlencode(app_datetime($urow['refuel_first_time_date'])), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(trip_distance_refuel_1)%%>', safe_html($urow['trip_distance_refuel_1']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(trip_distance_refuel_1)%%>', html_attr($row['trip_distance_refuel_1']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(trip_distance_refuel_1)%%>', urlencode($urow['trip_distance_refuel_1']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(refuel_quantity_2)%%>', safe_html($urow['refuel_quantity_2']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(refuel_quantity_2)%%>', html_attr($row['refuel_quantity_2']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(refuel_quantity_2)%%>', urlencode($urow['refuel_quantity_2']), $templateCode);
		$templateCode = str_replace('<%%VALUE(refuel_second_time_date)%%>', app_datetime($row['refuel_second_time_date']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(refuel_second_time_date)%%>', urlencode(app_datetime($urow['refuel_second_time_date'])), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(trip_distance_refuel_2)%%>', safe_html($urow['trip_distance_refuel_2']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(trip_distance_refuel_2)%%>', html_attr($row['trip_distance_refuel_2']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(trip_distance_refuel_2)%%>', urlencode($urow['trip_distance_refuel_2']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(refuel_quantity_3)%%>', safe_html($urow['refuel_quantity_3']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(refuel_quantity_3)%%>', html_attr($row['refuel_quantity_3']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(refuel_quantity_3)%%>', urlencode($urow['refuel_quantity_3']), $templateCode);
		$templateCode = str_replace('<%%VALUE(refuel_third_time_date)%%>', app_datetime($row['refuel_third_time_date']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(refuel_third_time_date)%%>', urlencode(app_datetime($urow['refuel_third_time_date'])), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(trip_distance_refuel_3)%%>', safe_html($urow['trip_distance_refuel_3']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(trip_distance_refuel_3)%%>', html_attr($row['trip_distance_refuel_3']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(trip_distance_refuel_3)%%>', urlencode($urow['trip_distance_refuel_3']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(refuel_quantity_4)%%>', safe_html($urow['refuel_quantity_4']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(refuel_quantity_4)%%>', html_attr($row['refuel_quantity_4']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(refuel_quantity_4)%%>', urlencode($urow['refuel_quantity_4']), $templateCode);
		$templateCode = str_replace('<%%VALUE(refuel_fourth_time_date)%%>', app_datetime($row['refuel_fourth_time_date']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(refuel_fourth_time_date)%%>', urlencode(app_datetime($urow['refuel_fourth_time_date'])), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(trip_distance_refuel_4)%%>', safe_html($urow['trip_distance_refuel_4']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(trip_distance_refuel_4)%%>', html_attr($row['trip_distance_refuel_4']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(trip_distance_refuel_4)%%>', urlencode($urow['trip_distance_refuel_4']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(refuel_quantity_5)%%>', safe_html($urow['refuel_quantity_5']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(refuel_quantity_5)%%>', html_attr($row['refuel_quantity_5']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(refuel_quantity_5)%%>', urlencode($urow['refuel_quantity_5']), $templateCode);
		$templateCode = str_replace('<%%VALUE(refuel_fifth_time_date)%%>', app_datetime($row['refuel_fifth_time_date']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(refuel_fifth_time_date)%%>', urlencode(app_datetime($urow['refuel_fifth_time_date'])), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(trip_distance_refuel_5)%%>', safe_html($urow['trip_distance_refuel_5']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(trip_distance_refuel_5)%%>', html_attr($row['trip_distance_refuel_5']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(trip_distance_refuel_5)%%>', urlencode($urow['trip_distance_refuel_5']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(refuel_quantity_6)%%>', safe_html($urow['refuel_quantity_6']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(refuel_quantity_6)%%>', html_attr($row['refuel_quantity_6']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(refuel_quantity_6)%%>', urlencode($urow['refuel_quantity_6']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(trip_distance_refuel_6)%%>', safe_html($urow['trip_distance_refuel_6']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(trip_distance_refuel_6)%%>', html_attr($row['trip_distance_refuel_6']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(trip_distance_refuel_6)%%>', urlencode($urow['trip_distance_refuel_6']), $templateCode);
		$templateCode = str_replace('<%%VALUE(refuel_sixth_time_date)%%>', app_datetime($row['refuel_sixth_time_date']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(refuel_sixth_time_date)%%>', urlencode(app_datetime($urow['refuel_sixth_time_date'])), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(times_refuel_current_month)%%>', safe_html($urow['times_refuel_current_month']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(times_refuel_current_month)%%>', html_attr($row['times_refuel_current_month']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(times_refuel_current_month)%%>', urlencode($urow['times_refuel_current_month']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(total_fuel_quantity)%%>', safe_html($urow['total_fuel_quantity']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(total_fuel_quantity)%%>', html_attr($row['total_fuel_quantity']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(total_fuel_quantity)%%>', urlencode($urow['total_fuel_quantity']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(fuel_consumption)%%>', safe_html($urow['fuel_consumption']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(fuel_consumption)%%>', html_attr($row['fuel_consumption']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(fuel_consumption)%%>', urlencode($urow['fuel_consumption']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(fuel_total_cost)%%>', safe_html($urow['fuel_total_cost']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(fuel_total_cost)%%>', html_attr($row['fuel_total_cost']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(fuel_total_cost)%%>', urlencode($urow['fuel_total_cost']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(payment_e_fuel_card)%%>', safe_html($urow['payment_e_fuel_card']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(payment_e_fuel_card)%%>', html_attr($row['payment_e_fuel_card']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(payment_e_fuel_card)%%>', urlencode($urow['payment_e_fuel_card']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(captured_by)%%>', safe_html($urow['captured_by']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(captured_by)%%>', html_attr($row['captured_by']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(captured_by)%%>', urlencode($urow['captured_by']), $templateCode);
		if($AllowUpdate || $AllowInsert) {
			$templateCode = str_replace('<%%HTMLAREA(comments)%%>', '<textarea name="comments" id="comments" rows="5">' . safe_html(htmlspecialchars_decode($row['comments'])) . '</textarea>', $templateCode);
		} else {
			$templateCode = str_replace('<%%HTMLAREA(comments)%%>', '<div id="comments" class="form-control-static">' . $row['comments'] . '</div>', $templateCode);
		}
		$templateCode = str_replace('<%%VALUE(comments)%%>', nl2br($row['comments']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(comments)%%>', urlencode($urow['comments']), $templateCode);
		$templateCode = str_replace('<%%VALUE(date_captured)%%>', app_datetime($row['date_captured']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(date_captured)%%>', urlencode(app_datetime($urow['date_captured'])), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(complete_fill_up)%%>', safe_html($urow['complete_fill_up']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(complete_fill_up)%%>', html_attr($row['complete_fill_up']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(complete_fill_up)%%>', urlencode($urow['complete_fill_up']), $templateCode);
	} else {
		$templateCode = str_replace('<%%VALUE(fuel_log_sheet_id)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(fuel_log_sheet_id)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(vehicle_registration_number)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(vehicle_registration_number)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(register_number)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(register_number)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(model_of_vehicle)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(model_of_vehicle)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(colour_of_vehicle)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(colour_of_vehicle)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(renewal_of_license)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(renewal_of_license)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(month)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(month)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(drivers_name_and_surname)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(drivers_name_and_surname)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(opening_km)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(opening_km)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(total_trip_distance)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(total_trip_distance)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(closing_km)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(closing_km)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(fuel_type)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(fuel_type)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(fuel_tank_capacity)%%>', '0.00', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(fuel_tank_capacity)%%>', urlencode('0.00'), $templateCode);
		$templateCode = str_replace('<%%VALUE(vendor)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(vendor)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(fuel_cost_litre)%%>', '0.00', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(fuel_cost_litre)%%>', urlencode('0.00'), $templateCode);
		$templateCode = str_replace('<%%VALUE(refuel_quantity_1)%%>', '0.00', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(refuel_quantity_1)%%>', urlencode('0.00'), $templateCode);
		$templateCode = str_replace('<%%VALUE(refuel_first_time_date)%%>', '1', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(refuel_first_time_date)%%>', urlencode('1'), $templateCode);
		$templateCode = str_replace('<%%VALUE(trip_distance_refuel_1)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(trip_distance_refuel_1)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(refuel_quantity_2)%%>', '0.00', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(refuel_quantity_2)%%>', urlencode('0.00'), $templateCode);
		$templateCode = str_replace('<%%VALUE(refuel_second_time_date)%%>', '1', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(refuel_second_time_date)%%>', urlencode('1'), $templateCode);
		$templateCode = str_replace('<%%VALUE(trip_distance_refuel_2)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(trip_distance_refuel_2)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(refuel_quantity_3)%%>', '0.00', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(refuel_quantity_3)%%>', urlencode('0.00'), $templateCode);
		$templateCode = str_replace('<%%VALUE(refuel_third_time_date)%%>', '1', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(refuel_third_time_date)%%>', urlencode('1'), $templateCode);
		$templateCode = str_replace('<%%VALUE(trip_distance_refuel_3)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(trip_distance_refuel_3)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(refuel_quantity_4)%%>', '0.00', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(refuel_quantity_4)%%>', urlencode('0.00'), $templateCode);
		$templateCode = str_replace('<%%VALUE(refuel_fourth_time_date)%%>', '1', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(refuel_fourth_time_date)%%>', urlencode('1'), $templateCode);
		$templateCode = str_replace('<%%VALUE(trip_distance_refuel_4)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(trip_distance_refuel_4)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(refuel_quantity_5)%%>', '0.00', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(refuel_quantity_5)%%>', urlencode('0.00'), $templateCode);
		$templateCode = str_replace('<%%VALUE(refuel_fifth_time_date)%%>', '1', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(refuel_fifth_time_date)%%>', urlencode('1'), $templateCode);
		$templateCode = str_replace('<%%VALUE(trip_distance_refuel_5)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(trip_distance_refuel_5)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(refuel_quantity_6)%%>', '0.00', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(refuel_quantity_6)%%>', urlencode('0.00'), $templateCode);
		$templateCode = str_replace('<%%VALUE(trip_distance_refuel_6)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(trip_distance_refuel_6)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(refuel_sixth_time_date)%%>', '1', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(refuel_sixth_time_date)%%>', urlencode('1'), $templateCode);
		$templateCode = str_replace('<%%VALUE(times_refuel_current_month)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(times_refuel_current_month)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(total_fuel_quantity)%%>', '0.00', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(total_fuel_quantity)%%>', urlencode('0.00'), $templateCode);
		$templateCode = str_replace('<%%VALUE(fuel_consumption)%%>', '0.00', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(fuel_consumption)%%>', urlencode('0.00'), $templateCode);
		$templateCode = str_replace('<%%VALUE(fuel_total_cost)%%>', '0.00', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(fuel_total_cost)%%>', urlencode('0.00'), $templateCode);
		$templateCode = str_replace('<%%VALUE(payment_e_fuel_card)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(payment_e_fuel_card)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(captured_by)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(captured_by)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%HTMLAREA(comments)%%>', '<textarea name="comments" id="comments" rows="5"></textarea>', $templateCode);
		$templateCode = str_replace('<%%VALUE(date_captured)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(date_captured)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(complete_fill_up)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(complete_fill_up)%%>', urlencode(''), $templateCode);
	}

	// process translations
	$templateCode = parseTemplate($templateCode);

	// clear scrap
	$templateCode = str_replace('<%%', '<!-- ', $templateCode);
	$templateCode = str_replace('%%>', ' -->', $templateCode);

	// hide links to inaccessible tables
	if(Request::val('dvprint_x') == '') {
		$templateCode .= "\n\n<script>\$j(function() {\n";
		$arrTables = getTableList();
		foreach($arrTables as $name => $caption) {
			$templateCode .= "\t\$j('#{$name}_link').removeClass('hidden');\n";
			$templateCode .= "\t\$j('#xs_{$name}_link').removeClass('hidden');\n";
		}

		$templateCode .= $jsReadOnly;
		$templateCode .= $jsEditable;

		if(!$selected_id) {
		}

		$templateCode.="\n});</script>\n";
	}

	// ajaxed auto-fill fields
	$templateCode .= '<script>';
	$templateCode .= '$j(function() {';

	$templateCode .= "\tvehicle_registration_number_update_autofills$rnd1 = function() {\n";
	$templateCode .= "\t\t\$j.ajax({\n";
	if($dvprint) {
		$templateCode .= "\t\t\turl: 'log_sheet_autofill.php?rnd1=$rnd1&mfk=vehicle_registration_number&id=' + encodeURIComponent('".addslashes($row['vehicle_registration_number'])."'),\n";
		$templateCode .= "\t\t\tcontentType: 'application/x-www-form-urlencoded; charset=" . datalist_db_encoding . "',\n";
		$templateCode .= "\t\t\ttype: 'GET'\n";
	} else {
		$templateCode .= "\t\t\turl: 'log_sheet_autofill.php?rnd1=$rnd1&mfk=vehicle_registration_number&id=' + encodeURIComponent(AppGini.current_vehicle_registration_number{$rnd1}.value),\n";
		$templateCode .= "\t\t\tcontentType: 'application/x-www-form-urlencoded; charset=" . datalist_db_encoding . "',\n";
		$templateCode .= "\t\t\ttype: 'GET',\n";
		$templateCode .= "\t\t\tbeforeSend: function() { \$j('#vehicle_registration_number$rnd1').prop('disabled', true); },\n";
		$templateCode .= "\t\t\tcomplete: function() { " . (($arrPerm['insert'] || (($arrPerm['edit'] == 1 && $ownerMemberID == getLoggedMemberID()) || ($arrPerm['edit'] == 2 && $ownerGroupID == getLoggedGroupID()) || $arrPerm['edit'] == 3)) ? "\$j('#vehicle_registration_number$rnd1').prop('disabled', false); " : "\$j('#vehicle_registration_number$rnd1').prop('disabled', true); ")." \$j(window).resize(); }\n";
	}
	$templateCode .= "\t\t});\n";
	$templateCode .= "\t};\n";
	if(!$dvprint) $templateCode .= "\tif(\$j('#vehicle_registration_number_caption').length) \$j('#vehicle_registration_number_caption').click(function() { vehicle_registration_number_update_autofills$rnd1(); });\n";

	$templateCode .= "\tdrivers_name_and_surname_update_autofills$rnd1 = function() {\n";
	$templateCode .= "\t\t\$j.ajax({\n";
	if($dvprint) {
		$templateCode .= "\t\t\turl: 'log_sheet_autofill.php?rnd1=$rnd1&mfk=drivers_name_and_surname&id=' + encodeURIComponent('".addslashes($row['drivers_name_and_surname'])."'),\n";
		$templateCode .= "\t\t\tcontentType: 'application/x-www-form-urlencoded; charset=" . datalist_db_encoding . "',\n";
		$templateCode .= "\t\t\ttype: 'GET'\n";
	} else {
		$templateCode .= "\t\t\turl: 'log_sheet_autofill.php?rnd1=$rnd1&mfk=drivers_name_and_surname&id=' + encodeURIComponent(AppGini.current_drivers_name_and_surname{$rnd1}.value),\n";
		$templateCode .= "\t\t\tcontentType: 'application/x-www-form-urlencoded; charset=" . datalist_db_encoding . "',\n";
		$templateCode .= "\t\t\ttype: 'GET',\n";
		$templateCode .= "\t\t\tbeforeSend: function() { \$j('#drivers_name_and_surname$rnd1').prop('disabled', true); },\n";
		$templateCode .= "\t\t\tcomplete: function() { " . (($arrPerm['insert'] || (($arrPerm['edit'] == 1 && $ownerMemberID == getLoggedMemberID()) || ($arrPerm['edit'] == 2 && $ownerGroupID == getLoggedGroupID()) || $arrPerm['edit'] == 3)) ? "\$j('#drivers_name_and_surname$rnd1').prop('disabled', false); " : "\$j('#drivers_name_and_surname$rnd1').prop('disabled', true); ")." \$j(window).resize(); }\n";
	}
	$templateCode .= "\t\t});\n";
	$templateCode .= "\t};\n";
	if(!$dvprint) $templateCode .= "\tif(\$j('#drivers_name_and_surname_caption').length) \$j('#drivers_name_and_surname_caption').click(function() { drivers_name_and_surname_update_autofills$rnd1(); });\n";


	$templateCode.="});";
	$templateCode.="</script>";
	$templateCode .= $lookups;

	// handle enforced parent values for read-only lookup fields
	$filterField = Request::val('FilterField');
	$filterOperator = Request::val('FilterOperator');
	$filterValue = Request::val('FilterValue');

	// don't include blank images in lightbox gallery
	$templateCode = preg_replace('/blank.gif" data-lightbox=".*?"/', 'blank.gif"', $templateCode);

	// don't display empty email links
	$templateCode=preg_replace('/<a .*?href="mailto:".*?<\/a>/', '', $templateCode);

	/* default field values */
	$rdata = $jdata = get_defaults('log_sheet');
	if($selected_id) {
		$jdata = get_joined_record('log_sheet', $selected_id);
		if($jdata === false) $jdata = get_defaults('log_sheet');
		$rdata = $row;
	}
	$templateCode .= loadView('log_sheet-ajax-cache', ['rdata' => $rdata, 'jdata' => $jdata]);

	// hook: log_sheet_dv
	if(function_exists('log_sheet_dv')) {
		$args = [];
		log_sheet_dv(($selected_id ? $selected_id : FALSE), getMemberInfo(), $templateCode, $args);
	}

	return $templateCode;
}