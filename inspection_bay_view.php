<?php
// This script and data application were generated by AppGini 22.13
// Download AppGini for free from https://bigprof.com/appgini/download/

	include_once(__DIR__ . '/lib.php');
	@include_once(__DIR__ . '/hooks/inspection_bay.php');
	include_once(__DIR__ . '/inspection_bay_dml.php');

	// mm: can the current member access this page?
	$perm = getTablePermissions('inspection_bay');
	if(!$perm['access']) {
		echo error_message($Translation['tableAccessDenied']);
		exit;
	}

	$x = new DataList;
	$x->TableName = 'inspection_bay';

	// Fields that can be displayed in the table view
	$x->QueryFieldsTV = [
		"`inspection_bay`.`inspection_bay_id`" => "inspection_bay_id",
		"`inspection_bay`.`inspection_bay_supervisor_name_and_surname`" => "inspection_bay_supervisor_name_and_surname",
		"`inspection_bay`.`supervisor_contact_details`" => "supervisor_contact_details",
		"`inspection_bay`.`supervisor_email_address`" => "supervisor_email_address",
		"`inspection_bay`.`supervisor_signature`" => "supervisor_signature",
		"DATE_FORMAT(`inspection_bay`.`date_of_vehicle_entrance`, '%e/%c/%Y %l:%i%p')" => "date_of_vehicle_entrance",
		"IF(    CHAR_LENGTH(`reception1`.`job_card_number`), CONCAT_WS('',   `reception1`.`job_card_number`), '') /* Job Card Number: */" => "job_card_number",
		"IF(    CHAR_LENGTH(`gmt_fleet_register1`.`vehicle_registration_number`), CONCAT_WS('',   `gmt_fleet_register1`.`vehicle_registration_number`), '') /* Registration Number: */" => "vehicle_registration_number",
		"IF(    CHAR_LENGTH(`gmt_fleet_register1`.`engine_number`), CONCAT_WS('',   `gmt_fleet_register1`.`engine_number`), '') /* Engine Number: */" => "engine_number",
		"IF(    CHAR_LENGTH(`reception1`.`reception_user_id`) || CHAR_LENGTH(`reception1`.`job_card_number`), CONCAT_WS('',   `reception1`.`reception_user_id`, '      |     and      |     ', `reception1`.`job_card_number`), '') /* Workshop Name: */" => "workshop_name",
		"IF(    CHAR_LENGTH(`work_allocation1`.`work_allocation_reference_number`), CONCAT_WS('',   `work_allocation1`.`work_allocation_reference_number`), '') /* Work Allocation Reference Number: */" => "work_allocation_reference_number",
		"IF(    CHAR_LENGTH(`gmt_fleet_register1`.`model_of_vehicle`) || CHAR_LENGTH(`dealer1`.`make_of_vehicle`), CONCAT_WS('',   `gmt_fleet_register1`.`model_of_vehicle`, '   |    and     |     ', `dealer1`.`make_of_vehicle`, '   '), '') /* Make of Vehicle: */" => "make_of_vehicle",
		"`inspection_bay`.`inspection_bay_lane_number`" => "inspection_bay_lane_number",
		"`inspection_bay`.`inspection_bay_condition`" => "inspection_bay_condition",
		"`inspection_bay`.`allocation_feedback`" => "allocation_feedback",
		"`inspection_bay`.`verification_of_defects`" => "verification_of_defects",
		"`inspection_bay`.`additional_defects`" => "additional_defects",
		"`inspection_bay`.`additional_defects_record`" => "additional_defects_record",
		"`inspection_bay`.`repair_requirement_note`" => "repair_requirement_note",
		"`inspection_bay`.`repair_requirement_report`" => "repair_requirement_report",
		"DATE_FORMAT(`inspection_bay`.`date_of_vehicle_exit`, '%e/%c/%Y %l:%i%p')" => "date_of_vehicle_exit",
	];
	// mapping incoming sort by requests to actual query fields
	$x->SortFields = [
		1 => '`inspection_bay`.`inspection_bay_id`',
		2 => 2,
		3 => 3,
		4 => 4,
		5 => 5,
		6 => '`inspection_bay`.`date_of_vehicle_entrance`',
		7 => '`reception1`.`job_card_number`',
		8 => '`gmt_fleet_register1`.`vehicle_registration_number`',
		9 => '`gmt_fleet_register1`.`engine_number`',
		10 => 10,
		11 => '`work_allocation1`.`work_allocation_reference_number`',
		12 => 12,
		13 => 13,
		14 => 14,
		15 => 15,
		16 => 16,
		17 => 17,
		18 => 18,
		19 => 19,
		20 => 20,
		21 => '`inspection_bay`.`date_of_vehicle_exit`',
	];

	// Fields that can be displayed in the csv file
	$x->QueryFieldsCSV = [
		"`inspection_bay`.`inspection_bay_id`" => "inspection_bay_id",
		"`inspection_bay`.`inspection_bay_supervisor_name_and_surname`" => "inspection_bay_supervisor_name_and_surname",
		"`inspection_bay`.`supervisor_contact_details`" => "supervisor_contact_details",
		"`inspection_bay`.`supervisor_email_address`" => "supervisor_email_address",
		"`inspection_bay`.`supervisor_signature`" => "supervisor_signature",
		"DATE_FORMAT(`inspection_bay`.`date_of_vehicle_entrance`, '%e/%c/%Y %l:%i%p')" => "date_of_vehicle_entrance",
		"IF(    CHAR_LENGTH(`reception1`.`job_card_number`), CONCAT_WS('',   `reception1`.`job_card_number`), '') /* Job Card Number: */" => "job_card_number",
		"IF(    CHAR_LENGTH(`gmt_fleet_register1`.`vehicle_registration_number`), CONCAT_WS('',   `gmt_fleet_register1`.`vehicle_registration_number`), '') /* Registration Number: */" => "vehicle_registration_number",
		"IF(    CHAR_LENGTH(`gmt_fleet_register1`.`engine_number`), CONCAT_WS('',   `gmt_fleet_register1`.`engine_number`), '') /* Engine Number: */" => "engine_number",
		"IF(    CHAR_LENGTH(`reception1`.`reception_user_id`) || CHAR_LENGTH(`reception1`.`job_card_number`), CONCAT_WS('',   `reception1`.`reception_user_id`, '      |     and      |     ', `reception1`.`job_card_number`), '') /* Workshop Name: */" => "workshop_name",
		"IF(    CHAR_LENGTH(`work_allocation1`.`work_allocation_reference_number`), CONCAT_WS('',   `work_allocation1`.`work_allocation_reference_number`), '') /* Work Allocation Reference Number: */" => "work_allocation_reference_number",
		"IF(    CHAR_LENGTH(`gmt_fleet_register1`.`model_of_vehicle`) || CHAR_LENGTH(`dealer1`.`make_of_vehicle`), CONCAT_WS('',   `gmt_fleet_register1`.`model_of_vehicle`, '   |    and     |     ', `dealer1`.`make_of_vehicle`, '   '), '') /* Make of Vehicle: */" => "make_of_vehicle",
		"`inspection_bay`.`inspection_bay_lane_number`" => "inspection_bay_lane_number",
		"`inspection_bay`.`inspection_bay_condition`" => "inspection_bay_condition",
		"`inspection_bay`.`allocation_feedback`" => "allocation_feedback",
		"`inspection_bay`.`verification_of_defects`" => "verification_of_defects",
		"`inspection_bay`.`additional_defects`" => "additional_defects",
		"`inspection_bay`.`additional_defects_record`" => "additional_defects_record",
		"`inspection_bay`.`repair_requirement_note`" => "repair_requirement_note",
		"`inspection_bay`.`repair_requirement_report`" => "repair_requirement_report",
		"DATE_FORMAT(`inspection_bay`.`date_of_vehicle_exit`, '%e/%c/%Y %l:%i%p')" => "date_of_vehicle_exit",
	];
	// Fields that can be filtered
	$x->QueryFieldsFilters = [
		"`inspection_bay`.`inspection_bay_id`" => "Inspection Bay ID:",
		"`inspection_bay`.`inspection_bay_supervisor_name_and_surname`" => "Inspection Bay Supervisor Name & Surname:",
		"`inspection_bay`.`supervisor_contact_details`" => "Supervisor Contact Details:",
		"`inspection_bay`.`supervisor_email_address`" => "Supervisor Email Address:",
		"`inspection_bay`.`date_of_vehicle_entrance`" => "Date of Vehicle Entrance:",
		"IF(    CHAR_LENGTH(`reception1`.`job_card_number`), CONCAT_WS('',   `reception1`.`job_card_number`), '') /* Job Card Number: */" => "Job Card Number:",
		"IF(    CHAR_LENGTH(`gmt_fleet_register1`.`vehicle_registration_number`), CONCAT_WS('',   `gmt_fleet_register1`.`vehicle_registration_number`), '') /* Registration Number: */" => "Registration Number:",
		"IF(    CHAR_LENGTH(`gmt_fleet_register1`.`engine_number`), CONCAT_WS('',   `gmt_fleet_register1`.`engine_number`), '') /* Engine Number: */" => "Engine Number:",
		"IF(    CHAR_LENGTH(`reception1`.`reception_user_id`) || CHAR_LENGTH(`reception1`.`job_card_number`), CONCAT_WS('',   `reception1`.`reception_user_id`, '      |     and      |     ', `reception1`.`job_card_number`), '') /* Workshop Name: */" => "Workshop Name:",
		"IF(    CHAR_LENGTH(`work_allocation1`.`work_allocation_reference_number`), CONCAT_WS('',   `work_allocation1`.`work_allocation_reference_number`), '') /* Work Allocation Reference Number: */" => "Work Allocation Reference Number:",
		"IF(    CHAR_LENGTH(`gmt_fleet_register1`.`model_of_vehicle`) || CHAR_LENGTH(`dealer1`.`make_of_vehicle`), CONCAT_WS('',   `gmt_fleet_register1`.`model_of_vehicle`, '   |    and     |     ', `dealer1`.`make_of_vehicle`, '   '), '') /* Make of Vehicle: */" => "Make of Vehicle:",
		"`inspection_bay`.`inspection_bay_lane_number`" => "Inspection Bay Lane Number:",
		"`inspection_bay`.`inspection_bay_condition`" => "Inspection Bay Condition:",
		"`inspection_bay`.`allocation_feedback`" => "Allocation Feedback:",
		"`inspection_bay`.`verification_of_defects`" => "Verification Of Defects:",
		"`inspection_bay`.`additional_defects`" => "Additional Defects:",
		"`inspection_bay`.`additional_defects_record`" => "Additional Defects Record:",
		"`inspection_bay`.`repair_requirement_note`" => "Repair Requirement Note:",
		"`inspection_bay`.`repair_requirement_report`" => "Repair Requirement Report:",
		"`inspection_bay`.`date_of_vehicle_exit`" => "Date of Vehicle Exit:",
	];

	// Fields that can be quick searched
	$x->QueryFieldsQS = [
		"`inspection_bay`.`inspection_bay_id`" => "inspection_bay_id",
		"`inspection_bay`.`inspection_bay_supervisor_name_and_surname`" => "inspection_bay_supervisor_name_and_surname",
		"`inspection_bay`.`supervisor_contact_details`" => "supervisor_contact_details",
		"`inspection_bay`.`supervisor_email_address`" => "supervisor_email_address",
		"DATE_FORMAT(`inspection_bay`.`date_of_vehicle_entrance`, '%e/%c/%Y %l:%i%p')" => "date_of_vehicle_entrance",
		"IF(    CHAR_LENGTH(`reception1`.`job_card_number`), CONCAT_WS('',   `reception1`.`job_card_number`), '') /* Job Card Number: */" => "job_card_number",
		"IF(    CHAR_LENGTH(`gmt_fleet_register1`.`vehicle_registration_number`), CONCAT_WS('',   `gmt_fleet_register1`.`vehicle_registration_number`), '') /* Registration Number: */" => "vehicle_registration_number",
		"IF(    CHAR_LENGTH(`gmt_fleet_register1`.`engine_number`), CONCAT_WS('',   `gmt_fleet_register1`.`engine_number`), '') /* Engine Number: */" => "engine_number",
		"IF(    CHAR_LENGTH(`reception1`.`reception_user_id`) || CHAR_LENGTH(`reception1`.`job_card_number`), CONCAT_WS('',   `reception1`.`reception_user_id`, '      |     and      |     ', `reception1`.`job_card_number`), '') /* Workshop Name: */" => "workshop_name",
		"IF(    CHAR_LENGTH(`work_allocation1`.`work_allocation_reference_number`), CONCAT_WS('',   `work_allocation1`.`work_allocation_reference_number`), '') /* Work Allocation Reference Number: */" => "work_allocation_reference_number",
		"IF(    CHAR_LENGTH(`gmt_fleet_register1`.`model_of_vehicle`) || CHAR_LENGTH(`dealer1`.`make_of_vehicle`), CONCAT_WS('',   `gmt_fleet_register1`.`model_of_vehicle`, '   |    and     |     ', `dealer1`.`make_of_vehicle`, '   '), '') /* Make of Vehicle: */" => "make_of_vehicle",
		"`inspection_bay`.`inspection_bay_lane_number`" => "inspection_bay_lane_number",
		"`inspection_bay`.`inspection_bay_condition`" => "inspection_bay_condition",
		"`inspection_bay`.`allocation_feedback`" => "allocation_feedback",
		"`inspection_bay`.`verification_of_defects`" => "verification_of_defects",
		"`inspection_bay`.`additional_defects`" => "additional_defects",
		"`inspection_bay`.`additional_defects_record`" => "additional_defects_record",
		"`inspection_bay`.`repair_requirement_note`" => "repair_requirement_note",
		"`inspection_bay`.`repair_requirement_report`" => "repair_requirement_report",
		"DATE_FORMAT(`inspection_bay`.`date_of_vehicle_exit`, '%e/%c/%Y %l:%i%p')" => "date_of_vehicle_exit",
	];

	// Lookup fields that can be used as filterers
	$x->filterers = ['job_card_number' => 'Job Card Number:', 'vehicle_registration_number' => 'Registration Number:', 'work_allocation_reference_number' => 'Work Allocation Reference Number:', ];

	$x->QueryFrom = "`inspection_bay` LEFT JOIN `reception` as reception1 ON `reception1`.`reception_user_id`=`inspection_bay`.`job_card_number` LEFT JOIN `gmt_fleet_register` as gmt_fleet_register1 ON `gmt_fleet_register1`.`fleet_asset_id`=`inspection_bay`.`vehicle_registration_number` LEFT JOIN `work_allocation` as work_allocation1 ON `work_allocation1`.`work_allocation_id`=`inspection_bay`.`work_allocation_reference_number` LEFT JOIN `dealer` as dealer1 ON `dealer1`.`dealer_id`=`gmt_fleet_register1`.`make_of_vehicle` ";
	$x->QueryWhere = '';
	$x->QueryOrder = '';

	$x->AllowSelection = 1;
	$x->HideTableView = ($perm['view'] == 0 ? 1 : 0);
	$x->AllowDelete = $perm['delete'];
	$x->AllowMassDelete = (getLoggedAdmin() !== false);
	$x->AllowInsert = $perm['insert'];
	$x->AllowUpdate = $perm['edit'];
	$x->SeparateDV = 1;
	$x->AllowDeleteOfParents = 0;
	$x->AllowFilters = 1;
	$x->AllowSavingFilters = (getLoggedAdmin() !== false);
	$x->AllowSorting = 1;
	$x->AllowNavigation = 1;
	$x->AllowPrinting = 1;
	$x->AllowPrintingDV = 1;
	$x->AllowCSV = 1;
	$x->RecordsPerPage = 25;
	$x->QuickSearch = 1;
	$x->QuickSearchText = $Translation['quick search'];
	$x->ScriptFileName = 'inspection_bay_view.php';
	$x->RedirectAfterInsert = 'inspection_bay_view.php?SelectedID=#ID#';
	$x->TableTitle = 'Inspection Bay:';
	$x->TableIcon = 'resources/table_icons/Junior Icon 33.png';
	$x->PrimaryKey = '`inspection_bay`.`inspection_bay_id`';

	$x->ColWidth = [150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, ];
	$x->ColCaption = ['Inspection Bay ID:', 'Inspection Bay Supervisor Name & Surname:', 'Supervisor Contact Details:', 'Supervisor Email Address:', 'Supervisor Signature:', 'Date of Vehicle Entrance:', 'Job Card Number:', 'Registration Number:', 'Engine Number:', 'Workshop Name:', 'Work Allocation Reference Number:', 'Make of Vehicle:', 'Inspection Bay Lane Number:', 'Inspection Bay Condition:', 'Allocation Feedback:', 'Verification Of Defects:', 'Additional Defects:', 'Additional Defects Record:', 'Repair Requirement Note:', 'Repair Requirement Report:', 'Date of Vehicle Exit:', ];
	$x->ColFieldName = ['inspection_bay_id', 'inspection_bay_supervisor_name_and_surname', 'supervisor_contact_details', 'supervisor_email_address', 'supervisor_signature', 'date_of_vehicle_entrance', 'job_card_number', 'vehicle_registration_number', 'engine_number', 'workshop_name', 'work_allocation_reference_number', 'make_of_vehicle', 'inspection_bay_lane_number', 'inspection_bay_condition', 'allocation_feedback', 'verification_of_defects', 'additional_defects', 'additional_defects_record', 'repair_requirement_note', 'repair_requirement_report', 'date_of_vehicle_exit', ];
	$x->ColNumber  = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, ];

	// template paths below are based on the app main directory
	$x->Template = 'templates/inspection_bay_templateTV.html';
	$x->SelectedTemplate = 'templates/inspection_bay_templateTVS.html';
	$x->TemplateDV = 'templates/inspection_bay_templateDV.html';
	$x->TemplateDVP = 'templates/inspection_bay_templateDVP.html';

	$x->ShowTableHeader = 1;
	$x->TVClasses = "";
	$x->DVClasses = "";
	$x->HasCalculatedFields = false;
	$x->AllowConsoleLog = false;
	$x->AllowDVNavigation = true;

	// hook: inspection_bay_init
	$render = true;
	if(function_exists('inspection_bay_init')) {
		$args = [];
		$render = inspection_bay_init($x, getMemberInfo(), $args);
	}

	if($render) $x->Render();

	// hook: inspection_bay_header
	$headerCode = '';
	if(function_exists('inspection_bay_header')) {
		$args = [];
		$headerCode = inspection_bay_header($x->ContentType, getMemberInfo(), $args);
	}

	if(!$headerCode) {
		include_once(__DIR__ . '/header.php'); 
	} else {
		ob_start();
		include_once(__DIR__ . '/header.php');
		echo str_replace('<%%HEADER%%>', ob_get_clean(), $headerCode);
	}

	echo $x->HTML;

	// hook: inspection_bay_footer
	$footerCode = '';
	if(function_exists('inspection_bay_footer')) {
		$args = [];
		$footerCode = inspection_bay_footer($x->ContentType, getMemberInfo(), $args);
	}

	if(!$footerCode) {
		include_once(__DIR__ . '/footer.php'); 
	} else {
		ob_start();
		include_once(__DIR__ . '/footer.php');
		echo str_replace('<%%FOOTER%%>', ob_get_clean(), $footerCode);
	}
