<?php

// Data functions (insert, update, delete, form) for table driver

// This script and data application were generated by AppGini 22.13
// Download AppGini for free from https://bigprof.com/appgini/download/

function driver_insert(&$error_message = '') {
	global $Translation;

	// mm: can member insert record?
	$arrPerm = getTablePermissions('driver');
	if(!$arrPerm['insert']) return false;

	$data = [
		'drivers_name_and_surname' => Request::val('drivers_name_and_surname', ''),
		'drivers_persal_number' => Request::val('drivers_persal_number', ''),
		'drivers_contact_details' => Request::val('drivers_contact_details', ''),
		'drivers_email_address' => Request::val('drivers_email_address', ''),
		'drivers_license' => Request::val('drivers_license', ''),
		'drivers_license_code' => Request::val('drivers_license_code', ''),
		'drivers_license_number' => Request::val('drivers_license_number', ''),
		'drivers_license_upload' => Request::fileUpload('drivers_license_upload', [
			'maxSize' => 5242880,
			'types' => 'txt|doc|docx|docm|odt|pdf|rtf',
			'noRename' => false,
			'dir' => '',
			'success' => function($name, $selected_id) {
			},
			'failure' => function($selected_id, $fileRemoved) {
				if(!strlen(Request::val('SelectedID'))) return '';

				/* for empty upload fields, when saving a copy of an existing record, copy the original upload field */
				return existing_value('driver', 'drivers_license_upload', Request::val('SelectedID'));
			},
		]),
		'drivers_license_expire_date' => Request::dateComponents('drivers_license_expire_date', '1'),
		'drivers_license_renewal_date' => Request::dateComponents('drivers_license_renewal_date', '1'),
		'drivers_log_history' => Request::val('drivers_log_history', ''),
		'drivers_license_penalties' => Request::val('drivers_license_penalties', ''),
		'drivers_license_penalties_date' => Request::dateComponents('drivers_license_penalties_date', '1'),
		'drivers_license_penalty_details' => Request::val('drivers_license_penalty_details', ''),
		'drivers_license_penalty_details_uploads' => Request::fileUpload('drivers_license_penalty_details_uploads', [
			'maxSize' => 5242880,
			'types' => 'txt|doc|docx|docm|odt|pdf|rtf',
			'noRename' => false,
			'dir' => '',
			'success' => function($name, $selected_id) {
			},
			'failure' => function($selected_id, $fileRemoved) {
				if(!strlen(Request::val('SelectedID'))) return '';

				/* for empty upload fields, when saving a copy of an existing record, copy the original upload field */
				return existing_value('driver', 'drivers_license_penalty_details_uploads', Request::val('SelectedID'));
			},
		]),
		'involved_in_accident' => Request::val('involved_in_accident', ''),
		'accident_report' => Request::fileUpload('accident_report', [
			'maxSize' => 5242880,
			'types' => 'txt|doc|docx|docm|odt|pdf|rtf',
			'noRename' => false,
			'dir' => '',
			'success' => function($name, $selected_id) {
			},
			'failure' => function($selected_id, $fileRemoved) {
				if(!strlen(Request::val('SelectedID'))) return '';

				/* for empty upload fields, when saving a copy of an existing record, copy the original upload field */
				return existing_value('driver', 'accident_report', Request::val('SelectedID'));
			},
		]),
	];

	if($data['drivers_name_and_surname'] === '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Driver\'s  Name & Surname:': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">' . $Translation['< back'] . '</a></div>';
		exit;
	}
	if($data['drivers_persal_number'] === '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Driver\'s Persal Number:': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">' . $Translation['< back'] . '</a></div>';
		exit;
	}

	// hook: driver_before_insert
	if(function_exists('driver_before_insert')) {
		$args = [];
		if(!driver_before_insert($data, getMemberInfo(), $args)) {
			if(isset($args['error_message'])) $error_message = $args['error_message'];
			return false;
		}
	}

	$error = '';
	// set empty fields to NULL
	$data = array_map(function($v) { return ($v === '' ? NULL : $v); }, $data);
	insert('driver', backtick_keys_once($data), $error);
	if($error) {
		$error_message = $error;
		return false;
	}

	$recID = db_insert_id(db_link());

	update_calc_fields('driver', $recID, calculated_fields()['driver']);

	// hook: driver_after_insert
	if(function_exists('driver_after_insert')) {
		$res = sql("SELECT * FROM `driver` WHERE `driver_id`='" . makeSafe($recID, false) . "' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)) {
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = makeSafe($recID, false);
		$args = [];
		if(!driver_after_insert($data, getMemberInfo(), $args)) { return $recID; }
	}

	// mm: save ownership data
	set_record_owner('driver', $recID, getLoggedMemberID());

	// if this record is a copy of another record, copy children if applicable
	if(strlen(Request::val('SelectedID'))) driver_copy_children($recID, Request::val('SelectedID'));

	return $recID;
}

function driver_copy_children($destination_id, $source_id) {
	global $Translation;
	$requests = []; // array of curl handlers for launching insert requests
	$eo = ['silentErrors' => true];
	$safe_sid = makeSafe($source_id);

	// launch requests, asynchronously
	curl_batch($requests);
}

function driver_delete($selected_id, $AllowDeleteOfParents = false, $skipChecks = false) {
	// insure referential integrity ...
	global $Translation;
	$selected_id = makeSafe($selected_id);

	// mm: can member delete record?
	if(!check_record_permission('driver', $selected_id, 'delete')) {
		return $Translation['You don\'t have enough permissions to delete this record'];
	}

	// hook: driver_before_delete
	if(function_exists('driver_before_delete')) {
		$args = [];
		if(!driver_before_delete($selected_id, $skipChecks, getMemberInfo(), $args))
			return $Translation['Couldn\'t delete this record'] . (
				!empty($args['error_message']) ?
					'<div class="text-bold">' . strip_tags($args['error_message']) . '</div>'
					: '' 
			);
	}

	// child table: gmt_fleet_register
	$res = sql("SELECT `driver_id` FROM `driver` WHERE `driver_id`='{$selected_id}'", $eo);
	$driver_id = db_fetch_row($res);
	$rires = sql("SELECT COUNT(1) FROM `gmt_fleet_register` WHERE `drivers_name_and_surname`='" . makeSafe($driver_id[0]) . "'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'gmt_fleet_register', $RetMsg);
		return $RetMsg;
	} elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation['confirm delete'];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'gmt_fleet_register', $RetMsg);
		$RetMsg = str_replace('<Delete>', '<input type="button" class="btn btn-danger" value="' . html_attr($Translation['yes']) . '" onClick="window.location = \'driver_view.php?SelectedID=' . urlencode($selected_id) . '&delete_x=1&confirmed=1&csrf_token=' . urlencode(csrf_token(false, true)) . '\';">', $RetMsg);
		$RetMsg = str_replace('<Cancel>', '<input type="button" class="btn btn-success" value="' . html_attr($Translation[ 'no']) . '" onClick="window.location = \'driver_view.php?SelectedID=' . urlencode($selected_id) . '\';">', $RetMsg);
		return $RetMsg;
	}

	// child table: log_sheet
	$res = sql("SELECT `driver_id` FROM `driver` WHERE `driver_id`='{$selected_id}'", $eo);
	$driver_id = db_fetch_row($res);
	$rires = sql("SELECT COUNT(1) FROM `log_sheet` WHERE `drivers_name_and_surname`='" . makeSafe($driver_id[0]) . "'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'log_sheet', $RetMsg);
		return $RetMsg;
	} elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation['confirm delete'];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'log_sheet', $RetMsg);
		$RetMsg = str_replace('<Delete>', '<input type="button" class="btn btn-danger" value="' . html_attr($Translation['yes']) . '" onClick="window.location = \'driver_view.php?SelectedID=' . urlencode($selected_id) . '&delete_x=1&confirmed=1&csrf_token=' . urlencode(csrf_token(false, true)) . '\';">', $RetMsg);
		$RetMsg = str_replace('<Cancel>', '<input type="button" class="btn btn-success" value="' . html_attr($Translation[ 'no']) . '" onClick="window.location = \'driver_view.php?SelectedID=' . urlencode($selected_id) . '\';">', $RetMsg);
		return $RetMsg;
	}

	// child table: accidents
	$res = sql("SELECT `driver_id` FROM `driver` WHERE `driver_id`='{$selected_id}'", $eo);
	$driver_id = db_fetch_row($res);
	$rires = sql("SELECT COUNT(1) FROM `accidents` WHERE `drivers_surname`='" . makeSafe($driver_id[0]) . "'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'accidents', $RetMsg);
		return $RetMsg;
	} elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation['confirm delete'];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'accidents', $RetMsg);
		$RetMsg = str_replace('<Delete>', '<input type="button" class="btn btn-danger" value="' . html_attr($Translation['yes']) . '" onClick="window.location = \'driver_view.php?SelectedID=' . urlencode($selected_id) . '&delete_x=1&confirmed=1&csrf_token=' . urlencode(csrf_token(false, true)) . '\';">', $RetMsg);
		$RetMsg = str_replace('<Cancel>', '<input type="button" class="btn btn-success" value="' . html_attr($Translation[ 'no']) . '" onClick="window.location = \'driver_view.php?SelectedID=' . urlencode($selected_id) . '\';">', $RetMsg);
		return $RetMsg;
	}

	// child table: vehicle_daily_check_list
	$res = sql("SELECT `driver_id` FROM `driver` WHERE `driver_id`='{$selected_id}'", $eo);
	$driver_id = db_fetch_row($res);
	$rires = sql("SELECT COUNT(1) FROM `vehicle_daily_check_list` WHERE `drivers_surname`='" . makeSafe($driver_id[0]) . "'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'vehicle_daily_check_list', $RetMsg);
		return $RetMsg;
	} elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation['confirm delete'];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'vehicle_daily_check_list', $RetMsg);
		$RetMsg = str_replace('<Delete>', '<input type="button" class="btn btn-danger" value="' . html_attr($Translation['yes']) . '" onClick="window.location = \'driver_view.php?SelectedID=' . urlencode($selected_id) . '&delete_x=1&confirmed=1&csrf_token=' . urlencode(csrf_token(false, true)) . '\';">', $RetMsg);
		$RetMsg = str_replace('<Cancel>', '<input type="button" class="btn btn-success" value="' . html_attr($Translation[ 'no']) . '" onClick="window.location = \'driver_view.php?SelectedID=' . urlencode($selected_id) . '\';">', $RetMsg);
		return $RetMsg;
	}

	// child table: modification_to_vehicle
	$res = sql("SELECT `driver_id` FROM `driver` WHERE `driver_id`='{$selected_id}'", $eo);
	$driver_id = db_fetch_row($res);
	$rires = sql("SELECT COUNT(1) FROM `modification_to_vehicle` WHERE `drivers_name_and_surname`='" . makeSafe($driver_id[0]) . "'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'modification_to_vehicle', $RetMsg);
		return $RetMsg;
	} elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation['confirm delete'];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'modification_to_vehicle', $RetMsg);
		$RetMsg = str_replace('<Delete>', '<input type="button" class="btn btn-danger" value="' . html_attr($Translation['yes']) . '" onClick="window.location = \'driver_view.php?SelectedID=' . urlencode($selected_id) . '&delete_x=1&confirmed=1&csrf_token=' . urlencode(csrf_token(false, true)) . '\';">', $RetMsg);
		$RetMsg = str_replace('<Cancel>', '<input type="button" class="btn btn-success" value="' . html_attr($Translation[ 'no']) . '" onClick="window.location = \'driver_view.php?SelectedID=' . urlencode($selected_id) . '\';">', $RetMsg);
		return $RetMsg;
	}

	// child table: vehicle_handing_over_checklist
	$res = sql("SELECT `driver_id` FROM `driver` WHERE `driver_id`='{$selected_id}'", $eo);
	$driver_id = db_fetch_row($res);
	$rires = sql("SELECT COUNT(1) FROM `vehicle_handing_over_checklist` WHERE `driver_name_and_surname`='" . makeSafe($driver_id[0]) . "'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'vehicle_handing_over_checklist', $RetMsg);
		return $RetMsg;
	} elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation['confirm delete'];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'vehicle_handing_over_checklist', $RetMsg);
		$RetMsg = str_replace('<Delete>', '<input type="button" class="btn btn-danger" value="' . html_attr($Translation['yes']) . '" onClick="window.location = \'driver_view.php?SelectedID=' . urlencode($selected_id) . '&delete_x=1&confirmed=1&csrf_token=' . urlencode(csrf_token(false, true)) . '\';">', $RetMsg);
		$RetMsg = str_replace('<Cancel>', '<input type="button" class="btn btn-success" value="' . html_attr($Translation[ 'no']) . '" onClick="window.location = \'driver_view.php?SelectedID=' . urlencode($selected_id) . '\';">', $RetMsg);
		return $RetMsg;
	}

	// child table: vehicle_return_check_list
	$res = sql("SELECT `driver_id` FROM `driver` WHERE `driver_id`='{$selected_id}'", $eo);
	$driver_id = db_fetch_row($res);
	$rires = sql("SELECT COUNT(1) FROM `vehicle_return_check_list` WHERE `driver_name_and_surname`='" . makeSafe($driver_id[0]) . "'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'vehicle_return_check_list', $RetMsg);
		return $RetMsg;
	} elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation['confirm delete'];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'vehicle_return_check_list', $RetMsg);
		$RetMsg = str_replace('<Delete>', '<input type="button" class="btn btn-danger" value="' . html_attr($Translation['yes']) . '" onClick="window.location = \'driver_view.php?SelectedID=' . urlencode($selected_id) . '&delete_x=1&confirmed=1&csrf_token=' . urlencode(csrf_token(false, true)) . '\';">', $RetMsg);
		$RetMsg = str_replace('<Cancel>', '<input type="button" class="btn btn-success" value="' . html_attr($Translation[ 'no']) . '" onClick="window.location = \'driver_view.php?SelectedID=' . urlencode($selected_id) . '\';">', $RetMsg);
		return $RetMsg;
	}

	// child table: indicates_repair_damages_found_list
	$res = sql("SELECT `driver_id` FROM `driver` WHERE `driver_id`='{$selected_id}'", $eo);
	$driver_id = db_fetch_row($res);
	$rires = sql("SELECT COUNT(1) FROM `indicates_repair_damages_found_list` WHERE `driver_name_and_surname`='" . makeSafe($driver_id[0]) . "'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'indicates_repair_damages_found_list', $RetMsg);
		return $RetMsg;
	} elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation['confirm delete'];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'indicates_repair_damages_found_list', $RetMsg);
		$RetMsg = str_replace('<Delete>', '<input type="button" class="btn btn-danger" value="' . html_attr($Translation['yes']) . '" onClick="window.location = \'driver_view.php?SelectedID=' . urlencode($selected_id) . '&delete_x=1&confirmed=1&csrf_token=' . urlencode(csrf_token(false, true)) . '\';">', $RetMsg);
		$RetMsg = str_replace('<Cancel>', '<input type="button" class="btn btn-success" value="' . html_attr($Translation[ 'no']) . '" onClick="window.location = \'driver_view.php?SelectedID=' . urlencode($selected_id) . '\';">', $RetMsg);
		return $RetMsg;
	}

	// child table: internal_repairs_body
	$res = sql("SELECT `driver_id` FROM `driver` WHERE `driver_id`='{$selected_id}'", $eo);
	$driver_id = db_fetch_row($res);
	$rires = sql("SELECT COUNT(1) FROM `internal_repairs_body` WHERE `driver_name_and_surname`='" . makeSafe($driver_id[0]) . "'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'internal_repairs_body', $RetMsg);
		return $RetMsg;
	} elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation['confirm delete'];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'internal_repairs_body', $RetMsg);
		$RetMsg = str_replace('<Delete>', '<input type="button" class="btn btn-danger" value="' . html_attr($Translation['yes']) . '" onClick="window.location = \'driver_view.php?SelectedID=' . urlencode($selected_id) . '&delete_x=1&confirmed=1&csrf_token=' . urlencode(csrf_token(false, true)) . '\';">', $RetMsg);
		$RetMsg = str_replace('<Cancel>', '<input type="button" class="btn btn-success" value="' . html_attr($Translation[ 'no']) . '" onClick="window.location = \'driver_view.php?SelectedID=' . urlencode($selected_id) . '\';">', $RetMsg);
		return $RetMsg;
	}

	// child table: collection_of_repaired_vehicles
	$res = sql("SELECT `driver_id` FROM `driver` WHERE `driver_id`='{$selected_id}'", $eo);
	$driver_id = db_fetch_row($res);
	$rires = sql("SELECT COUNT(1) FROM `collection_of_repaired_vehicles` WHERE `driver_name_and_surname`='" . makeSafe($driver_id[0]) . "'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'collection_of_repaired_vehicles', $RetMsg);
		return $RetMsg;
	} elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation['confirm delete'];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'collection_of_repaired_vehicles', $RetMsg);
		$RetMsg = str_replace('<Delete>', '<input type="button" class="btn btn-danger" value="' . html_attr($Translation['yes']) . '" onClick="window.location = \'driver_view.php?SelectedID=' . urlencode($selected_id) . '&delete_x=1&confirmed=1&csrf_token=' . urlencode(csrf_token(false, true)) . '\';">', $RetMsg);
		$RetMsg = str_replace('<Cancel>', '<input type="button" class="btn btn-success" value="' . html_attr($Translation[ 'no']) . '" onClick="window.location = \'driver_view.php?SelectedID=' . urlencode($selected_id) . '\';">', $RetMsg);
		return $RetMsg;
	}

	sql("DELETE FROM `driver` WHERE `driver_id`='{$selected_id}'", $eo);

	// hook: driver_after_delete
	if(function_exists('driver_after_delete')) {
		$args = [];
		driver_after_delete($selected_id, getMemberInfo(), $args);
	}

	// mm: delete ownership data
	sql("DELETE FROM `membership_userrecords` WHERE `tableName`='driver' AND `pkValue`='{$selected_id}'", $eo);
}

function driver_update(&$selected_id, &$error_message = '') {
	global $Translation;

	// mm: can member edit record?
	if(!check_record_permission('driver', $selected_id, 'edit')) return false;

	$data = [
		'drivers_name_and_surname' => Request::val('drivers_name_and_surname', ''),
		'drivers_persal_number' => Request::val('drivers_persal_number', ''),
		'drivers_contact_details' => Request::val('drivers_contact_details', ''),
		'drivers_email_address' => Request::val('drivers_email_address', ''),
		'drivers_license' => Request::val('drivers_license', ''),
		'drivers_license_code' => Request::val('drivers_license_code', ''),
		'drivers_license_number' => Request::val('drivers_license_number', ''),
		'drivers_license_upload' => Request::fileUpload('drivers_license_upload', [
			'maxSize' => 5242880,
			'types' => 'txt|doc|docx|docm|odt|pdf|rtf',
			'noRename' => false,
			'dir' => '',
			'id' => $selected_id,
			'success' => function($name, $selected_id) {
			},
			'removeOnRequest' => true,
			'remove' => function($selected_id) {
				// do nothing: preserve removed files on server.
			},
			'failure' => function($selected_id, $fileRemoved) {
				if($fileRemoved) return '';
				return existing_value('driver', 'drivers_license_upload', $selected_id);
			},
		]),
		'drivers_license_expire_date' => Request::dateComponents('drivers_license_expire_date', ''),
		'drivers_license_renewal_date' => Request::dateComponents('drivers_license_renewal_date', ''),
		'drivers_log_history' => Request::val('drivers_log_history', ''),
		'drivers_license_penalties' => Request::val('drivers_license_penalties', ''),
		'drivers_license_penalties_date' => Request::dateComponents('drivers_license_penalties_date', ''),
		'drivers_license_penalty_details' => Request::val('drivers_license_penalty_details', ''),
		'drivers_license_penalty_details_uploads' => Request::fileUpload('drivers_license_penalty_details_uploads', [
			'maxSize' => 5242880,
			'types' => 'txt|doc|docx|docm|odt|pdf|rtf',
			'noRename' => false,
			'dir' => '',
			'id' => $selected_id,
			'success' => function($name, $selected_id) {
			},
			'removeOnRequest' => true,
			'remove' => function($selected_id) {
				// do nothing: preserve removed files on server.
			},
			'failure' => function($selected_id, $fileRemoved) {
				if($fileRemoved) return '';
				return existing_value('driver', 'drivers_license_penalty_details_uploads', $selected_id);
			},
		]),
		'involved_in_accident' => Request::val('involved_in_accident', ''),
		'accident_report' => Request::fileUpload('accident_report', [
			'maxSize' => 5242880,
			'types' => 'txt|doc|docx|docm|odt|pdf|rtf',
			'noRename' => false,
			'dir' => '',
			'id' => $selected_id,
			'success' => function($name, $selected_id) {
			},
			'removeOnRequest' => true,
			'remove' => function($selected_id) {
				// do nothing: preserve removed files on server.
			},
			'failure' => function($selected_id, $fileRemoved) {
				if($fileRemoved) return '';
				return existing_value('driver', 'accident_report', $selected_id);
			},
		]),
	];

	if($data['drivers_name_and_surname'] === '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Driver\'s  Name & Surname:': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">' . $Translation['< back'] . '</a></div>';
		exit;
	}
	if($data['drivers_persal_number'] === '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Driver\'s Persal Number:': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">' . $Translation['< back'] . '</a></div>';
		exit;
	}
	// get existing values
	$old_data = getRecord('driver', $selected_id);
	if(is_array($old_data)) {
		$old_data = array_map('makeSafe', $old_data);
		$old_data['selectedID'] = makeSafe($selected_id);
	}

	$data['selectedID'] = makeSafe($selected_id);

	// hook: driver_before_update
	if(function_exists('driver_before_update')) {
		$args = ['old_data' => $old_data];
		if(!driver_before_update($data, getMemberInfo(), $args)) {
			if(isset($args['error_message'])) $error_message = $args['error_message'];
			return false;
		}
	}

	$set = $data; unset($set['selectedID']);
	foreach ($set as $field => $value) {
		$set[$field] = ($value !== '' && $value !== NULL) ? $value : NULL;
	}

	if(!update(
		'driver', 
		backtick_keys_once($set), 
		['`driver_id`' => $selected_id], 
		$error_message
	)) {
		echo $error_message;
		echo '<a href="driver_view.php?SelectedID=' . urlencode($selected_id) . "\">{$Translation['< back']}</a>";
		exit;
	}


	$eo = ['silentErrors' => true];

	update_calc_fields('driver', $data['selectedID'], calculated_fields()['driver']);

	// hook: driver_after_update
	if(function_exists('driver_after_update')) {
		$res = sql("SELECT * FROM `driver` WHERE `driver_id`='{$data['selectedID']}' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)) $data = array_map('makeSafe', $row);

		$data['selectedID'] = $data['driver_id'];
		$args = ['old_data' => $old_data];
		if(!driver_after_update($data, getMemberInfo(), $args)) return;
	}

	// mm: update ownership data
	sql("UPDATE `membership_userrecords` SET `dateUpdated`='" . time() . "' WHERE `tableName`='driver' AND `pkValue`='" . makeSafe($selected_id) . "'", $eo);
}

function driver_form($selected_id = '', $AllowUpdate = 1, $AllowInsert = 1, $AllowDelete = 1, $separateDV = 0, $TemplateDV = '', $TemplateDVP = '') {
	// function to return an editable form for a table records
	// and fill it with data of record whose ID is $selected_id. If $selected_id
	// is empty, an empty form is shown, with only an 'Add New'
	// button displayed.

	global $Translation;
	$eo = ['silentErrors' => true];
	$noUploads = null;
	$row = $urow = $jsReadOnly = $jsEditable = $lookups = null;

	$noSaveAsCopy = true;

	// mm: get table permissions
	$arrPerm = getTablePermissions('driver');
	if(!$arrPerm['insert'] && $selected_id == '')
		// no insert permission and no record selected
		// so show access denied error unless TVDV
		return $separateDV ? $Translation['tableAccessDenied'] : '';
	$AllowInsert = ($arrPerm['insert'] ? true : false);
	// print preview?
	$dvprint = false;
	if(strlen($selected_id) && Request::val('dvprint_x') != '') {
		$dvprint = true;
	}


	// populate filterers, starting from children to grand-parents

	// unique random identifier
	$rnd1 = ($dvprint ? rand(1000000, 9999999) : '');
	// combobox: drivers_license
	$combo_drivers_license = new Combo;
	$combo_drivers_license->ListType = 2;
	$combo_drivers_license->MultipleSeparator = ', ';
	$combo_drivers_license->ListBoxHeight = 10;
	$combo_drivers_license->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/driver.drivers_license.csv')) {
		$drivers_license_data = addslashes(implode('', @file(__DIR__ . '/hooks/driver.drivers_license.csv')));
		$combo_drivers_license->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($drivers_license_data))));
		$combo_drivers_license->ListData = $combo_drivers_license->ListItem;
	} else {
		$combo_drivers_license->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("Yes;;No"))));
		$combo_drivers_license->ListData = $combo_drivers_license->ListItem;
	}
	$combo_drivers_license->SelectName = 'drivers_license';
	// combobox: drivers_license_expire_date
	$combo_drivers_license_expire_date = new DateCombo;
	$combo_drivers_license_expire_date->DateFormat = "dmy";
	$combo_drivers_license_expire_date->MinYear = defined('driver.drivers_license_expire_date.MinYear') ? constant('driver.drivers_license_expire_date.MinYear') : 1900;
	$combo_drivers_license_expire_date->MaxYear = defined('driver.drivers_license_expire_date.MaxYear') ? constant('driver.drivers_license_expire_date.MaxYear') : 2100;
	$combo_drivers_license_expire_date->DefaultDate = parseMySQLDate('1', '1');
	$combo_drivers_license_expire_date->MonthNames = $Translation['month names'];
	$combo_drivers_license_expire_date->NamePrefix = 'drivers_license_expire_date';
	// combobox: drivers_license_renewal_date
	$combo_drivers_license_renewal_date = new DateCombo;
	$combo_drivers_license_renewal_date->DateFormat = "dmy";
	$combo_drivers_license_renewal_date->MinYear = defined('driver.drivers_license_renewal_date.MinYear') ? constant('driver.drivers_license_renewal_date.MinYear') : 1900;
	$combo_drivers_license_renewal_date->MaxYear = defined('driver.drivers_license_renewal_date.MaxYear') ? constant('driver.drivers_license_renewal_date.MaxYear') : 2100;
	$combo_drivers_license_renewal_date->DefaultDate = parseMySQLDate('1', '1');
	$combo_drivers_license_renewal_date->MonthNames = $Translation['month names'];
	$combo_drivers_license_renewal_date->NamePrefix = 'drivers_license_renewal_date';
	// combobox: drivers_license_penalties
	$combo_drivers_license_penalties = new Combo;
	$combo_drivers_license_penalties->ListType = 2;
	$combo_drivers_license_penalties->MultipleSeparator = ', ';
	$combo_drivers_license_penalties->ListBoxHeight = 10;
	$combo_drivers_license_penalties->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/driver.drivers_license_penalties.csv')) {
		$drivers_license_penalties_data = addslashes(implode('', @file(__DIR__ . '/hooks/driver.drivers_license_penalties.csv')));
		$combo_drivers_license_penalties->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($drivers_license_penalties_data))));
		$combo_drivers_license_penalties->ListData = $combo_drivers_license_penalties->ListItem;
	} else {
		$combo_drivers_license_penalties->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("Yes;;No"))));
		$combo_drivers_license_penalties->ListData = $combo_drivers_license_penalties->ListItem;
	}
	$combo_drivers_license_penalties->SelectName = 'drivers_license_penalties';
	// combobox: drivers_license_penalties_date
	$combo_drivers_license_penalties_date = new DateCombo;
	$combo_drivers_license_penalties_date->DateFormat = "dmy";
	$combo_drivers_license_penalties_date->MinYear = defined('driver.drivers_license_penalties_date.MinYear') ? constant('driver.drivers_license_penalties_date.MinYear') : 1900;
	$combo_drivers_license_penalties_date->MaxYear = defined('driver.drivers_license_penalties_date.MaxYear') ? constant('driver.drivers_license_penalties_date.MaxYear') : 2100;
	$combo_drivers_license_penalties_date->DefaultDate = parseMySQLDate('1', '1');
	$combo_drivers_license_penalties_date->MonthNames = $Translation['month names'];
	$combo_drivers_license_penalties_date->NamePrefix = 'drivers_license_penalties_date';
	// combobox: involved_in_accident
	$combo_involved_in_accident = new Combo;
	$combo_involved_in_accident->ListType = 2;
	$combo_involved_in_accident->MultipleSeparator = ', ';
	$combo_involved_in_accident->ListBoxHeight = 10;
	$combo_involved_in_accident->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/driver.involved_in_accident.csv')) {
		$involved_in_accident_data = addslashes(implode('', @file(__DIR__ . '/hooks/driver.involved_in_accident.csv')));
		$combo_involved_in_accident->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($involved_in_accident_data))));
		$combo_involved_in_accident->ListData = $combo_involved_in_accident->ListItem;
	} else {
		$combo_involved_in_accident->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("Yes;;No"))));
		$combo_involved_in_accident->ListData = $combo_involved_in_accident->ListItem;
	}
	$combo_involved_in_accident->SelectName = 'involved_in_accident';

	if($selected_id) {
		// mm: check member permissions
		if(!$arrPerm['view']) return $Translation['tableAccessDenied'];

		// mm: who is the owner?
		$ownerGroupID = sqlValue("SELECT `groupID` FROM `membership_userrecords` WHERE `tableName`='driver' AND `pkValue`='" . makeSafe($selected_id) . "'");
		$ownerMemberID = sqlValue("SELECT LCASE(`memberID`) FROM `membership_userrecords` WHERE `tableName`='driver' AND `pkValue`='" . makeSafe($selected_id) . "'");

		if($arrPerm['view'] == 1 && getLoggedMemberID() != $ownerMemberID) return $Translation['tableAccessDenied'];
		if($arrPerm['view'] == 2 && getLoggedGroupID() != $ownerGroupID) return $Translation['tableAccessDenied'];

		// can edit?
		$AllowUpdate = 0;
		if(($arrPerm['edit'] == 1 && $ownerMemberID == getLoggedMemberID()) || ($arrPerm['edit'] == 2 && $ownerGroupID == getLoggedGroupID()) || $arrPerm['edit'] == 3) {
			$AllowUpdate = 1;
		}

		$res = sql("SELECT * FROM `driver` WHERE `driver_id`='" . makeSafe($selected_id) . "'", $eo);
		if(!($row = db_fetch_array($res))) {
			return error_message($Translation['No records found'], 'driver_view.php', false);
		}
		$combo_drivers_license->SelectedData = $row['drivers_license'];
		$combo_drivers_license_expire_date->DefaultDate = $row['drivers_license_expire_date'];
		$combo_drivers_license_renewal_date->DefaultDate = $row['drivers_license_renewal_date'];
		$combo_drivers_license_penalties->SelectedData = $row['drivers_license_penalties'];
		$combo_drivers_license_penalties_date->DefaultDate = $row['drivers_license_penalties_date'];
		$combo_involved_in_accident->SelectedData = $row['involved_in_accident'];
		$urow = $row; /* unsanitized data */
		$row = array_map('safe_html', $row);
	} else {
		$filterField = Request::val('FilterField');
		$filterOperator = Request::val('FilterOperator');
		$filterValue = Request::val('FilterValue');
		$combo_drivers_license->SelectedText = (isset($filterField[1]) && $filterField[1] == '6' && $filterOperator[1] == '<=>' ? $filterValue[1] : '');
		$combo_drivers_license_penalties->SelectedText = (isset($filterField[1]) && $filterField[1] == '13' && $filterOperator[1] == '<=>' ? $filterValue[1] : '');
		$combo_involved_in_accident->SelectedText = (isset($filterField[1]) && $filterField[1] == '17' && $filterOperator[1] == '<=>' ? $filterValue[1] : '');
	}
	$combo_drivers_license->Render();
	$combo_drivers_license_penalties->Render();
	$combo_involved_in_accident->Render();

	ob_start();
	?>

	<script>
		// initial lookup values

		jQuery(function() {
			setTimeout(function() {
			}, 50); /* we need to slightly delay client-side execution of the above code to allow AppGini.ajaxCache to work */
		});
	</script>
	<?php

	$lookups = str_replace('__RAND__', $rnd1, ob_get_clean());


	// code for template based detail view forms

	// open the detail view template
	if($dvprint) {
		$template_file = is_file("./{$TemplateDVP}") ? "./{$TemplateDVP}" : './templates/driver_templateDVP.html';
		$templateCode = @file_get_contents($template_file);
	} else {
		$template_file = is_file("./{$TemplateDV}") ? "./{$TemplateDV}" : './templates/driver_templateDV.html';
		$templateCode = @file_get_contents($template_file);
	}

	// process form title
	$templateCode = str_replace('<%%DETAIL_VIEW_TITLE%%>', 'Driver Details:', $templateCode);
	$templateCode = str_replace('<%%RND1%%>', $rnd1, $templateCode);
	$templateCode = str_replace('<%%EMBEDDED%%>', (Request::val('Embedded') ? 'Embedded=1' : ''), $templateCode);
	// process buttons
	if($arrPerm['insert'] && !$selected_id) { // allow insert and no record selected?
		if(!$selected_id) $templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-success" id="insert" name="insert_x" value="1" onclick="return driver_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save New'] . '</button>', $templateCode);
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="insert" name="insert_x" value="1" onclick="return driver_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save As Copy'] . '</button>', $templateCode);
	} else {
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '', $templateCode);
	}

	// 'Back' button action
	if(Request::val('Embedded')) {
		$backAction = 'AppGini.closeParentModal(); return false;';
	} else {
		$backAction = '$j(\'form\').eq(0).attr(\'novalidate\', \'novalidate\'); document.myform.reset(); return true;';
	}

	if($selected_id) {
		if(!Request::val('Embedded')) $templateCode = str_replace('<%%DVPRINT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="dvprint" name="dvprint_x" value="1" onclick="$j(\'form\').eq(0).prop(\'novalidate\', true); document.myform.reset(); return true;" title="' . html_attr($Translation['Print Preview']) . '"><i class="glyphicon glyphicon-print"></i> ' . $Translation['Print Preview'] . '</button>', $templateCode);
		if($AllowUpdate) {
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '<button type="submit" class="btn btn-success btn-lg" id="update" name="update_x" value="1" onclick="return driver_validateData();" title="' . html_attr($Translation['Save Changes']) . '"><i class="glyphicon glyphicon-ok"></i> ' . $Translation['Save Changes'] . '</button>', $templateCode);
		} else {
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		}
		if(($arrPerm['delete'] == 1 && $ownerMemberID == getLoggedMemberID()) || ($arrPerm['delete'] == 2 && $ownerGroupID == getLoggedGroupID()) || $arrPerm['delete'] == 3) { // allow delete?
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '<button type="submit" class="btn btn-danger" id="delete" name="delete_x" value="1" onclick="return confirm(\'' . $Translation['are you sure?'] . '\');" title="' . html_attr($Translation['Delete']) . '"><i class="glyphicon glyphicon-trash"></i> ' . $Translation['Delete'] . '</button>', $templateCode);
		} else {
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		}
		$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>', $templateCode);
	} else {
		$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);

		// if not in embedded mode and user has insert only but no view/update/delete,
		// remove 'back' button
		if(
			$arrPerm['insert']
			&& !$arrPerm['update'] && !$arrPerm['delete'] && !$arrPerm['view']
			&& !Request::val('Embedded')
		)
			$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '', $templateCode);
		elseif($separateDV)
			$templateCode = str_replace(
				'<%%DESELECT_BUTTON%%>', 
				'<button
					type="submit" 
					class="btn btn-default" 
					id="deselect" 
					name="deselect_x" 
					value="1" 
					onclick="' . $backAction . '" 
					title="' . html_attr($Translation['Back']) . '">
						<i class="glyphicon glyphicon-chevron-left"></i> ' .
						$Translation['Back'] .
				'</button>',
				$templateCode
			);
		else
			$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '', $templateCode);
	}

	// set records to read only if user can't insert new records and can't edit current record
	if(($selected_id && !$AllowUpdate) || (!$selected_id && !$AllowInsert)) {
		$jsReadOnly = '';
		$jsReadOnly .= "\tjQuery('#drivers_name_and_surname').replaceWith('<div class=\"form-control-static\" id=\"drivers_name_and_surname\">' + (jQuery('#drivers_name_and_surname').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#drivers_persal_number').replaceWith('<div class=\"form-control-static\" id=\"drivers_persal_number\">' + (jQuery('#drivers_persal_number').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#drivers_contact_details').replaceWith('<div class=\"form-control-static\" id=\"drivers_contact_details\">' + (jQuery('#drivers_contact_details').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#drivers_email_address').replaceWith('<div class=\"form-control-static\" id=\"drivers_email_address\">' + (jQuery('#drivers_email_address').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#drivers_email_address, #drivers_email_address-edit-link').hide();\n";
		$jsReadOnly .= "\tjQuery('input[name=drivers_license]').parent().html('<div class=\"form-control-static\">' + jQuery('input[name=drivers_license]:checked').next().text() + '</div>')\n";
		$jsReadOnly .= "\tjQuery('#drivers_license_code').replaceWith('<div class=\"form-control-static\" id=\"drivers_license_code\">' + (jQuery('#drivers_license_code').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#drivers_license_number').replaceWith('<div class=\"form-control-static\" id=\"drivers_license_number\">' + (jQuery('#drivers_license_number').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#drivers_license_upload').replaceWith('<div class=\"form-control-static\" id=\"drivers_license_upload\">' + (jQuery('#drivers_license_upload').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#drivers_license_upload, #drivers_license_upload-edit-link').hide();\n";
		$jsReadOnly .= "\tjQuery('#drivers_license_expire_date').prop('readonly', true);\n";
		$jsReadOnly .= "\tjQuery('#drivers_license_expire_dateDay, #drivers_license_expire_dateMonth, #drivers_license_expire_dateYear').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#drivers_license_renewal_date').prop('readonly', true);\n";
		$jsReadOnly .= "\tjQuery('#drivers_license_renewal_dateDay, #drivers_license_renewal_dateMonth, #drivers_license_renewal_dateYear').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('input[name=drivers_license_penalties]').parent().html('<div class=\"form-control-static\">' + jQuery('input[name=drivers_license_penalties]:checked').next().text() + '</div>')\n";
		$jsReadOnly .= "\tjQuery('#drivers_license_penalties_date').prop('readonly', true);\n";
		$jsReadOnly .= "\tjQuery('#drivers_license_penalties_dateDay, #drivers_license_penalties_dateMonth, #drivers_license_penalties_dateYear').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#drivers_license_penalty_details_uploads').replaceWith('<div class=\"form-control-static\" id=\"drivers_license_penalty_details_uploads\">' + (jQuery('#drivers_license_penalty_details_uploads').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#drivers_license_penalty_details_uploads, #drivers_license_penalty_details_uploads-edit-link').hide();\n";
		$jsReadOnly .= "\tjQuery('input[name=involved_in_accident]').parent().html('<div class=\"form-control-static\">' + jQuery('input[name=involved_in_accident]:checked').next().text() + '</div>')\n";
		$jsReadOnly .= "\tjQuery('#accident_report').replaceWith('<div class=\"form-control-static\" id=\"accident_report\">' + (jQuery('#accident_report').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#accident_report, #accident_report-edit-link').hide();\n";
		$jsReadOnly .= "\tjQuery('.select2-container').hide();\n";

		$noUploads = true;
	} elseif(($AllowInsert && !$selected_id) || ($AllowUpdate && $selected_id)) {
		$jsEditable = "\tjQuery('form').eq(0).data('already_changed', true);"; // temporarily disable form change handler
		$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', false);"; // re-enable form change handler
	}

	// process combos
	$templateCode = str_replace('<%%COMBO(drivers_license)%%>', $combo_drivers_license->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(drivers_license)%%>', $combo_drivers_license->SelectedData, $templateCode);
	$templateCode = str_replace(
		'<%%COMBO(drivers_license_expire_date)%%>', 
		($selected_id && !$arrPerm['edit'] && ($noSaveAsCopy || !$arrPerm['insert']) ? 
			'<div class="form-control-static">' . $combo_drivers_license_expire_date->GetHTML(true) . '</div>' : 
			$combo_drivers_license_expire_date->GetHTML()
		), $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(drivers_license_expire_date)%%>', $combo_drivers_license_expire_date->GetHTML(true), $templateCode);
	$templateCode = str_replace(
		'<%%COMBO(drivers_license_renewal_date)%%>', 
		($selected_id && !$arrPerm['edit'] && ($noSaveAsCopy || !$arrPerm['insert']) ? 
			'<div class="form-control-static">' . $combo_drivers_license_renewal_date->GetHTML(true) . '</div>' : 
			$combo_drivers_license_renewal_date->GetHTML()
		), $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(drivers_license_renewal_date)%%>', $combo_drivers_license_renewal_date->GetHTML(true), $templateCode);
	$templateCode = str_replace('<%%COMBO(drivers_license_penalties)%%>', $combo_drivers_license_penalties->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(drivers_license_penalties)%%>', $combo_drivers_license_penalties->SelectedData, $templateCode);
	$templateCode = str_replace(
		'<%%COMBO(drivers_license_penalties_date)%%>', 
		($selected_id && !$arrPerm['edit'] && ($noSaveAsCopy || !$arrPerm['insert']) ? 
			'<div class="form-control-static">' . $combo_drivers_license_penalties_date->GetHTML(true) . '</div>' : 
			$combo_drivers_license_penalties_date->GetHTML()
		), $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(drivers_license_penalties_date)%%>', $combo_drivers_license_penalties_date->GetHTML(true), $templateCode);
	$templateCode = str_replace('<%%COMBO(involved_in_accident)%%>', $combo_involved_in_accident->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(involved_in_accident)%%>', $combo_involved_in_accident->SelectedData, $templateCode);

	/* lookup fields array: 'lookup field name' => ['parent table name', 'lookup field caption'] */
	$lookup_fields = [];
	foreach($lookup_fields as $luf => $ptfc) {
		$pt_perm = getTablePermissions($ptfc[0]);

		// process foreign key links
		if($pt_perm['view'] || $pt_perm['edit']) {
			$templateCode = str_replace("<%%PLINK({$luf})%%>", '<button type="button" class="btn btn-default view_parent" id="' . $ptfc[0] . '_view_parent" title="' . html_attr($Translation['View'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-eye-open"></i></button>', $templateCode);
		}

		// if user has insert permission to parent table of a lookup field, put an add new button
		if($pt_perm['insert'] /* && !Request::val('Embedded')*/) {
			$templateCode = str_replace("<%%ADDNEW({$ptfc[0]})%%>", '<button type="button" class="btn btn-default add_new_parent" id="' . $ptfc[0] . '_add_new" title="' . html_attr($Translation['Add New'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-plus text-success"></i></button>', $templateCode);
		}
	}

	// process images
	$templateCode = str_replace('<%%UPLOADFILE(driver_id)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(drivers_name_and_surname)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(drivers_persal_number)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(drivers_contact_details)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(drivers_email_address)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(drivers_license)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(drivers_license_code)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(drivers_license_number)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(drivers_license_upload)%%>', ($noUploads ? '' : "<div>{$Translation['upload image']}</div>" . '<i class="glyphicon glyphicon-remove text-danger clear-upload hidden"></i> <input type="file" name="drivers_license_upload" id="drivers_license_upload" data-filetypes="txt|doc|docx|docm|odt|pdf|rtf" data-maxsize="5242880" accept=".txt,.doc,.docx,.docm,.odt,.pdf,.rtf">'), $templateCode);
	if($AllowUpdate && $row['drivers_license_upload'] != '') {
		$templateCode = str_replace('<%%REMOVEFILE(drivers_license_upload)%%>', '<br><input type="checkbox" name="drivers_license_upload_remove" id="drivers_license_upload_remove" value="1"> <label for="drivers_license_upload_remove" style="color: red; font-weight: bold;">'.$Translation['remove image'].'</label>', $templateCode);
	} else {
		$templateCode = str_replace('<%%REMOVEFILE(drivers_license_upload)%%>', '', $templateCode);
	}
	$templateCode = str_replace('<%%UPLOADFILE(drivers_license_expire_date)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(drivers_license_renewal_date)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(drivers_log_history)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(drivers_license_penalties)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(drivers_license_penalties_date)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(drivers_license_penalty_details)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(drivers_license_penalty_details_uploads)%%>', ($noUploads ? '' : "<div>{$Translation['upload image']}</div>" . '<i class="glyphicon glyphicon-remove text-danger clear-upload hidden"></i> <input type="file" name="drivers_license_penalty_details_uploads" id="drivers_license_penalty_details_uploads" data-filetypes="txt|doc|docx|docm|odt|pdf|rtf" data-maxsize="5242880" accept=".txt,.doc,.docx,.docm,.odt,.pdf,.rtf">'), $templateCode);
	if($AllowUpdate && $row['drivers_license_penalty_details_uploads'] != '') {
		$templateCode = str_replace('<%%REMOVEFILE(drivers_license_penalty_details_uploads)%%>', '<br><input type="checkbox" name="drivers_license_penalty_details_uploads_remove" id="drivers_license_penalty_details_uploads_remove" value="1"> <label for="drivers_license_penalty_details_uploads_remove" style="color: red; font-weight: bold;">'.$Translation['remove image'].'</label>', $templateCode);
	} else {
		$templateCode = str_replace('<%%REMOVEFILE(drivers_license_penalty_details_uploads)%%>', '', $templateCode);
	}
	$templateCode = str_replace('<%%UPLOADFILE(involved_in_accident)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(accident_report)%%>', ($noUploads ? '' : "<div>{$Translation['upload image']}</div>" . '<i class="glyphicon glyphicon-remove text-danger clear-upload hidden"></i> <input type="file" name="accident_report" id="accident_report" data-filetypes="txt|doc|docx|docm|odt|pdf|rtf" data-maxsize="5242880" accept=".txt,.doc,.docx,.docm,.odt,.pdf,.rtf">'), $templateCode);
	if($AllowUpdate && $row['accident_report'] != '') {
		$templateCode = str_replace('<%%REMOVEFILE(accident_report)%%>', '<br><input type="checkbox" name="accident_report_remove" id="accident_report_remove" value="1"> <label for="accident_report_remove" style="color: red; font-weight: bold;">'.$Translation['remove image'].'</label>', $templateCode);
	} else {
		$templateCode = str_replace('<%%REMOVEFILE(accident_report)%%>', '', $templateCode);
	}

	// process values
	if($selected_id) {
		if( $dvprint) $templateCode = str_replace('<%%VALUE(driver_id)%%>', safe_html($urow['driver_id']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(driver_id)%%>', html_attr($row['driver_id']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(driver_id)%%>', urlencode($urow['driver_id']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(drivers_name_and_surname)%%>', safe_html($urow['drivers_name_and_surname']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(drivers_name_and_surname)%%>', html_attr($row['drivers_name_and_surname']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(drivers_name_and_surname)%%>', urlencode($urow['drivers_name_and_surname']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(drivers_persal_number)%%>', safe_html($urow['drivers_persal_number']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(drivers_persal_number)%%>', html_attr($row['drivers_persal_number']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(drivers_persal_number)%%>', urlencode($urow['drivers_persal_number']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(drivers_contact_details)%%>', safe_html($urow['drivers_contact_details']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(drivers_contact_details)%%>', html_attr($row['drivers_contact_details']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(drivers_contact_details)%%>', urlencode($urow['drivers_contact_details']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(drivers_email_address)%%>', safe_html($urow['drivers_email_address']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(drivers_email_address)%%>', html_attr($row['drivers_email_address']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(drivers_email_address)%%>', urlencode($urow['drivers_email_address']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(drivers_license)%%>', safe_html($urow['drivers_license']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(drivers_license)%%>', html_attr($row['drivers_license']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(drivers_license)%%>', urlencode($urow['drivers_license']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(drivers_license_code)%%>', safe_html($urow['drivers_license_code']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(drivers_license_code)%%>', html_attr($row['drivers_license_code']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(drivers_license_code)%%>', urlencode($urow['drivers_license_code']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(drivers_license_number)%%>', safe_html($urow['drivers_license_number']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(drivers_license_number)%%>', html_attr($row['drivers_license_number']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(drivers_license_number)%%>', urlencode($urow['drivers_license_number']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(drivers_license_upload)%%>', safe_html($urow['drivers_license_upload']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(drivers_license_upload)%%>', html_attr($row['drivers_license_upload']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(drivers_license_upload)%%>', urlencode($urow['drivers_license_upload']), $templateCode);
		$templateCode = str_replace('<%%VALUE(drivers_license_expire_date)%%>', app_datetime($row['drivers_license_expire_date']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(drivers_license_expire_date)%%>', urlencode(app_datetime($urow['drivers_license_expire_date'])), $templateCode);
		$templateCode = str_replace('<%%VALUE(drivers_license_renewal_date)%%>', app_datetime($row['drivers_license_renewal_date']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(drivers_license_renewal_date)%%>', urlencode(app_datetime($urow['drivers_license_renewal_date'])), $templateCode);
		if($AllowUpdate || $AllowInsert) {
			$templateCode = str_replace('<%%HTMLAREA(drivers_log_history)%%>', '<textarea name="drivers_log_history" id="drivers_log_history" rows="5">' . safe_html(htmlspecialchars_decode($row['drivers_log_history'])) . '</textarea>', $templateCode);
		} else {
			$templateCode = str_replace('<%%HTMLAREA(drivers_log_history)%%>', '<div id="drivers_log_history" class="form-control-static">' . $row['drivers_log_history'] . '</div>', $templateCode);
		}
		$templateCode = str_replace('<%%VALUE(drivers_log_history)%%>', nl2br($row['drivers_log_history']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(drivers_log_history)%%>', urlencode($urow['drivers_log_history']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(drivers_license_penalties)%%>', safe_html($urow['drivers_license_penalties']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(drivers_license_penalties)%%>', html_attr($row['drivers_license_penalties']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(drivers_license_penalties)%%>', urlencode($urow['drivers_license_penalties']), $templateCode);
		$templateCode = str_replace('<%%VALUE(drivers_license_penalties_date)%%>', app_datetime($row['drivers_license_penalties_date']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(drivers_license_penalties_date)%%>', urlencode(app_datetime($urow['drivers_license_penalties_date'])), $templateCode);
		if($AllowUpdate || $AllowInsert) {
			$templateCode = str_replace('<%%HTMLAREA(drivers_license_penalty_details)%%>', '<textarea name="drivers_license_penalty_details" id="drivers_license_penalty_details" rows="5">' . safe_html(htmlspecialchars_decode($row['drivers_license_penalty_details'])) . '</textarea>', $templateCode);
		} else {
			$templateCode = str_replace('<%%HTMLAREA(drivers_license_penalty_details)%%>', '<div id="drivers_license_penalty_details" class="form-control-static">' . $row['drivers_license_penalty_details'] . '</div>', $templateCode);
		}
		$templateCode = str_replace('<%%VALUE(drivers_license_penalty_details)%%>', nl2br($row['drivers_license_penalty_details']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(drivers_license_penalty_details)%%>', urlencode($urow['drivers_license_penalty_details']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(drivers_license_penalty_details_uploads)%%>', safe_html($urow['drivers_license_penalty_details_uploads']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(drivers_license_penalty_details_uploads)%%>', html_attr($row['drivers_license_penalty_details_uploads']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(drivers_license_penalty_details_uploads)%%>', urlencode($urow['drivers_license_penalty_details_uploads']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(involved_in_accident)%%>', safe_html($urow['involved_in_accident']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(involved_in_accident)%%>', html_attr($row['involved_in_accident']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(involved_in_accident)%%>', urlencode($urow['involved_in_accident']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(accident_report)%%>', safe_html($urow['accident_report']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(accident_report)%%>', html_attr($row['accident_report']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(accident_report)%%>', urlencode($urow['accident_report']), $templateCode);
	} else {
		$templateCode = str_replace('<%%VALUE(driver_id)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(driver_id)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(drivers_name_and_surname)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(drivers_name_and_surname)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(drivers_persal_number)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(drivers_persal_number)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(drivers_contact_details)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(drivers_contact_details)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(drivers_email_address)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(drivers_email_address)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(drivers_license)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(drivers_license)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(drivers_license_code)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(drivers_license_code)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(drivers_license_number)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(drivers_license_number)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(drivers_license_upload)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(drivers_license_upload)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(drivers_license_expire_date)%%>', '1', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(drivers_license_expire_date)%%>', urlencode('1'), $templateCode);
		$templateCode = str_replace('<%%VALUE(drivers_license_renewal_date)%%>', '1', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(drivers_license_renewal_date)%%>', urlencode('1'), $templateCode);
		$templateCode = str_replace('<%%HTMLAREA(drivers_log_history)%%>', '<textarea name="drivers_log_history" id="drivers_log_history" rows="5"></textarea>', $templateCode);
		$templateCode = str_replace('<%%VALUE(drivers_license_penalties)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(drivers_license_penalties)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(drivers_license_penalties_date)%%>', '1', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(drivers_license_penalties_date)%%>', urlencode('1'), $templateCode);
		$templateCode = str_replace('<%%HTMLAREA(drivers_license_penalty_details)%%>', '<textarea name="drivers_license_penalty_details" id="drivers_license_penalty_details" rows="5"></textarea>', $templateCode);
		$templateCode = str_replace('<%%VALUE(drivers_license_penalty_details_uploads)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(drivers_license_penalty_details_uploads)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(involved_in_accident)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(involved_in_accident)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(accident_report)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(accident_report)%%>', urlencode(''), $templateCode);
	}

	// process translations
	$templateCode = parseTemplate($templateCode);

	// clear scrap
	$templateCode = str_replace('<%%', '<!-- ', $templateCode);
	$templateCode = str_replace('%%>', ' -->', $templateCode);

	// hide links to inaccessible tables
	if(Request::val('dvprint_x') == '') {
		$templateCode .= "\n\n<script>\$j(function() {\n";
		$arrTables = getTableList();
		foreach($arrTables as $name => $caption) {
			$templateCode .= "\t\$j('#{$name}_link').removeClass('hidden');\n";
			$templateCode .= "\t\$j('#xs_{$name}_link').removeClass('hidden');\n";
		}

		$templateCode .= $jsReadOnly;
		$templateCode .= $jsEditable;

		if(!$selected_id) {
			$templateCode.="\n\tif(document.getElementById('drivers_email_addressEdit')) { document.getElementById('drivers_email_addressEdit').style.display='inline'; }";
			$templateCode.="\n\tif(document.getElementById('drivers_email_addressEditLink')) { document.getElementById('drivers_email_addressEditLink').style.display='none'; }";
			$templateCode.="\n\tif(document.getElementById('drivers_license_uploadEdit')) { document.getElementById('drivers_license_uploadEdit').style.display='inline'; }";
			$templateCode.="\n\tif(document.getElementById('drivers_license_uploadEditLink')) { document.getElementById('drivers_license_uploadEditLink').style.display='none'; }";
			$templateCode.="\n\tif(document.getElementById('drivers_license_penalty_details_uploadsEdit')) { document.getElementById('drivers_license_penalty_details_uploadsEdit').style.display='inline'; }";
			$templateCode.="\n\tif(document.getElementById('drivers_license_penalty_details_uploadsEditLink')) { document.getElementById('drivers_license_penalty_details_uploadsEditLink').style.display='none'; }";
			$templateCode.="\n\tif(document.getElementById('accident_reportEdit')) { document.getElementById('accident_reportEdit').style.display='inline'; }";
			$templateCode.="\n\tif(document.getElementById('accident_reportEditLink')) { document.getElementById('accident_reportEditLink').style.display='none'; }";
		}

		$templateCode.="\n});</script>\n";
	}

	// ajaxed auto-fill fields
	$templateCode .= '<script>';
	$templateCode .= '$j(function() {';


	$templateCode.="});";
	$templateCode.="</script>";
	$templateCode .= $lookups;

	// handle enforced parent values for read-only lookup fields
	$filterField = Request::val('FilterField');
	$filterOperator = Request::val('FilterOperator');
	$filterValue = Request::val('FilterValue');

	// don't include blank images in lightbox gallery
	$templateCode = preg_replace('/blank.gif" data-lightbox=".*?"/', 'blank.gif"', $templateCode);

	// don't display empty email links
	$templateCode=preg_replace('/<a .*?href="mailto:".*?<\/a>/', '', $templateCode);

	/* default field values */
	$rdata = $jdata = get_defaults('driver');
	if($selected_id) {
		$jdata = get_joined_record('driver', $selected_id);
		if($jdata === false) $jdata = get_defaults('driver');
		$rdata = $row;
	}
	$templateCode .= loadView('driver-ajax-cache', ['rdata' => $rdata, 'jdata' => $jdata]);

	// hook: driver_dv
	if(function_exists('driver_dv')) {
		$args = [];
		driver_dv(($selected_id ? $selected_id : FALSE), getMemberInfo(), $templateCode, $args);
	}

	return $templateCode;
}