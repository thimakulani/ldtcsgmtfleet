<?php

// Data functions (insert, update, delete, form) for table tyre_log_sheet

// This script and data application were generated by AppGini 22.13
// Download AppGini for free from https://bigprof.com/appgini/download/

function tyre_log_sheet_insert(&$error_message = '') {
	global $Translation;

	// mm: can member insert record?
	$arrPerm = getTablePermissions('tyre_log_sheet');
	if(!$arrPerm['insert']) return false;

	$data = [
		'vehicle_registration_number' => Request::lookup('vehicle_registration_number', ''),
		'tyre_position' => Request::val('tyre_position', ''),
		'tyre_tread_condition' => Request::val('tyre_tread_condition', ''),
		'tyre_brand' => Request::val('tyre_brand', ''),
		'tyre_model' => Request::val('tyre_model', ''),
		'tyre_size' => Request::val('tyre_size', ''),
		'tyre_pressure' => Request::val('tyre_pressure', ''),
		'action' => Request::val('action', ''),
		'warranty' => Request::val('warranty', ''),
		'documents' => Request::fileUpload('documents', [
			'maxSize' => 5242880,
			'types' => 'txt|doc|docx|docm|odt|pdf|rtf',
			'noRename' => true,
			'dir' => '',
			'success' => function($name, $selected_id) {
			},
			'failure' => function($selected_id, $fileRemoved) {
				if(!strlen(Request::val('SelectedID'))) return '';

				/* for empty upload fields, when saving a copy of an existing record, copy the original upload field */
				return existing_value('tyre_log_sheet', 'documents', Request::val('SelectedID'));
			},
		]),
		'tyre_tread' => Request::val('tyre_tread', ''),
		'tyre_maximum_wear' => Request::val('tyre_maximum_wear', ''),
		'inspection_date' => Request::dateComponents('inspection_date', '0000-00-00'),
		'tyre_inspection_done_by' => Request::val('tyre_inspection_done_by', ''),
		'tyre_inspection_report' => Request::fileUpload('tyre_inspection_report', [
			'maxSize' => 5242880,
			'types' => 'txt|doc|docx|docm|odt|pdf|rtf',
			'noRename' => true,
			'dir' => '',
			'success' => function($name, $selected_id) {
			},
			'failure' => function($selected_id, $fileRemoved) {
				if(!strlen(Request::val('SelectedID'))) return '';

				/* for empty upload fields, when saving a copy of an existing record, copy the original upload field */
				return existing_value('tyre_log_sheet', 'tyre_inspection_report', Request::val('SelectedID'));
			},
		]),
		'status' => Request::val('status', ''),
		'opening_km' => Request::val('opening_km', ''),
		'closing_km' => Request::val('closing_km', ''),
		'total_km' => Request::val('total_km', ''),
		'comments' => Request::val('comments', ''),
		'tyres_cause_of_accident' => Request::val('tyres_cause_of_accident', ''),
		'accident_report' => Request::fileUpload('accident_report', [
			'maxSize' => 5242880,
			'types' => 'txt|doc|docx|docm|odt|pdf|rtf',
			'noRename' => true,
			'dir' => '',
			'success' => function($name, $selected_id) {
			},
			'failure' => function($selected_id, $fileRemoved) {
				if(!strlen(Request::val('SelectedID'))) return '';

				/* for empty upload fields, when saving a copy of an existing record, copy the original upload field */
				return existing_value('tyre_log_sheet', 'accident_report', Request::val('SelectedID'));
			},
		]),
		'claims_report' => Request::fileUpload('claims_report', [
			'maxSize' => 5242880,
			'types' => 'txt|doc|docx|docm|odt|pdf|rtf',
			'noRename' => false,
			'dir' => '',
			'success' => function($name, $selected_id) {
			},
			'failure' => function($selected_id, $fileRemoved) {
				if(!strlen(Request::val('SelectedID'))) return '';

				/* for empty upload fields, when saving a copy of an existing record, copy the original upload field */
				return existing_value('tyre_log_sheet', 'claims_report', Request::val('SelectedID'));
			},
		]),
		'insurance_claims_report' => Request::fileUpload('insurance_claims_report', [
			'maxSize' => 5242880,
			'types' => 'txt|doc|docx|docm|odt|pdf|rtf',
			'noRename' => false,
			'dir' => '',
			'success' => function($name, $selected_id) {
			},
			'failure' => function($selected_id, $fileRemoved) {
				if(!strlen(Request::val('SelectedID'))) return '';

				/* for empty upload fields, when saving a copy of an existing record, copy the original upload field */
				return existing_value('tyre_log_sheet', 'insurance_claims_report', Request::val('SelectedID'));
			},
		]),
		'reminder_maximum_wear' => Request::val('reminder_maximum_wear', ''),
	];


	// hook: tyre_log_sheet_before_insert
	if(function_exists('tyre_log_sheet_before_insert')) {
		$args = [];
		if(!tyre_log_sheet_before_insert($data, getMemberInfo(), $args)) {
			if(isset($args['error_message'])) $error_message = $args['error_message'];
			return false;
		}
	}

	$error = '';
	// set empty fields to NULL
	$data = array_map(function($v) { return ($v === '' ? NULL : $v); }, $data);
	insert('tyre_log_sheet', backtick_keys_once($data), $error);
	if($error) {
		$error_message = $error;
		return false;
	}

	$recID = db_insert_id(db_link());

	update_calc_fields('tyre_log_sheet', $recID, calculated_fields()['tyre_log_sheet']);

	// hook: tyre_log_sheet_after_insert
	if(function_exists('tyre_log_sheet_after_insert')) {
		$res = sql("SELECT * FROM `tyre_log_sheet` WHERE `tyre_log_id`='" . makeSafe($recID, false) . "' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)) {
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = makeSafe($recID, false);
		$args = [];
		if(!tyre_log_sheet_after_insert($data, getMemberInfo(), $args)) { return $recID; }
	}

	// mm: save ownership data
	set_record_owner('tyre_log_sheet', $recID, getLoggedMemberID());

	// if this record is a copy of another record, copy children if applicable
	if(strlen(Request::val('SelectedID'))) tyre_log_sheet_copy_children($recID, Request::val('SelectedID'));

	return $recID;
}

function tyre_log_sheet_copy_children($destination_id, $source_id) {
	global $Translation;
	$requests = []; // array of curl handlers for launching insert requests
	$eo = ['silentErrors' => true];
	$safe_sid = makeSafe($source_id);

	// launch requests, asynchronously
	curl_batch($requests);
}

function tyre_log_sheet_delete($selected_id, $AllowDeleteOfParents = false, $skipChecks = false) {
	// insure referential integrity ...
	global $Translation;
	$selected_id = makeSafe($selected_id);

	// mm: can member delete record?
	if(!check_record_permission('tyre_log_sheet', $selected_id, 'delete')) {
		return $Translation['You don\'t have enough permissions to delete this record'];
	}

	// hook: tyre_log_sheet_before_delete
	if(function_exists('tyre_log_sheet_before_delete')) {
		$args = [];
		if(!tyre_log_sheet_before_delete($selected_id, $skipChecks, getMemberInfo(), $args))
			return $Translation['Couldn\'t delete this record'] . (
				!empty($args['error_message']) ?
					'<div class="text-bold">' . strip_tags($args['error_message']) . '</div>'
					: '' 
			);
	}

	// child table: vehicle_history
	$res = sql("SELECT `tyre_log_id` FROM `tyre_log_sheet` WHERE `tyre_log_id`='{$selected_id}'", $eo);
	$tyre_log_id = db_fetch_row($res);
	$rires = sql("SELECT COUNT(1) FROM `vehicle_history` WHERE `tyre_inspection_report`='" . makeSafe($tyre_log_id[0]) . "'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'vehicle_history', $RetMsg);
		return $RetMsg;
	} elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation['confirm delete'];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'vehicle_history', $RetMsg);
		$RetMsg = str_replace('<Delete>', '<input type="button" class="btn btn-danger" value="' . html_attr($Translation['yes']) . '" onClick="window.location = \'tyre_log_sheet_view.php?SelectedID=' . urlencode($selected_id) . '&delete_x=1&confirmed=1&csrf_token=' . urlencode(csrf_token(false, true)) . '\';">', $RetMsg);
		$RetMsg = str_replace('<Cancel>', '<input type="button" class="btn btn-success" value="' . html_attr($Translation[ 'no']) . '" onClick="window.location = \'tyre_log_sheet_view.php?SelectedID=' . urlencode($selected_id) . '\';">', $RetMsg);
		return $RetMsg;
	}

	sql("DELETE FROM `tyre_log_sheet` WHERE `tyre_log_id`='{$selected_id}'", $eo);

	// hook: tyre_log_sheet_after_delete
	if(function_exists('tyre_log_sheet_after_delete')) {
		$args = [];
		tyre_log_sheet_after_delete($selected_id, getMemberInfo(), $args);
	}

	// mm: delete ownership data
	sql("DELETE FROM `membership_userrecords` WHERE `tableName`='tyre_log_sheet' AND `pkValue`='{$selected_id}'", $eo);
}

function tyre_log_sheet_update(&$selected_id, &$error_message = '') {
	global $Translation;

	// mm: can member edit record?
	if(!check_record_permission('tyre_log_sheet', $selected_id, 'edit')) return false;

	$data = [
		'vehicle_registration_number' => Request::lookup('vehicle_registration_number', ''),
		'tyre_position' => Request::val('tyre_position', ''),
		'tyre_tread_condition' => Request::val('tyre_tread_condition', ''),
		'tyre_brand' => Request::val('tyre_brand', ''),
		'tyre_model' => Request::val('tyre_model', ''),
		'tyre_size' => Request::val('tyre_size', ''),
		'tyre_pressure' => Request::val('tyre_pressure', ''),
		'action' => Request::val('action', ''),
		'warranty' => Request::val('warranty', ''),
		'documents' => Request::fileUpload('documents', [
			'maxSize' => 5242880,
			'types' => 'txt|doc|docx|docm|odt|pdf|rtf',
			'noRename' => true,
			'dir' => '',
			'id' => $selected_id,
			'success' => function($name, $selected_id) {
			},
			'removeOnRequest' => true,
			'remove' => function($selected_id) {
				// do nothing: preserve removed files on server.
			},
			'failure' => function($selected_id, $fileRemoved) {
				if($fileRemoved) return '';
				return existing_value('tyre_log_sheet', 'documents', $selected_id);
			},
		]),
		'tyre_tread' => Request::val('tyre_tread', ''),
		'tyre_maximum_wear' => Request::val('tyre_maximum_wear', ''),
		'inspection_date' => Request::dateComponents('inspection_date', ''),
		'tyre_inspection_done_by' => Request::val('tyre_inspection_done_by', ''),
		'tyre_inspection_report' => Request::fileUpload('tyre_inspection_report', [
			'maxSize' => 5242880,
			'types' => 'txt|doc|docx|docm|odt|pdf|rtf',
			'noRename' => true,
			'dir' => '',
			'id' => $selected_id,
			'success' => function($name, $selected_id) {
			},
			'removeOnRequest' => true,
			'remove' => function($selected_id) {
				// do nothing: preserve removed files on server.
			},
			'failure' => function($selected_id, $fileRemoved) {
				if($fileRemoved) return '';
				return existing_value('tyre_log_sheet', 'tyre_inspection_report', $selected_id);
			},
		]),
		'status' => Request::val('status', ''),
		'opening_km' => Request::val('opening_km', ''),
		'closing_km' => Request::val('closing_km', ''),
		'total_km' => Request::val('total_km', ''),
		'comments' => Request::val('comments', ''),
		'tyres_cause_of_accident' => Request::val('tyres_cause_of_accident', ''),
		'accident_report' => Request::fileUpload('accident_report', [
			'maxSize' => 5242880,
			'types' => 'txt|doc|docx|docm|odt|pdf|rtf',
			'noRename' => true,
			'dir' => '',
			'id' => $selected_id,
			'success' => function($name, $selected_id) {
			},
			'removeOnRequest' => true,
			'remove' => function($selected_id) {
				// do nothing: preserve removed files on server.
			},
			'failure' => function($selected_id, $fileRemoved) {
				if($fileRemoved) return '';
				return existing_value('tyre_log_sheet', 'accident_report', $selected_id);
			},
		]),
		'claims_report' => Request::fileUpload('claims_report', [
			'maxSize' => 5242880,
			'types' => 'txt|doc|docx|docm|odt|pdf|rtf',
			'noRename' => false,
			'dir' => '',
			'id' => $selected_id,
			'success' => function($name, $selected_id) {
			},
			'removeOnRequest' => true,
			'remove' => function($selected_id) {
				// do nothing: preserve removed files on server.
			},
			'failure' => function($selected_id, $fileRemoved) {
				if($fileRemoved) return '';
				return existing_value('tyre_log_sheet', 'claims_report', $selected_id);
			},
		]),
		'insurance_claims_report' => Request::fileUpload('insurance_claims_report', [
			'maxSize' => 5242880,
			'types' => 'txt|doc|docx|docm|odt|pdf|rtf',
			'noRename' => false,
			'dir' => '',
			'id' => $selected_id,
			'success' => function($name, $selected_id) {
			},
			'removeOnRequest' => true,
			'remove' => function($selected_id) {
				// do nothing: preserve removed files on server.
			},
			'failure' => function($selected_id, $fileRemoved) {
				if($fileRemoved) return '';
				return existing_value('tyre_log_sheet', 'insurance_claims_report', $selected_id);
			},
		]),
		'reminder_maximum_wear' => Request::val('reminder_maximum_wear', ''),
	];

	// get existing values
	$old_data = getRecord('tyre_log_sheet', $selected_id);
	if(is_array($old_data)) {
		$old_data = array_map('makeSafe', $old_data);
		$old_data['selectedID'] = makeSafe($selected_id);
	}

	$data['selectedID'] = makeSafe($selected_id);

	// hook: tyre_log_sheet_before_update
	if(function_exists('tyre_log_sheet_before_update')) {
		$args = ['old_data' => $old_data];
		if(!tyre_log_sheet_before_update($data, getMemberInfo(), $args)) {
			if(isset($args['error_message'])) $error_message = $args['error_message'];
			return false;
		}
	}

	$set = $data; unset($set['selectedID']);
	foreach ($set as $field => $value) {
		$set[$field] = ($value !== '' && $value !== NULL) ? $value : NULL;
	}

	if(!update(
		'tyre_log_sheet', 
		backtick_keys_once($set), 
		['`tyre_log_id`' => $selected_id], 
		$error_message
	)) {
		echo $error_message;
		echo '<a href="tyre_log_sheet_view.php?SelectedID=' . urlencode($selected_id) . "\">{$Translation['< back']}</a>";
		exit;
	}


	$eo = ['silentErrors' => true];

	update_calc_fields('tyre_log_sheet', $data['selectedID'], calculated_fields()['tyre_log_sheet']);

	// hook: tyre_log_sheet_after_update
	if(function_exists('tyre_log_sheet_after_update')) {
		$res = sql("SELECT * FROM `tyre_log_sheet` WHERE `tyre_log_id`='{$data['selectedID']}' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)) $data = array_map('makeSafe', $row);

		$data['selectedID'] = $data['tyre_log_id'];
		$args = ['old_data' => $old_data];
		if(!tyre_log_sheet_after_update($data, getMemberInfo(), $args)) return;
	}

	// mm: update ownership data
	sql("UPDATE `membership_userrecords` SET `dateUpdated`='" . time() . "' WHERE `tableName`='tyre_log_sheet' AND `pkValue`='" . makeSafe($selected_id) . "'", $eo);
}

function tyre_log_sheet_form($selected_id = '', $AllowUpdate = 1, $AllowInsert = 1, $AllowDelete = 1, $separateDV = 0, $TemplateDV = '', $TemplateDVP = '') {
	// function to return an editable form for a table records
	// and fill it with data of record whose ID is $selected_id. If $selected_id
	// is empty, an empty form is shown, with only an 'Add New'
	// button displayed.

	global $Translation;
	$eo = ['silentErrors' => true];
	$noUploads = null;
	$row = $urow = $jsReadOnly = $jsEditable = $lookups = null;

	$noSaveAsCopy = true;

	// mm: get table permissions
	$arrPerm = getTablePermissions('tyre_log_sheet');
	if(!$arrPerm['insert'] && $selected_id == '')
		// no insert permission and no record selected
		// so show access denied error unless TVDV
		return $separateDV ? $Translation['tableAccessDenied'] : '';
	$AllowInsert = ($arrPerm['insert'] ? true : false);
	// print preview?
	$dvprint = false;
	if(strlen($selected_id) && Request::val('dvprint_x') != '') {
		$dvprint = true;
	}

	$filterer_vehicle_registration_number = Request::val('filterer_vehicle_registration_number');

	// populate filterers, starting from children to grand-parents

	// unique random identifier
	$rnd1 = ($dvprint ? rand(1000000, 9999999) : '');
	// combobox: vehicle_registration_number
	$combo_vehicle_registration_number = new DataCombo;
	// combobox: tyre_position
	$combo_tyre_position = new Combo;
	$combo_tyre_position->ListType = 0;
	$combo_tyre_position->MultipleSeparator = ', ';
	$combo_tyre_position->ListBoxHeight = 10;
	$combo_tyre_position->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/tyre_log_sheet.tyre_position.csv')) {
		$tyre_position_data = addslashes(implode('', @file(__DIR__ . '/hooks/tyre_log_sheet.tyre_position.csv')));
		$combo_tyre_position->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($tyre_position_data))));
		$combo_tyre_position->ListData = $combo_tyre_position->ListItem;
	} else {
		$combo_tyre_position->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("Front Left;; Front Right;; Rear Left;; Rear Right"))));
		$combo_tyre_position->ListData = $combo_tyre_position->ListItem;
	}
	$combo_tyre_position->SelectName = 'tyre_position';
	// combobox: tyre_tread_condition
	$combo_tyre_tread_condition = new Combo;
	$combo_tyre_tread_condition->ListType = 0;
	$combo_tyre_tread_condition->MultipleSeparator = ', ';
	$combo_tyre_tread_condition->ListBoxHeight = 10;
	$combo_tyre_tread_condition->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/tyre_log_sheet.tyre_tread_condition.csv')) {
		$tyre_tread_condition_data = addslashes(implode('', @file(__DIR__ . '/hooks/tyre_log_sheet.tyre_tread_condition.csv')));
		$combo_tyre_tread_condition->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($tyre_tread_condition_data))));
		$combo_tyre_tread_condition->ListData = $combo_tyre_tread_condition->ListItem;
	} else {
		$combo_tyre_tread_condition->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("Excellent;; Good;; Medium;; Poor"))));
		$combo_tyre_tread_condition->ListData = $combo_tyre_tread_condition->ListItem;
	}
	$combo_tyre_tread_condition->SelectName = 'tyre_tread_condition';
	// combobox: action
	$combo_action = new Combo;
	$combo_action->ListType = 0;
	$combo_action->MultipleSeparator = ', ';
	$combo_action->ListBoxHeight = 10;
	$combo_action->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/tyre_log_sheet.action.csv')) {
		$action_data = addslashes(implode('', @file(__DIR__ . '/hooks/tyre_log_sheet.action.csv')));
		$combo_action->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($action_data))));
		$combo_action->ListData = $combo_action->ListItem;
	} else {
		$combo_action->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("Mount;; Inspection;; Scrap;; Dismount"))));
		$combo_action->ListData = $combo_action->ListItem;
	}
	$combo_action->SelectName = 'action';
	// combobox: warranty
	$combo_warranty = new Combo;
	$combo_warranty->ListType = 0;
	$combo_warranty->MultipleSeparator = ', ';
	$combo_warranty->ListBoxHeight = 10;
	$combo_warranty->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/tyre_log_sheet.warranty.csv')) {
		$warranty_data = addslashes(implode('', @file(__DIR__ . '/hooks/tyre_log_sheet.warranty.csv')));
		$combo_warranty->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($warranty_data))));
		$combo_warranty->ListData = $combo_warranty->ListItem;
	} else {
		$combo_warranty->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("1 Year;; 2 Years;; 3 Years;; 10 000 km;; 15 000 km;; 20 000 km;; 25 000 km;; 30 000 km;; 40 000km;; 50 000 km;; 60 000 km;; 70 000 km;; Expire"))));
		$combo_warranty->ListData = $combo_warranty->ListItem;
	}
	$combo_warranty->SelectName = 'warranty';
	// combobox: inspection_date
	$combo_inspection_date = new DateCombo;
	$combo_inspection_date->DateFormat = "dmy";
	$combo_inspection_date->MinYear = defined('tyre_log_sheet.inspection_date.MinYear') ? constant('tyre_log_sheet.inspection_date.MinYear') : 1900;
	$combo_inspection_date->MaxYear = defined('tyre_log_sheet.inspection_date.MaxYear') ? constant('tyre_log_sheet.inspection_date.MaxYear') : 2100;
	$combo_inspection_date->DefaultDate = parseMySQLDate('0000-00-00', '0000-00-00');
	$combo_inspection_date->MonthNames = $Translation['month names'];
	$combo_inspection_date->NamePrefix = 'inspection_date';
	// combobox: status
	$combo_status = new Combo;
	$combo_status->ListType = 2;
	$combo_status->MultipleSeparator = ', ';
	$combo_status->ListBoxHeight = 10;
	$combo_status->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/tyre_log_sheet.status.csv')) {
		$status_data = addslashes(implode('', @file(__DIR__ . '/hooks/tyre_log_sheet.status.csv')));
		$combo_status->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($status_data))));
		$combo_status->ListData = $combo_status->ListItem;
	} else {
		$combo_status->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("In use;; Retire"))));
		$combo_status->ListData = $combo_status->ListItem;
	}
	$combo_status->SelectName = 'status';
	// combobox: tyres_cause_of_accident
	$combo_tyres_cause_of_accident = new Combo;
	$combo_tyres_cause_of_accident->ListType = 2;
	$combo_tyres_cause_of_accident->MultipleSeparator = ', ';
	$combo_tyres_cause_of_accident->ListBoxHeight = 10;
	$combo_tyres_cause_of_accident->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/tyre_log_sheet.tyres_cause_of_accident.csv')) {
		$tyres_cause_of_accident_data = addslashes(implode('', @file(__DIR__ . '/hooks/tyre_log_sheet.tyres_cause_of_accident.csv')));
		$combo_tyres_cause_of_accident->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($tyres_cause_of_accident_data))));
		$combo_tyres_cause_of_accident->ListData = $combo_tyres_cause_of_accident->ListItem;
	} else {
		$combo_tyres_cause_of_accident->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("No;; Yes"))));
		$combo_tyres_cause_of_accident->ListData = $combo_tyres_cause_of_accident->ListItem;
	}
	$combo_tyres_cause_of_accident->SelectName = 'tyres_cause_of_accident';
	// combobox: reminder_maximum_wear
	$combo_reminder_maximum_wear = new Combo;
	$combo_reminder_maximum_wear->ListType = 2;
	$combo_reminder_maximum_wear->MultipleSeparator = ', ';
	$combo_reminder_maximum_wear->ListBoxHeight = 10;
	$combo_reminder_maximum_wear->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/tyre_log_sheet.reminder_maximum_wear.csv')) {
		$reminder_maximum_wear_data = addslashes(implode('', @file(__DIR__ . '/hooks/tyre_log_sheet.reminder_maximum_wear.csv')));
		$combo_reminder_maximum_wear->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($reminder_maximum_wear_data))));
		$combo_reminder_maximum_wear->ListData = $combo_reminder_maximum_wear->ListItem;
	} else {
		$combo_reminder_maximum_wear->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("Yes;;No"))));
		$combo_reminder_maximum_wear->ListData = $combo_reminder_maximum_wear->ListItem;
	}
	$combo_reminder_maximum_wear->SelectName = 'reminder_maximum_wear';

	if($selected_id) {
		// mm: check member permissions
		if(!$arrPerm['view']) return $Translation['tableAccessDenied'];

		// mm: who is the owner?
		$ownerGroupID = sqlValue("SELECT `groupID` FROM `membership_userrecords` WHERE `tableName`='tyre_log_sheet' AND `pkValue`='" . makeSafe($selected_id) . "'");
		$ownerMemberID = sqlValue("SELECT LCASE(`memberID`) FROM `membership_userrecords` WHERE `tableName`='tyre_log_sheet' AND `pkValue`='" . makeSafe($selected_id) . "'");

		if($arrPerm['view'] == 1 && getLoggedMemberID() != $ownerMemberID) return $Translation['tableAccessDenied'];
		if($arrPerm['view'] == 2 && getLoggedGroupID() != $ownerGroupID) return $Translation['tableAccessDenied'];

		// can edit?
		$AllowUpdate = 0;
		if(($arrPerm['edit'] == 1 && $ownerMemberID == getLoggedMemberID()) || ($arrPerm['edit'] == 2 && $ownerGroupID == getLoggedGroupID()) || $arrPerm['edit'] == 3) {
			$AllowUpdate = 1;
		}

		$res = sql("SELECT * FROM `tyre_log_sheet` WHERE `tyre_log_id`='" . makeSafe($selected_id) . "'", $eo);
		if(!($row = db_fetch_array($res))) {
			return error_message($Translation['No records found'], 'tyre_log_sheet_view.php', false);
		}
		$combo_vehicle_registration_number->SelectedData = $row['vehicle_registration_number'];
		$combo_tyre_position->SelectedData = $row['tyre_position'];
		$combo_tyre_tread_condition->SelectedData = $row['tyre_tread_condition'];
		$combo_action->SelectedData = $row['action'];
		$combo_warranty->SelectedData = $row['warranty'];
		$combo_inspection_date->DefaultDate = $row['inspection_date'];
		$combo_status->SelectedData = $row['status'];
		$combo_tyres_cause_of_accident->SelectedData = $row['tyres_cause_of_accident'];
		$combo_reminder_maximum_wear->SelectedData = $row['reminder_maximum_wear'];
		$urow = $row; /* unsanitized data */
		$row = array_map('safe_html', $row);
	} else {
		$filterField = Request::val('FilterField');
		$filterOperator = Request::val('FilterOperator');
		$filterValue = Request::val('FilterValue');
		$combo_vehicle_registration_number->SelectedData = $filterer_vehicle_registration_number;
		$combo_tyre_position->SelectedText = (isset($filterField[1]) && $filterField[1] == '3' && $filterOperator[1] == '<=>' ? $filterValue[1] : '');
		$combo_tyre_tread_condition->SelectedText = (isset($filterField[1]) && $filterField[1] == '4' && $filterOperator[1] == '<=>' ? $filterValue[1] : '');
		$combo_action->SelectedText = (isset($filterField[1]) && $filterField[1] == '9' && $filterOperator[1] == '<=>' ? $filterValue[1] : '');
		$combo_warranty->SelectedText = (isset($filterField[1]) && $filterField[1] == '10' && $filterOperator[1] == '<=>' ? $filterValue[1] : '');
		$combo_status->SelectedText = (isset($filterField[1]) && $filterField[1] == '17' && $filterOperator[1] == '<=>' ? $filterValue[1] : '');
		$combo_tyres_cause_of_accident->SelectedText = (isset($filterField[1]) && $filterField[1] == '22' && $filterOperator[1] == '<=>' ? $filterValue[1] : '');
		$combo_reminder_maximum_wear->SelectedText = (isset($filterField[1]) && $filterField[1] == '26' && $filterOperator[1] == '<=>' ? $filterValue[1] : '');
	}
	$combo_vehicle_registration_number->HTML = '<span id="vehicle_registration_number-container' . $rnd1 . '"></span><input type="hidden" name="vehicle_registration_number" id="vehicle_registration_number' . $rnd1 . '" value="' . html_attr($combo_vehicle_registration_number->SelectedData) . '">';
	$combo_vehicle_registration_number->MatchText = '<span id="vehicle_registration_number-container-readonly' . $rnd1 . '"></span><input type="hidden" name="vehicle_registration_number" id="vehicle_registration_number' . $rnd1 . '" value="' . html_attr($combo_vehicle_registration_number->SelectedData) . '">';
	$combo_tyre_position->Render();
	$combo_tyre_tread_condition->Render();
	$combo_action->Render();
	$combo_warranty->Render();
	$combo_status->Render();
	$combo_tyres_cause_of_accident->Render();
	$combo_reminder_maximum_wear->Render();

	ob_start();
	?>

	<script>
		// initial lookup values
		AppGini.current_vehicle_registration_number__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['vehicle_registration_number'] : htmlspecialchars($filterer_vehicle_registration_number, ENT_QUOTES)); ?>"};

		jQuery(function() {
			setTimeout(function() {
				if(typeof(vehicle_registration_number_reload__RAND__) == 'function') vehicle_registration_number_reload__RAND__();
			}, 50); /* we need to slightly delay client-side execution of the above code to allow AppGini.ajaxCache to work */
		});
		function vehicle_registration_number_reload__RAND__() {
		<?php if(($AllowUpdate || ($arrPerm['insert'] && !$selected_id)) && !$dvprint) { ?>

			$j("#vehicle_registration_number-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_vehicle_registration_number__RAND__.value, t: 'tyre_log_sheet', f: 'vehicle_registration_number' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="vehicle_registration_number"]').val(resp.results[0].id);
							$j('[id=vehicle_registration_number-container-readonly__RAND__]').html('<span class="match-text" id="vehicle_registration_number-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=gmt_fleet_register_view_parent]').hide(); } else { $j('.btn[id=gmt_fleet_register_view_parent]').show(); }


							if(typeof(vehicle_registration_number_update_autofills__RAND__) == 'function') vehicle_registration_number_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'tyre_log_sheet', f: 'vehicle_registration_number' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_vehicle_registration_number__RAND__.value = e.added.id;
				AppGini.current_vehicle_registration_number__RAND__.text = e.added.text;
				$j('[name="vehicle_registration_number"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=gmt_fleet_register_view_parent]').hide(); } else { $j('.btn[id=gmt_fleet_register_view_parent]').show(); }


				if(typeof(vehicle_registration_number_update_autofills__RAND__) == 'function') vehicle_registration_number_update_autofills__RAND__();
			});

			if(!$j("#vehicle_registration_number-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_vehicle_registration_number__RAND__.value, t: 'tyre_log_sheet', f: 'vehicle_registration_number' },
					success: function(resp) {
						$j('[name="vehicle_registration_number"]').val(resp.results[0].id);
						$j('[id=vehicle_registration_number-container-readonly__RAND__]').html('<span class="match-text" id="vehicle_registration_number-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=gmt_fleet_register_view_parent]').hide(); } else { $j('.btn[id=gmt_fleet_register_view_parent]').show(); }

						if(typeof(vehicle_registration_number_update_autofills__RAND__) == 'function') vehicle_registration_number_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_vehicle_registration_number__RAND__.value, t: 'tyre_log_sheet', f: 'vehicle_registration_number' },
				success: function(resp) {
					$j('[id=vehicle_registration_number-container__RAND__], [id=vehicle_registration_number-container-readonly__RAND__]').html('<span class="match-text" id="vehicle_registration_number-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=gmt_fleet_register_view_parent]').hide(); } else { $j('.btn[id=gmt_fleet_register_view_parent]').show(); }

					if(typeof(vehicle_registration_number_update_autofills__RAND__) == 'function') vehicle_registration_number_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
	</script>
	<?php

	$lookups = str_replace('__RAND__', $rnd1, ob_get_clean());


	// code for template based detail view forms

	// open the detail view template
	if($dvprint) {
		$template_file = is_file("./{$TemplateDVP}") ? "./{$TemplateDVP}" : './templates/tyre_log_sheet_templateDVP.html';
		$templateCode = @file_get_contents($template_file);
	} else {
		$template_file = is_file("./{$TemplateDV}") ? "./{$TemplateDV}" : './templates/tyre_log_sheet_templateDV.html';
		$templateCode = @file_get_contents($template_file);
	}

	// process form title
	$templateCode = str_replace('<%%DETAIL_VIEW_TITLE%%>', 'Tyre Details:', $templateCode);
	$templateCode = str_replace('<%%RND1%%>', $rnd1, $templateCode);
	$templateCode = str_replace('<%%EMBEDDED%%>', (Request::val('Embedded') ? 'Embedded=1' : ''), $templateCode);
	// process buttons
	if($arrPerm['insert'] && !$selected_id) { // allow insert and no record selected?
		if(!$selected_id) $templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-success" id="insert" name="insert_x" value="1" onclick="return tyre_log_sheet_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save New'] . '</button>', $templateCode);
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="insert" name="insert_x" value="1" onclick="return tyre_log_sheet_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save As Copy'] . '</button>', $templateCode);
	} else {
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '', $templateCode);
	}

	// 'Back' button action
	if(Request::val('Embedded')) {
		$backAction = 'AppGini.closeParentModal(); return false;';
	} else {
		$backAction = '$j(\'form\').eq(0).attr(\'novalidate\', \'novalidate\'); document.myform.reset(); return true;';
	}

	if($selected_id) {
		if(!Request::val('Embedded')) $templateCode = str_replace('<%%DVPRINT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="dvprint" name="dvprint_x" value="1" onclick="$j(\'form\').eq(0).prop(\'novalidate\', true); document.myform.reset(); return true;" title="' . html_attr($Translation['Print Preview']) . '"><i class="glyphicon glyphicon-print"></i> ' . $Translation['Print Preview'] . '</button>', $templateCode);
		if($AllowUpdate) {
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '<button type="submit" class="btn btn-success btn-lg" id="update" name="update_x" value="1" onclick="return tyre_log_sheet_validateData();" title="' . html_attr($Translation['Save Changes']) . '"><i class="glyphicon glyphicon-ok"></i> ' . $Translation['Save Changes'] . '</button>', $templateCode);
		} else {
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		}
		if(($arrPerm['delete'] == 1 && $ownerMemberID == getLoggedMemberID()) || ($arrPerm['delete'] == 2 && $ownerGroupID == getLoggedGroupID()) || $arrPerm['delete'] == 3) { // allow delete?
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '<button type="submit" class="btn btn-danger" id="delete" name="delete_x" value="1" onclick="return confirm(\'' . $Translation['are you sure?'] . '\');" title="' . html_attr($Translation['Delete']) . '"><i class="glyphicon glyphicon-trash"></i> ' . $Translation['Delete'] . '</button>', $templateCode);
		} else {
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		}
		$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>', $templateCode);
	} else {
		$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);

		// if not in embedded mode and user has insert only but no view/update/delete,
		// remove 'back' button
		if(
			$arrPerm['insert']
			&& !$arrPerm['update'] && !$arrPerm['delete'] && !$arrPerm['view']
			&& !Request::val('Embedded')
		)
			$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '', $templateCode);
		elseif($separateDV)
			$templateCode = str_replace(
				'<%%DESELECT_BUTTON%%>', 
				'<button
					type="submit" 
					class="btn btn-default" 
					id="deselect" 
					name="deselect_x" 
					value="1" 
					onclick="' . $backAction . '" 
					title="' . html_attr($Translation['Back']) . '">
						<i class="glyphicon glyphicon-chevron-left"></i> ' .
						$Translation['Back'] .
				'</button>',
				$templateCode
			);
		else
			$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '', $templateCode);
	}

	// set records to read only if user can't insert new records and can't edit current record
	if(($selected_id && !$AllowUpdate) || (!$selected_id && !$AllowInsert)) {
		$jsReadOnly = '';
		$jsReadOnly .= "\tjQuery('#vehicle_registration_number').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#vehicle_registration_number_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#tyre_position').replaceWith('<div class=\"form-control-static\" id=\"tyre_position\">' + (jQuery('#tyre_position').val() || '') + '</div>'); jQuery('#tyre_position-multi-selection-help').hide();\n";
		$jsReadOnly .= "\tjQuery('#tyre_tread_condition').replaceWith('<div class=\"form-control-static\" id=\"tyre_tread_condition\">' + (jQuery('#tyre_tread_condition').val() || '') + '</div>'); jQuery('#tyre_tread_condition-multi-selection-help').hide();\n";
		$jsReadOnly .= "\tjQuery('#tyre_brand').replaceWith('<div class=\"form-control-static\" id=\"tyre_brand\">' + (jQuery('#tyre_brand').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#tyre_model').replaceWith('<div class=\"form-control-static\" id=\"tyre_model\">' + (jQuery('#tyre_model').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#tyre_size').replaceWith('<div class=\"form-control-static\" id=\"tyre_size\">' + (jQuery('#tyre_size').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#tyre_pressure').replaceWith('<div class=\"form-control-static\" id=\"tyre_pressure\">' + (jQuery('#tyre_pressure').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#action').replaceWith('<div class=\"form-control-static\" id=\"action\">' + (jQuery('#action').val() || '') + '</div>'); jQuery('#action-multi-selection-help').hide();\n";
		$jsReadOnly .= "\tjQuery('#warranty').replaceWith('<div class=\"form-control-static\" id=\"warranty\">' + (jQuery('#warranty').val() || '') + '</div>'); jQuery('#warranty-multi-selection-help').hide();\n";
		$jsReadOnly .= "\tjQuery('#documents').replaceWith('<div class=\"form-control-static\" id=\"documents\">' + (jQuery('#documents').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#documents, #documents-edit-link').hide();\n";
		$jsReadOnly .= "\tjQuery('#tyre_tread').replaceWith('<div class=\"form-control-static\" id=\"tyre_tread\">' + (jQuery('#tyre_tread').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#tyre_maximum_wear').replaceWith('<div class=\"form-control-static\" id=\"tyre_maximum_wear\">' + (jQuery('#tyre_maximum_wear').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#inspection_date').prop('readonly', true);\n";
		$jsReadOnly .= "\tjQuery('#inspection_dateDay, #inspection_dateMonth, #inspection_dateYear').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#tyre_inspection_done_by').replaceWith('<div class=\"form-control-static\" id=\"tyre_inspection_done_by\">' + (jQuery('#tyre_inspection_done_by').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#tyre_inspection_report').replaceWith('<div class=\"form-control-static\" id=\"tyre_inspection_report\">' + (jQuery('#tyre_inspection_report').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#tyre_inspection_report, #tyre_inspection_report-edit-link').hide();\n";
		$jsReadOnly .= "\tjQuery('input[name=status]').parent().html('<div class=\"form-control-static\">' + jQuery('input[name=status]:checked').next().text() + '</div>')\n";
		$jsReadOnly .= "\tjQuery('#opening_km').replaceWith('<div class=\"form-control-static\" id=\"opening_km\">' + (jQuery('#opening_km').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#closing_km').replaceWith('<div class=\"form-control-static\" id=\"closing_km\">' + (jQuery('#closing_km').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#total_km').replaceWith('<div class=\"form-control-static\" id=\"total_km\">' + (jQuery('#total_km').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('input[name=tyres_cause_of_accident]').parent().html('<div class=\"form-control-static\">' + jQuery('input[name=tyres_cause_of_accident]:checked').next().text() + '</div>')\n";
		$jsReadOnly .= "\tjQuery('#accident_report').replaceWith('<div class=\"form-control-static\" id=\"accident_report\">' + (jQuery('#accident_report').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#accident_report, #accident_report-edit-link').hide();\n";
		$jsReadOnly .= "\tjQuery('#claims_report').replaceWith('<div class=\"form-control-static\" id=\"claims_report\">' + (jQuery('#claims_report').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#claims_report, #claims_report-edit-link').hide();\n";
		$jsReadOnly .= "\tjQuery('#insurance_claims_report').replaceWith('<div class=\"form-control-static\" id=\"insurance_claims_report\">' + (jQuery('#insurance_claims_report').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#insurance_claims_report, #insurance_claims_report-edit-link').hide();\n";
		$jsReadOnly .= "\tjQuery('input[name=reminder_maximum_wear]').parent().html('<div class=\"form-control-static\">' + jQuery('input[name=reminder_maximum_wear]:checked').next().text() + '</div>')\n";
		$jsReadOnly .= "\tjQuery('.select2-container').hide();\n";

		$noUploads = true;
	} elseif(($AllowInsert && !$selected_id) || ($AllowUpdate && $selected_id)) {
		$jsEditable = "\tjQuery('form').eq(0).data('already_changed', true);"; // temporarily disable form change handler
		$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', false);"; // re-enable form change handler
	}

	// process combos
	$templateCode = str_replace('<%%COMBO(vehicle_registration_number)%%>', $combo_vehicle_registration_number->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(vehicle_registration_number)%%>', $combo_vehicle_registration_number->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(vehicle_registration_number)%%>', urlencode($combo_vehicle_registration_number->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(tyre_position)%%>', $combo_tyre_position->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(tyre_position)%%>', $combo_tyre_position->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(tyre_tread_condition)%%>', $combo_tyre_tread_condition->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(tyre_tread_condition)%%>', $combo_tyre_tread_condition->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(action)%%>', $combo_action->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(action)%%>', $combo_action->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(warranty)%%>', $combo_warranty->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(warranty)%%>', $combo_warranty->SelectedData, $templateCode);
	$templateCode = str_replace(
		'<%%COMBO(inspection_date)%%>', 
		($selected_id && !$arrPerm['edit'] && ($noSaveAsCopy || !$arrPerm['insert']) ? 
			'<div class="form-control-static">' . $combo_inspection_date->GetHTML(true) . '</div>' : 
			$combo_inspection_date->GetHTML()
		), $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(inspection_date)%%>', $combo_inspection_date->GetHTML(true), $templateCode);
	$templateCode = str_replace('<%%COMBO(status)%%>', $combo_status->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(status)%%>', $combo_status->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(tyres_cause_of_accident)%%>', $combo_tyres_cause_of_accident->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(tyres_cause_of_accident)%%>', $combo_tyres_cause_of_accident->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(reminder_maximum_wear)%%>', $combo_reminder_maximum_wear->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(reminder_maximum_wear)%%>', $combo_reminder_maximum_wear->SelectedData, $templateCode);

	/* lookup fields array: 'lookup field name' => ['parent table name', 'lookup field caption'] */
	$lookup_fields = ['vehicle_registration_number' => ['gmt_fleet_register', 'Registration Number:'], ];
	foreach($lookup_fields as $luf => $ptfc) {
		$pt_perm = getTablePermissions($ptfc[0]);

		// process foreign key links
		if($pt_perm['view'] || $pt_perm['edit']) {
			$templateCode = str_replace("<%%PLINK({$luf})%%>", '<button type="button" class="btn btn-default view_parent" id="' . $ptfc[0] . '_view_parent" title="' . html_attr($Translation['View'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-eye-open"></i></button>', $templateCode);
		}

		// if user has insert permission to parent table of a lookup field, put an add new button
		if($pt_perm['insert'] /* && !Request::val('Embedded')*/) {
			$templateCode = str_replace("<%%ADDNEW({$ptfc[0]})%%>", '<button type="button" class="btn btn-default add_new_parent" id="' . $ptfc[0] . '_add_new" title="' . html_attr($Translation['Add New'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-plus text-success"></i></button>', $templateCode);
		}
	}

	// process images
	$templateCode = str_replace('<%%UPLOADFILE(tyre_log_id)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(vehicle_registration_number)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(tyre_position)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(tyre_tread_condition)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(tyre_brand)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(tyre_model)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(tyre_size)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(tyre_pressure)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(action)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(warranty)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(documents)%%>', ($noUploads ? '' : "<div>{$Translation['upload image']}</div>" . '<i class="glyphicon glyphicon-remove text-danger clear-upload hidden"></i> <input type="file" name="documents" id="documents" data-filetypes="txt|doc|docx|docm|odt|pdf|rtf" data-maxsize="5242880" accept=".txt,.doc,.docx,.docm,.odt,.pdf,.rtf">'), $templateCode);
	if($AllowUpdate && $row['documents'] != '') {
		$templateCode = str_replace('<%%REMOVEFILE(documents)%%>', '<br><input type="checkbox" name="documents_remove" id="documents_remove" value="1"> <label for="documents_remove" style="color: red; font-weight: bold;">'.$Translation['remove image'].'</label>', $templateCode);
	} else {
		$templateCode = str_replace('<%%REMOVEFILE(documents)%%>', '', $templateCode);
	}
	$templateCode = str_replace('<%%UPLOADFILE(tyre_tread)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(tyre_maximum_wear)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(inspection_date)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(tyre_inspection_done_by)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(tyre_inspection_report)%%>', ($noUploads ? '' : "<div>{$Translation['upload image']}</div>" . '<i class="glyphicon glyphicon-remove text-danger clear-upload hidden"></i> <input type="file" name="tyre_inspection_report" id="tyre_inspection_report" data-filetypes="txt|doc|docx|docm|odt|pdf|rtf" data-maxsize="5242880" accept=".txt,.doc,.docx,.docm,.odt,.pdf,.rtf">'), $templateCode);
	if($AllowUpdate && $row['tyre_inspection_report'] != '') {
		$templateCode = str_replace('<%%REMOVEFILE(tyre_inspection_report)%%>', '<br><input type="checkbox" name="tyre_inspection_report_remove" id="tyre_inspection_report_remove" value="1"> <label for="tyre_inspection_report_remove" style="color: red; font-weight: bold;">'.$Translation['remove image'].'</label>', $templateCode);
	} else {
		$templateCode = str_replace('<%%REMOVEFILE(tyre_inspection_report)%%>', '', $templateCode);
	}
	$templateCode = str_replace('<%%UPLOADFILE(status)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(opening_km)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(closing_km)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(total_km)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(comments)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(tyres_cause_of_accident)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(accident_report)%%>', ($noUploads ? '' : "<div>{$Translation['upload image']}</div>" . '<i class="glyphicon glyphicon-remove text-danger clear-upload hidden"></i> <input type="file" name="accident_report" id="accident_report" data-filetypes="txt|doc|docx|docm|odt|pdf|rtf" data-maxsize="5242880" accept=".txt,.doc,.docx,.docm,.odt,.pdf,.rtf">'), $templateCode);
	if($AllowUpdate && $row['accident_report'] != '') {
		$templateCode = str_replace('<%%REMOVEFILE(accident_report)%%>', '<br><input type="checkbox" name="accident_report_remove" id="accident_report_remove" value="1"> <label for="accident_report_remove" style="color: red; font-weight: bold;">'.$Translation['remove image'].'</label>', $templateCode);
	} else {
		$templateCode = str_replace('<%%REMOVEFILE(accident_report)%%>', '', $templateCode);
	}
	$templateCode = str_replace('<%%UPLOADFILE(claims_report)%%>', ($noUploads ? '' : "<div>{$Translation['upload image']}</div>" . '<i class="glyphicon glyphicon-remove text-danger clear-upload hidden"></i> <input type="file" name="claims_report" id="claims_report" data-filetypes="txt|doc|docx|docm|odt|pdf|rtf" data-maxsize="5242880" accept=".txt,.doc,.docx,.docm,.odt,.pdf,.rtf">'), $templateCode);
	if($AllowUpdate && $row['claims_report'] != '') {
		$templateCode = str_replace('<%%REMOVEFILE(claims_report)%%>', '<br><input type="checkbox" name="claims_report_remove" id="claims_report_remove" value="1"> <label for="claims_report_remove" style="color: red; font-weight: bold;">'.$Translation['remove image'].'</label>', $templateCode);
	} else {
		$templateCode = str_replace('<%%REMOVEFILE(claims_report)%%>', '', $templateCode);
	}
	$templateCode = str_replace('<%%UPLOADFILE(insurance_claims_report)%%>', ($noUploads ? '' : "<div>{$Translation['upload image']}</div>" . '<i class="glyphicon glyphicon-remove text-danger clear-upload hidden"></i> <input type="file" name="insurance_claims_report" id="insurance_claims_report" data-filetypes="txt|doc|docx|docm|odt|pdf|rtf" data-maxsize="5242880" accept=".txt,.doc,.docx,.docm,.odt,.pdf,.rtf">'), $templateCode);
	if($AllowUpdate && $row['insurance_claims_report'] != '') {
		$templateCode = str_replace('<%%REMOVEFILE(insurance_claims_report)%%>', '<br><input type="checkbox" name="insurance_claims_report_remove" id="insurance_claims_report_remove" value="1"> <label for="insurance_claims_report_remove" style="color: red; font-weight: bold;">'.$Translation['remove image'].'</label>', $templateCode);
	} else {
		$templateCode = str_replace('<%%REMOVEFILE(insurance_claims_report)%%>', '', $templateCode);
	}
	$templateCode = str_replace('<%%UPLOADFILE(reminder_maximum_wear)%%>', '', $templateCode);

	// process values
	if($selected_id) {
		if( $dvprint) $templateCode = str_replace('<%%VALUE(tyre_log_id)%%>', safe_html($urow['tyre_log_id']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(tyre_log_id)%%>', html_attr($row['tyre_log_id']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(tyre_log_id)%%>', urlencode($urow['tyre_log_id']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(vehicle_registration_number)%%>', safe_html($urow['vehicle_registration_number']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(vehicle_registration_number)%%>', html_attr($row['vehicle_registration_number']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(vehicle_registration_number)%%>', urlencode($urow['vehicle_registration_number']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(tyre_position)%%>', safe_html($urow['tyre_position']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(tyre_position)%%>', html_attr($row['tyre_position']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(tyre_position)%%>', urlencode($urow['tyre_position']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(tyre_tread_condition)%%>', safe_html($urow['tyre_tread_condition']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(tyre_tread_condition)%%>', html_attr($row['tyre_tread_condition']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(tyre_tread_condition)%%>', urlencode($urow['tyre_tread_condition']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(tyre_brand)%%>', safe_html($urow['tyre_brand']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(tyre_brand)%%>', html_attr($row['tyre_brand']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(tyre_brand)%%>', urlencode($urow['tyre_brand']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(tyre_model)%%>', safe_html($urow['tyre_model']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(tyre_model)%%>', html_attr($row['tyre_model']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(tyre_model)%%>', urlencode($urow['tyre_model']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(tyre_size)%%>', safe_html($urow['tyre_size']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(tyre_size)%%>', html_attr($row['tyre_size']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(tyre_size)%%>', urlencode($urow['tyre_size']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(tyre_pressure)%%>', safe_html($urow['tyre_pressure']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(tyre_pressure)%%>', html_attr($row['tyre_pressure']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(tyre_pressure)%%>', urlencode($urow['tyre_pressure']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(action)%%>', safe_html($urow['action']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(action)%%>', html_attr($row['action']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(action)%%>', urlencode($urow['action']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(warranty)%%>', safe_html($urow['warranty']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(warranty)%%>', html_attr($row['warranty']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(warranty)%%>', urlencode($urow['warranty']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(documents)%%>', safe_html($urow['documents']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(documents)%%>', html_attr($row['documents']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(documents)%%>', urlencode($urow['documents']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(tyre_tread)%%>', safe_html($urow['tyre_tread']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(tyre_tread)%%>', html_attr($row['tyre_tread']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(tyre_tread)%%>', urlencode($urow['tyre_tread']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(tyre_maximum_wear)%%>', safe_html($urow['tyre_maximum_wear']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(tyre_maximum_wear)%%>', html_attr($row['tyre_maximum_wear']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(tyre_maximum_wear)%%>', urlencode($urow['tyre_maximum_wear']), $templateCode);
		$templateCode = str_replace('<%%VALUE(inspection_date)%%>', app_datetime($row['inspection_date']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(inspection_date)%%>', urlencode(app_datetime($urow['inspection_date'])), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(tyre_inspection_done_by)%%>', safe_html($urow['tyre_inspection_done_by']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(tyre_inspection_done_by)%%>', html_attr($row['tyre_inspection_done_by']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(tyre_inspection_done_by)%%>', urlencode($urow['tyre_inspection_done_by']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(tyre_inspection_report)%%>', safe_html($urow['tyre_inspection_report']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(tyre_inspection_report)%%>', html_attr($row['tyre_inspection_report']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(tyre_inspection_report)%%>', urlencode($urow['tyre_inspection_report']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(status)%%>', safe_html($urow['status']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(status)%%>', html_attr($row['status']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(status)%%>', urlencode($urow['status']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(opening_km)%%>', safe_html($urow['opening_km']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(opening_km)%%>', html_attr($row['opening_km']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(opening_km)%%>', urlencode($urow['opening_km']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(closing_km)%%>', safe_html($urow['closing_km']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(closing_km)%%>', html_attr($row['closing_km']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(closing_km)%%>', urlencode($urow['closing_km']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(total_km)%%>', safe_html($urow['total_km']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(total_km)%%>', html_attr($row['total_km']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(total_km)%%>', urlencode($urow['total_km']), $templateCode);
		if($AllowUpdate || $AllowInsert) {
			$templateCode = str_replace('<%%HTMLAREA(comments)%%>', '<textarea name="comments" id="comments" rows="5">' . safe_html(htmlspecialchars_decode($row['comments'])) . '</textarea>', $templateCode);
		} else {
			$templateCode = str_replace('<%%HTMLAREA(comments)%%>', '<div id="comments" class="form-control-static">' . $row['comments'] . '</div>', $templateCode);
		}
		$templateCode = str_replace('<%%VALUE(comments)%%>', nl2br($row['comments']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(comments)%%>', urlencode($urow['comments']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(tyres_cause_of_accident)%%>', safe_html($urow['tyres_cause_of_accident']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(tyres_cause_of_accident)%%>', html_attr($row['tyres_cause_of_accident']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(tyres_cause_of_accident)%%>', urlencode($urow['tyres_cause_of_accident']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(accident_report)%%>', safe_html($urow['accident_report']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(accident_report)%%>', html_attr($row['accident_report']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(accident_report)%%>', urlencode($urow['accident_report']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(claims_report)%%>', safe_html($urow['claims_report']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(claims_report)%%>', html_attr($row['claims_report']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(claims_report)%%>', urlencode($urow['claims_report']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(insurance_claims_report)%%>', safe_html($urow['insurance_claims_report']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(insurance_claims_report)%%>', html_attr($row['insurance_claims_report']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(insurance_claims_report)%%>', urlencode($urow['insurance_claims_report']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(reminder_maximum_wear)%%>', safe_html($urow['reminder_maximum_wear']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(reminder_maximum_wear)%%>', html_attr($row['reminder_maximum_wear']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(reminder_maximum_wear)%%>', urlencode($urow['reminder_maximum_wear']), $templateCode);
	} else {
		$templateCode = str_replace('<%%VALUE(tyre_log_id)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(tyre_log_id)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(vehicle_registration_number)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(vehicle_registration_number)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(tyre_position)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(tyre_position)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(tyre_tread_condition)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(tyre_tread_condition)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(tyre_brand)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(tyre_brand)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(tyre_model)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(tyre_model)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(tyre_size)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(tyre_size)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(tyre_pressure)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(tyre_pressure)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(action)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(action)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(warranty)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(warranty)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(documents)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(documents)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(tyre_tread)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(tyre_tread)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(tyre_maximum_wear)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(tyre_maximum_wear)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(inspection_date)%%>', '0000-00-00', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(inspection_date)%%>', urlencode('0000-00-00'), $templateCode);
		$templateCode = str_replace('<%%VALUE(tyre_inspection_done_by)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(tyre_inspection_done_by)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(tyre_inspection_report)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(tyre_inspection_report)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(status)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(status)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(opening_km)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(opening_km)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(closing_km)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(closing_km)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(total_km)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(total_km)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%HTMLAREA(comments)%%>', '<textarea name="comments" id="comments" rows="5"></textarea>', $templateCode);
		$templateCode = str_replace('<%%VALUE(tyres_cause_of_accident)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(tyres_cause_of_accident)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(accident_report)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(accident_report)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(claims_report)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(claims_report)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(insurance_claims_report)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(insurance_claims_report)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(reminder_maximum_wear)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(reminder_maximum_wear)%%>', urlencode(''), $templateCode);
	}

	// process translations
	$templateCode = parseTemplate($templateCode);

	// clear scrap
	$templateCode = str_replace('<%%', '<!-- ', $templateCode);
	$templateCode = str_replace('%%>', ' -->', $templateCode);

	// hide links to inaccessible tables
	if(Request::val('dvprint_x') == '') {
		$templateCode .= "\n\n<script>\$j(function() {\n";
		$arrTables = getTableList();
		foreach($arrTables as $name => $caption) {
			$templateCode .= "\t\$j('#{$name}_link').removeClass('hidden');\n";
			$templateCode .= "\t\$j('#xs_{$name}_link').removeClass('hidden');\n";
		}

		$templateCode .= $jsReadOnly;
		$templateCode .= $jsEditable;

		if(!$selected_id) {
			$templateCode.="\n\tif(document.getElementById('documentsEdit')) { document.getElementById('documentsEdit').style.display='inline'; }";
			$templateCode.="\n\tif(document.getElementById('documentsEditLink')) { document.getElementById('documentsEditLink').style.display='none'; }";
			$templateCode.="\n\tif(document.getElementById('tyre_inspection_reportEdit')) { document.getElementById('tyre_inspection_reportEdit').style.display='inline'; }";
			$templateCode.="\n\tif(document.getElementById('tyre_inspection_reportEditLink')) { document.getElementById('tyre_inspection_reportEditLink').style.display='none'; }";
			$templateCode.="\n\tif(document.getElementById('accident_reportEdit')) { document.getElementById('accident_reportEdit').style.display='inline'; }";
			$templateCode.="\n\tif(document.getElementById('accident_reportEditLink')) { document.getElementById('accident_reportEditLink').style.display='none'; }";
			$templateCode.="\n\tif(document.getElementById('claims_reportEdit')) { document.getElementById('claims_reportEdit').style.display='inline'; }";
			$templateCode.="\n\tif(document.getElementById('claims_reportEditLink')) { document.getElementById('claims_reportEditLink').style.display='none'; }";
			$templateCode.="\n\tif(document.getElementById('insurance_claims_reportEdit')) { document.getElementById('insurance_claims_reportEdit').style.display='inline'; }";
			$templateCode.="\n\tif(document.getElementById('insurance_claims_reportEditLink')) { document.getElementById('insurance_claims_reportEditLink').style.display='none'; }";
		}

		$templateCode.="\n});</script>\n";
	}

	// ajaxed auto-fill fields
	$templateCode .= '<script>';
	$templateCode .= '$j(function() {';


	$templateCode.="});";
	$templateCode.="</script>";
	$templateCode .= $lookups;

	// handle enforced parent values for read-only lookup fields
	$filterField = Request::val('FilterField');
	$filterOperator = Request::val('FilterOperator');
	$filterValue = Request::val('FilterValue');

	// don't include blank images in lightbox gallery
	$templateCode = preg_replace('/blank.gif" data-lightbox=".*?"/', 'blank.gif"', $templateCode);

	// don't display empty email links
	$templateCode=preg_replace('/<a .*?href="mailto:".*?<\/a>/', '', $templateCode);

	/* default field values */
	$rdata = $jdata = get_defaults('tyre_log_sheet');
	if($selected_id) {
		$jdata = get_joined_record('tyre_log_sheet', $selected_id);
		if($jdata === false) $jdata = get_defaults('tyre_log_sheet');
		$rdata = $row;
	}
	$templateCode .= loadView('tyre_log_sheet-ajax-cache', ['rdata' => $rdata, 'jdata' => $jdata]);

	// hook: tyre_log_sheet_dv
	if(function_exists('tyre_log_sheet_dv')) {
		$args = [];
		tyre_log_sheet_dv(($selected_id ? $selected_id : FALSE), getMemberInfo(), $templateCode, $args);
	}

	return $templateCode;
}