<?php
// This script and data application were generated by AppGini 22.13
// Download AppGini for free from https://bigprof.com/appgini/download/

	include_once(__DIR__ . '/lib.php');
	@include_once(__DIR__ . '/hooks/merchant.php');
	include_once(__DIR__ . '/merchant_dml.php');

	// mm: can the current member access this page?
	$perm = getTablePermissions('merchant');
	if(!$perm['access']) {
		echo error_message($Translation['tableAccessDenied']);
		exit;
	}

	$x = new DataList;
	$x->TableName = 'merchant';

	// Fields that can be displayed in the table view
	$x->QueryFieldsTV = [
		"`merchant`.`merchant_id`" => "merchant_id",
		"IF(    CHAR_LENGTH(`merchant_type1`.`merchant_type`), CONCAT_WS('',   `merchant_type1`.`merchant_type`), '') /* Merchant Type: */" => "merchant_type",
		"`merchant`.`merchant_code`" => "merchant_code",
		"`merchant`.`merchant_name`" => "merchant_name",
		"`merchant`.`merchant_contact_email`" => "merchant_contact_email",
		"`merchant`.`merchant_street_address`" => "merchant_street_address",
		"`merchant`.`merchant_suburb`" => "merchant_suburb",
		"`merchant`.`merchant_city`" => "merchant_city",
		"`merchant`.`merchant_address_code`" => "merchant_address_code",
		"`merchant`.`merchant_contact_details`" => "merchant_contact_details",
	];
	// mapping incoming sort by requests to actual query fields
	$x->SortFields = [
		1 => '`merchant`.`merchant_id`',
		2 => '`merchant_type1`.`merchant_type`',
		3 => 3,
		4 => 4,
		5 => 5,
		6 => 6,
		7 => 7,
		8 => 8,
		9 => 9,
		10 => 10,
	];

	// Fields that can be displayed in the csv file
	$x->QueryFieldsCSV = [
		"`merchant`.`merchant_id`" => "merchant_id",
		"IF(    CHAR_LENGTH(`merchant_type1`.`merchant_type`), CONCAT_WS('',   `merchant_type1`.`merchant_type`), '') /* Merchant Type: */" => "merchant_type",
		"`merchant`.`merchant_code`" => "merchant_code",
		"`merchant`.`merchant_name`" => "merchant_name",
		"`merchant`.`merchant_contact_email`" => "merchant_contact_email",
		"`merchant`.`merchant_street_address`" => "merchant_street_address",
		"`merchant`.`merchant_suburb`" => "merchant_suburb",
		"`merchant`.`merchant_city`" => "merchant_city",
		"`merchant`.`merchant_address_code`" => "merchant_address_code",
		"`merchant`.`merchant_contact_details`" => "merchant_contact_details",
	];
	// Fields that can be filtered
	$x->QueryFieldsFilters = [
		"`merchant`.`merchant_id`" => "Vendor ID:",
		"IF(    CHAR_LENGTH(`merchant_type1`.`merchant_type`), CONCAT_WS('',   `merchant_type1`.`merchant_type`), '') /* Merchant Type: */" => "Merchant Type:",
		"`merchant`.`merchant_code`" => "Merchant code",
		"`merchant`.`merchant_name`" => "Merchant  Name:",
		"`merchant`.`merchant_contact_email`" => "Merchant Contact e-Mail:",
		"`merchant`.`merchant_street_address`" => "Merchant Street Address:",
		"`merchant`.`merchant_suburb`" => "Merchant Suburb:",
		"`merchant`.`merchant_city`" => "Merchant City:",
		"`merchant`.`merchant_address_code`" => "Merchant Address Code:",
		"`merchant`.`merchant_contact_details`" => "Merchant Phone:",
	];

	// Fields that can be quick searched
	$x->QueryFieldsQS = [
		"`merchant`.`merchant_id`" => "merchant_id",
		"IF(    CHAR_LENGTH(`merchant_type1`.`merchant_type`), CONCAT_WS('',   `merchant_type1`.`merchant_type`), '') /* Merchant Type: */" => "merchant_type",
		"`merchant`.`merchant_code`" => "merchant_code",
		"`merchant`.`merchant_name`" => "merchant_name",
		"`merchant`.`merchant_contact_email`" => "merchant_contact_email",
		"`merchant`.`merchant_street_address`" => "merchant_street_address",
		"`merchant`.`merchant_suburb`" => "merchant_suburb",
		"`merchant`.`merchant_city`" => "merchant_city",
		"`merchant`.`merchant_address_code`" => "merchant_address_code",
		"`merchant`.`merchant_contact_details`" => "merchant_contact_details",
	];

	// Lookup fields that can be used as filterers
	$x->filterers = ['merchant_type' => 'Merchant Type:', ];

	$x->QueryFrom = "`merchant` LEFT JOIN `merchant_type` as merchant_type1 ON `merchant_type1`.`merchant_type_id`=`merchant`.`merchant_type` ";
	$x->QueryWhere = '';
	$x->QueryOrder = '';

	$x->AllowSelection = 1;
	$x->HideTableView = ($perm['view'] == 0 ? 1 : 0);
	$x->AllowDelete = $perm['delete'];
	$x->AllowMassDelete = (getLoggedAdmin() !== false);
	$x->AllowInsert = $perm['insert'];
	$x->AllowUpdate = $perm['edit'];
	$x->SeparateDV = 1;
	$x->AllowDeleteOfParents = 0;
	$x->AllowFilters = 1;
	$x->AllowSavingFilters = (getLoggedAdmin() !== false);
	$x->AllowSorting = 1;
	$x->AllowNavigation = 1;
	$x->AllowPrinting = 1;
	$x->AllowPrintingDV = 1;
	$x->AllowCSV = 1;
	$x->RecordsPerPage = 25;
	$x->QuickSearch = 1;
	$x->QuickSearchText = $Translation['quick search'];
	$x->ScriptFileName = 'merchant_view.php';
	$x->RedirectAfterInsert = 'merchant_view.php?SelectedID=#ID#';
	$x->TableTitle = 'Merchant :';
	$x->TableIcon = 'resources/table_icons/vendor.png';
	$x->PrimaryKey = '`merchant`.`merchant_id`';

	$x->ColWidth = [150, 150, 150, 150, 150, 150, 150, 150, 150, 150, ];
	$x->ColCaption = ['Vendor ID:', 'Merchant Type:', 'Merchant code', 'Merchant  Name:', 'Merchant Contact e-Mail:', 'Merchant Street Address:', 'Merchant Suburb:', 'Merchant City:', 'Merchant Address Code:', 'Merchant Phone:', ];
	$x->ColFieldName = ['merchant_id', 'merchant_type', 'merchant_code', 'merchant_name', 'merchant_contact_email', 'merchant_street_address', 'merchant_suburb', 'merchant_city', 'merchant_address_code', 'merchant_contact_details', ];
	$x->ColNumber  = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, ];

	// template paths below are based on the app main directory
	$x->Template = 'templates/merchant_templateTV.html';
	$x->SelectedTemplate = 'templates/merchant_templateTVS.html';
	$x->TemplateDV = 'templates/merchant_templateDV.html';
	$x->TemplateDVP = 'templates/merchant_templateDVP.html';

	$x->ShowTableHeader = 1;
	$x->TVClasses = "";
	$x->DVClasses = "";
	$x->HasCalculatedFields = false;
	$x->AllowConsoleLog = false;
	$x->AllowDVNavigation = true;

	// hook: merchant_init
	$render = true;
	if(function_exists('merchant_init')) {
		$args = [];
		$render = merchant_init($x, getMemberInfo(), $args);
	}

	if($render) $x->Render();

	// hook: merchant_header
	$headerCode = '';
	if(function_exists('merchant_header')) {
		$args = [];
		$headerCode = merchant_header($x->ContentType, getMemberInfo(), $args);
	}

	if(!$headerCode) {
		include_once(__DIR__ . '/header.php'); 
	} else {
		ob_start();
		include_once(__DIR__ . '/header.php');
		echo str_replace('<%%HEADER%%>', ob_get_clean(), $headerCode);
	}

	echo $x->HTML;

	// hook: merchant_footer
	$footerCode = '';
	if(function_exists('merchant_footer')) {
		$args = [];
		$footerCode = merchant_footer($x->ContentType, getMemberInfo(), $args);
	}

	if(!$footerCode) {
		include_once(__DIR__ . '/footer.php'); 
	} else {
		ob_start();
		include_once(__DIR__ . '/footer.php');
		echo str_replace('<%%FOOTER%%>', ob_get_clean(), $footerCode);
	}
