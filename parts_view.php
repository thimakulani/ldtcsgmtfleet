<?php
// This script and data application were generated by AppGini 22.13
// Download AppGini for free from https://bigprof.com/appgini/download/

	include_once(__DIR__ . '/lib.php');
	@include_once(__DIR__ . '/hooks/parts.php');
	include_once(__DIR__ . '/parts_dml.php');

	// mm: can the current member access this page?
	$perm = getTablePermissions('parts');
	if(!$perm['access']) {
		echo error_message($Translation['tableAccessDenied']);
		exit;
	}

	$x = new DataList;
	$x->TableName = 'parts';

	// Fields that can be displayed in the table view
	$x->QueryFieldsTV = [
		"`parts`.`parts_id`" => "parts_id",
		"IF(    CHAR_LENGTH(`parts_type1`.`part_type`), CONCAT_WS('',   `parts_type1`.`part_type`), '') /* Part Type: */" => "part_type",
		"`parts`.`part_number`" => "part_number",
		"`parts`.`part_name`" => "part_name",
		"`parts`.`description`" => "description",
		"IF(    CHAR_LENGTH(`manufacturer1`.`manufacturer_name`), CONCAT_WS('',   `manufacturer1`.`manufacturer_name`), '') /* Manufacturer: */" => "manufacturer",
		"IF(    CHAR_LENGTH(`dealer1`.`dealer_name`), CONCAT_WS('',   `dealer1`.`dealer_name`), '') /* Dealer: */" => "dealer",
		"`parts`.`measure`" => "measure",
		"`parts`.`unit_price`" => "unit_price",
		"`parts`.`quantity`" => "quantity",
		"`parts`.`freight`" => "freight",
		"`parts`.`amount`" => "amount",
		"`parts`.`tax`" => "tax",
		"`parts`.`total_amount`" => "total_amount",
		"`parts`.`discount_price`" => "discount_price",
		"`parts`.`net_part_price`" => "net_part_price",
	];
	// mapping incoming sort by requests to actual query fields
	$x->SortFields = [
		1 => '`parts`.`parts_id`',
		2 => '`parts_type1`.`part_type`',
		3 => 3,
		4 => 4,
		5 => 5,
		6 => '`manufacturer1`.`manufacturer_name`',
		7 => '`dealer1`.`dealer_name`',
		8 => 8,
		9 => '`parts`.`unit_price`',
		10 => 10,
		11 => 11,
		12 => '`parts`.`amount`',
		13 => 13,
		14 => '`parts`.`total_amount`',
		15 => '`parts`.`discount_price`',
		16 => '`parts`.`net_part_price`',
	];

	// Fields that can be displayed in the csv file
	$x->QueryFieldsCSV = [
		"`parts`.`parts_id`" => "parts_id",
		"IF(    CHAR_LENGTH(`parts_type1`.`part_type`), CONCAT_WS('',   `parts_type1`.`part_type`), '') /* Part Type: */" => "part_type",
		"`parts`.`part_number`" => "part_number",
		"`parts`.`part_name`" => "part_name",
		"`parts`.`description`" => "description",
		"IF(    CHAR_LENGTH(`manufacturer1`.`manufacturer_name`), CONCAT_WS('',   `manufacturer1`.`manufacturer_name`), '') /* Manufacturer: */" => "manufacturer",
		"IF(    CHAR_LENGTH(`dealer1`.`dealer_name`), CONCAT_WS('',   `dealer1`.`dealer_name`), '') /* Dealer: */" => "dealer",
		"`parts`.`measure`" => "measure",
		"`parts`.`unit_price`" => "unit_price",
		"`parts`.`quantity`" => "quantity",
		"`parts`.`freight`" => "freight",
		"`parts`.`amount`" => "amount",
		"`parts`.`tax`" => "tax",
		"`parts`.`total_amount`" => "total_amount",
		"`parts`.`discount_price`" => "discount_price",
		"`parts`.`net_part_price`" => "net_part_price",
	];
	// Fields that can be filtered
	$x->QueryFieldsFilters = [
		"`parts`.`parts_id`" => "Parts ID:",
		"IF(    CHAR_LENGTH(`parts_type1`.`part_type`), CONCAT_WS('',   `parts_type1`.`part_type`), '') /* Part Type: */" => "Part Type:",
		"`parts`.`part_number`" => "Part Number:",
		"`parts`.`part_name`" => "Part Name:",
		"`parts`.`description`" => "Description:",
		"IF(    CHAR_LENGTH(`manufacturer1`.`manufacturer_name`), CONCAT_WS('',   `manufacturer1`.`manufacturer_name`), '') /* Manufacturer: */" => "Manufacturer:",
		"IF(    CHAR_LENGTH(`dealer1`.`dealer_name`), CONCAT_WS('',   `dealer1`.`dealer_name`), '') /* Dealer: */" => "Dealer:",
		"`parts`.`measure`" => "Measure",
		"`parts`.`unit_price`" => "Unit Price:",
		"`parts`.`quantity`" => "Quantity:",
		"`parts`.`freight`" => "Freight Cost (R):",
		"`parts`.`amount`" => "Total Repairing Amount (R):",
		"`parts`.`tax`" => "Tax:",
		"`parts`.`total_amount`" => "Total Repairing Amount (R):",
		"`parts`.`discount_price`" => "Discount price",
		"`parts`.`net_part_price`" => "Net Part Price (R):",
	];

	// Fields that can be quick searched
	$x->QueryFieldsQS = [
		"`parts`.`parts_id`" => "parts_id",
		"IF(    CHAR_LENGTH(`parts_type1`.`part_type`), CONCAT_WS('',   `parts_type1`.`part_type`), '') /* Part Type: */" => "part_type",
		"`parts`.`part_number`" => "part_number",
		"`parts`.`part_name`" => "part_name",
		"`parts`.`description`" => "description",
		"IF(    CHAR_LENGTH(`manufacturer1`.`manufacturer_name`), CONCAT_WS('',   `manufacturer1`.`manufacturer_name`), '') /* Manufacturer: */" => "manufacturer",
		"IF(    CHAR_LENGTH(`dealer1`.`dealer_name`), CONCAT_WS('',   `dealer1`.`dealer_name`), '') /* Dealer: */" => "dealer",
		"`parts`.`measure`" => "measure",
		"`parts`.`unit_price`" => "unit_price",
		"`parts`.`quantity`" => "quantity",
		"`parts`.`freight`" => "freight",
		"`parts`.`amount`" => "amount",
		"`parts`.`tax`" => "tax",
		"`parts`.`total_amount`" => "total_amount",
		"`parts`.`discount_price`" => "discount_price",
		"`parts`.`net_part_price`" => "net_part_price",
	];

	// Lookup fields that can be used as filterers
	$x->filterers = ['part_type' => 'Part Type:', 'manufacturer' => 'Manufacturer:', 'dealer' => 'Dealer:', ];

	$x->QueryFrom = "`parts` LEFT JOIN `parts_type` as parts_type1 ON `parts_type1`.`part_type_id`=`parts`.`part_type` LEFT JOIN `manufacturer` as manufacturer1 ON `manufacturer1`.`manufacturer_id`=`parts`.`manufacturer` LEFT JOIN `dealer` as dealer1 ON `dealer1`.`dealer_id`=`parts`.`dealer` ";
	$x->QueryWhere = '';
	$x->QueryOrder = '';

	$x->AllowSelection = 1;
	$x->HideTableView = ($perm['view'] == 0 ? 1 : 0);
	$x->AllowDelete = $perm['delete'];
	$x->AllowMassDelete = (getLoggedAdmin() !== false);
	$x->AllowInsert = $perm['insert'];
	$x->AllowUpdate = $perm['edit'];
	$x->SeparateDV = 1;
	$x->AllowDeleteOfParents = 0;
	$x->AllowFilters = 1;
	$x->AllowSavingFilters = (getLoggedAdmin() !== false);
	$x->AllowSorting = 1;
	$x->AllowNavigation = 1;
	$x->AllowPrinting = 1;
	$x->AllowPrintingDV = 1;
	$x->AllowCSV = 1;
	$x->RecordsPerPage = 25;
	$x->QuickSearch = 1;
	$x->QuickSearchText = $Translation['quick search'];
	$x->ScriptFileName = 'parts_view.php';
	$x->RedirectAfterInsert = 'parts_view.php?SelectedID=#ID#';
	$x->TableTitle = 'Parts:';
	$x->TableIcon = 'resources/table_icons/tool-box-preferences-icon.png';
	$x->PrimaryKey = '`parts`.`parts_id`';

	$x->ColWidth = [150, 150, 150, 150, 150, 150, 150, 150, 80, 150, 150, 80, 150, 80, 80, 80, ];
	$x->ColCaption = ['Parts ID:', 'Part Type:', 'Part Number:', 'Part Name:', 'Description:', 'Manufacturer:', 'Dealer:', 'Measure', 'Unit Price:', 'Quantity:', 'Freight Cost (R):', 'Total Repairing Amount (R):', 'Tax:', 'Total Repairing Amount (R):', 'Discount price', 'Net Part Price (R):', ];
	$x->ColFieldName = ['parts_id', 'part_type', 'part_number', 'part_name', 'description', 'manufacturer', 'dealer', 'measure', 'unit_price', 'quantity', 'freight', 'amount', 'tax', 'total_amount', 'discount_price', 'net_part_price', ];
	$x->ColNumber  = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, ];

	// template paths below are based on the app main directory
	$x->Template = 'templates/parts_templateTV.html';
	$x->SelectedTemplate = 'templates/parts_templateTVS.html';
	$x->TemplateDV = 'templates/parts_templateDV.html';
	$x->TemplateDVP = 'templates/parts_templateDVP.html';

	$x->ShowTableHeader = 1;
	$x->TVClasses = "";
	$x->DVClasses = "";
	$x->HasCalculatedFields = false;
	$x->AllowConsoleLog = false;
	$x->AllowDVNavigation = true;

	// hook: parts_init
	$render = true;
	if(function_exists('parts_init')) {
		$args = [];
		$render = parts_init($x, getMemberInfo(), $args);
	}

	if($render) $x->Render();

	// hook: parts_header
	$headerCode = '';
	if(function_exists('parts_header')) {
		$args = [];
		$headerCode = parts_header($x->ContentType, getMemberInfo(), $args);
	}

	if(!$headerCode) {
		include_once(__DIR__ . '/header.php'); 
	} else {
		ob_start();
		include_once(__DIR__ . '/header.php');
		echo str_replace('<%%HEADER%%>', ob_get_clean(), $headerCode);
	}

	echo $x->HTML;

	// hook: parts_footer
	$footerCode = '';
	if(function_exists('parts_footer')) {
		$args = [];
		$footerCode = parts_footer($x->ContentType, getMemberInfo(), $args);
	}

	if(!$footerCode) {
		include_once(__DIR__ . '/footer.php'); 
	} else {
		ob_start();
		include_once(__DIR__ . '/footer.php');
		echo str_replace('<%%FOOTER%%>', ob_get_clean(), $footerCode);
	}
