<?php
// This script and data application were generated by AppGini 22.13
// Download AppGini for free from https://bigprof.com/appgini/download/

	include_once(__DIR__ . '/lib.php');
	@include_once(__DIR__ . '/hooks/indicates_repair_damages_found_list.php');
	include_once(__DIR__ . '/indicates_repair_damages_found_list_dml.php');

	// mm: can the current member access this page?
	$perm = getTablePermissions('indicates_repair_damages_found_list');
	if(!$perm['access']) {
		echo error_message($Translation['tableAccessDenied']);
		exit;
	}

	$x = new DataList;
	$x->TableName = 'indicates_repair_damages_found_list';

	// Fields that can be displayed in the table view
	$x->QueryFieldsTV = [
		"`indicates_repair_damages_found_list`.`repair_damages_list_id`" => "repair_damages_list_id",
		"`indicates_repair_damages_found_list`.`brought_in_for_repairs`" => "brought_in_for_repairs",
		"`indicates_repair_damages_found_list`.`after_repairs`" => "after_repairs",
		"IF(    CHAR_LENGTH(`driver1`.`drivers_name_and_surname`) || CHAR_LENGTH(`driver1`.`drivers_persal_number`), CONCAT_WS('',   `driver1`.`drivers_name_and_surname`, '      |   and    |   ', `driver1`.`drivers_persal_number`), '') /* Driver Name & Surname: */" => "driver_name_and_surname",
		"IF(    CHAR_LENGTH(`driver1`.`drivers_persal_number`) || CHAR_LENGTH(`driver1`.`drivers_license_number`), CONCAT_WS('',   `driver1`.`drivers_persal_number`, '      |     and     |   ', `driver1`.`drivers_license_number`), '') /* Driver Persal Number: */" => "driver_persal_number",
		"`indicates_repair_damages_found_list`.`driver_signature`" => "driver_signature",
		"if(`indicates_repair_damages_found_list`.`vehicle_return_date_signed`,date_format(`indicates_repair_damages_found_list`.`vehicle_return_date_signed`,'%d/%m/%Y %H:%i'),'')" => "vehicle_return_date_signed",
		"`indicates_repair_damages_found_list`.`company_name_and_surname`" => "company_name_and_surname",
		"`indicates_repair_damages_found_list`.`company_repesentative_signature`" => "company_repesentative_signature",
		"if(`indicates_repair_damages_found_list`.`vehicle_return_date_signed_by_representative`,date_format(`indicates_repair_damages_found_list`.`vehicle_return_date_signed_by_representative`,'%d/%m/%Y %H:%i'),'')" => "vehicle_return_date_signed_by_representative",
		"`indicates_repair_damages_found_list`.`indicates_and_list_details_of_damages_deficiencies`" => "indicates_and_list_details_of_damages_deficiencies",
	];
	// mapping incoming sort by requests to actual query fields
	$x->SortFields = [
		1 => '`indicates_repair_damages_found_list`.`repair_damages_list_id`',
		2 => 2,
		3 => 3,
		4 => 4,
		5 => 5,
		6 => 6,
		7 => '`indicates_repair_damages_found_list`.`vehicle_return_date_signed`',
		8 => 8,
		9 => 9,
		10 => '`indicates_repair_damages_found_list`.`vehicle_return_date_signed_by_representative`',
		11 => 11,
	];

	// Fields that can be displayed in the csv file
	$x->QueryFieldsCSV = [
		"`indicates_repair_damages_found_list`.`repair_damages_list_id`" => "repair_damages_list_id",
		"`indicates_repair_damages_found_list`.`brought_in_for_repairs`" => "brought_in_for_repairs",
		"`indicates_repair_damages_found_list`.`after_repairs`" => "after_repairs",
		"IF(    CHAR_LENGTH(`driver1`.`drivers_name_and_surname`) || CHAR_LENGTH(`driver1`.`drivers_persal_number`), CONCAT_WS('',   `driver1`.`drivers_name_and_surname`, '      |   and    |   ', `driver1`.`drivers_persal_number`), '') /* Driver Name & Surname: */" => "driver_name_and_surname",
		"IF(    CHAR_LENGTH(`driver1`.`drivers_persal_number`) || CHAR_LENGTH(`driver1`.`drivers_license_number`), CONCAT_WS('',   `driver1`.`drivers_persal_number`, '      |     and     |   ', `driver1`.`drivers_license_number`), '') /* Driver Persal Number: */" => "driver_persal_number",
		"`indicates_repair_damages_found_list`.`driver_signature`" => "driver_signature",
		"if(`indicates_repair_damages_found_list`.`vehicle_return_date_signed`,date_format(`indicates_repair_damages_found_list`.`vehicle_return_date_signed`,'%d/%m/%Y %H:%i'),'')" => "vehicle_return_date_signed",
		"`indicates_repair_damages_found_list`.`company_name_and_surname`" => "company_name_and_surname",
		"`indicates_repair_damages_found_list`.`company_repesentative_signature`" => "company_repesentative_signature",
		"if(`indicates_repair_damages_found_list`.`vehicle_return_date_signed_by_representative`,date_format(`indicates_repair_damages_found_list`.`vehicle_return_date_signed_by_representative`,'%d/%m/%Y %H:%i'),'')" => "vehicle_return_date_signed_by_representative",
		"`indicates_repair_damages_found_list`.`indicates_and_list_details_of_damages_deficiencies`" => "indicates_and_list_details_of_damages_deficiencies",
	];
	// Fields that can be filtered
	$x->QueryFieldsFilters = [
		"`indicates_repair_damages_found_list`.`repair_damages_list_id`" => "Repair & Damages List ID:",
		"`indicates_repair_damages_found_list`.`brought_in_for_repairs`" => "Brought in for Repairs:",
		"`indicates_repair_damages_found_list`.`after_repairs`" => "After Repairs:",
		"IF(    CHAR_LENGTH(`driver1`.`drivers_name_and_surname`) || CHAR_LENGTH(`driver1`.`drivers_persal_number`), CONCAT_WS('',   `driver1`.`drivers_name_and_surname`, '      |   and    |   ', `driver1`.`drivers_persal_number`), '') /* Driver Name & Surname: */" => "Driver Name & Surname:",
		"IF(    CHAR_LENGTH(`driver1`.`drivers_persal_number`) || CHAR_LENGTH(`driver1`.`drivers_license_number`), CONCAT_WS('',   `driver1`.`drivers_persal_number`, '      |     and     |   ', `driver1`.`drivers_license_number`), '') /* Driver Persal Number: */" => "Driver Persal Number:",
		"`indicates_repair_damages_found_list`.`vehicle_return_date_signed`" => "Declaration Date & Time:",
		"`indicates_repair_damages_found_list`.`company_name_and_surname`" => "Company Representativer Name & Surname:",
		"`indicates_repair_damages_found_list`.`vehicle_return_date_signed_by_representative`" => "Declaration Date & Time:",
		"`indicates_repair_damages_found_list`.`indicates_and_list_details_of_damages_deficiencies`" => "Indicates and list details of damages deficiencies and lost found:",
	];

	// Fields that can be quick searched
	$x->QueryFieldsQS = [
		"`indicates_repair_damages_found_list`.`repair_damages_list_id`" => "repair_damages_list_id",
		"`indicates_repair_damages_found_list`.`brought_in_for_repairs`" => "brought_in_for_repairs",
		"`indicates_repair_damages_found_list`.`after_repairs`" => "after_repairs",
		"IF(    CHAR_LENGTH(`driver1`.`drivers_name_and_surname`) || CHAR_LENGTH(`driver1`.`drivers_persal_number`), CONCAT_WS('',   `driver1`.`drivers_name_and_surname`, '      |   and    |   ', `driver1`.`drivers_persal_number`), '') /* Driver Name & Surname: */" => "driver_name_and_surname",
		"IF(    CHAR_LENGTH(`driver1`.`drivers_persal_number`) || CHAR_LENGTH(`driver1`.`drivers_license_number`), CONCAT_WS('',   `driver1`.`drivers_persal_number`, '      |     and     |   ', `driver1`.`drivers_license_number`), '') /* Driver Persal Number: */" => "driver_persal_number",
		"if(`indicates_repair_damages_found_list`.`vehicle_return_date_signed`,date_format(`indicates_repair_damages_found_list`.`vehicle_return_date_signed`,'%d/%m/%Y %H:%i'),'')" => "vehicle_return_date_signed",
		"`indicates_repair_damages_found_list`.`company_name_and_surname`" => "company_name_and_surname",
		"if(`indicates_repair_damages_found_list`.`vehicle_return_date_signed_by_representative`,date_format(`indicates_repair_damages_found_list`.`vehicle_return_date_signed_by_representative`,'%d/%m/%Y %H:%i'),'')" => "vehicle_return_date_signed_by_representative",
		"`indicates_repair_damages_found_list`.`indicates_and_list_details_of_damages_deficiencies`" => "indicates_and_list_details_of_damages_deficiencies",
	];

	// Lookup fields that can be used as filterers
	$x->filterers = ['driver_name_and_surname' => 'Driver Name & Surname:', ];

	$x->QueryFrom = "`indicates_repair_damages_found_list` LEFT JOIN `driver` as driver1 ON `driver1`.`driver_id`=`indicates_repair_damages_found_list`.`driver_name_and_surname` ";
	$x->QueryWhere = '';
	$x->QueryOrder = '';

	$x->AllowSelection = 1;
	$x->HideTableView = ($perm['view'] == 0 ? 1 : 0);
	$x->AllowDelete = $perm['delete'];
	$x->AllowMassDelete = (getLoggedAdmin() !== false);
	$x->AllowInsert = $perm['insert'];
	$x->AllowUpdate = $perm['edit'];
	$x->SeparateDV = 1;
	$x->AllowDeleteOfParents = 0;
	$x->AllowFilters = 1;
	$x->AllowSavingFilters = (getLoggedAdmin() !== false);
	$x->AllowSorting = 1;
	$x->AllowNavigation = 1;
	$x->AllowPrinting = 1;
	$x->AllowPrintingDV = 1;
	$x->AllowCSV = 1;
	$x->RecordsPerPage = 25;
	$x->QuickSearch = 1;
	$x->QuickSearchText = $Translation['quick search'];
	$x->ScriptFileName = 'indicates_repair_damages_found_list_view.php';
	$x->RedirectAfterInsert = 'indicates_repair_damages_found_list_view.php?SelectedID=#ID#';
	$x->TableTitle = 'Indicates Repairs & Damages Found List:';
	$x->TableIcon = 'resources/table_icons/cut_128.png';
	$x->PrimaryKey = '`indicates_repair_damages_found_list`.`repair_damages_list_id`';

	$x->ColWidth = [150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, ];
	$x->ColCaption = ['Repair & Damages List ID:', 'Brought in for Repairs:', 'After Repairs:', 'Driver Name & Surname:', 'Driver Persal Number:', 'Driver Signature:', 'Declaration Date & Time:', 'Company Representativer Name & Surname:', 'Company Representative Signature:', 'Declaration Date & Time:', 'Indicates and list details of damages deficiencies and lost found:', ];
	$x->ColFieldName = ['repair_damages_list_id', 'brought_in_for_repairs', 'after_repairs', 'driver_name_and_surname', 'driver_persal_number', 'driver_signature', 'vehicle_return_date_signed', 'company_name_and_surname', 'company_repesentative_signature', 'vehicle_return_date_signed_by_representative', 'indicates_and_list_details_of_damages_deficiencies', ];
	$x->ColNumber  = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, ];

	// template paths below are based on the app main directory
	$x->Template = 'templates/indicates_repair_damages_found_list_templateTV.html';
	$x->SelectedTemplate = 'templates/indicates_repair_damages_found_list_templateTVS.html';
	$x->TemplateDV = 'templates/indicates_repair_damages_found_list_templateDV.html';
	$x->TemplateDVP = 'templates/indicates_repair_damages_found_list_templateDVP.html';

	$x->ShowTableHeader = 1;
	$x->TVClasses = "";
	$x->DVClasses = "";
	$x->HasCalculatedFields = false;
	$x->AllowConsoleLog = false;
	$x->AllowDVNavigation = true;

	// hook: indicates_repair_damages_found_list_init
	$render = true;
	if(function_exists('indicates_repair_damages_found_list_init')) {
		$args = [];
		$render = indicates_repair_damages_found_list_init($x, getMemberInfo(), $args);
	}

	if($render) $x->Render();

	// hook: indicates_repair_damages_found_list_header
	$headerCode = '';
	if(function_exists('indicates_repair_damages_found_list_header')) {
		$args = [];
		$headerCode = indicates_repair_damages_found_list_header($x->ContentType, getMemberInfo(), $args);
	}

	if(!$headerCode) {
		include_once(__DIR__ . '/header.php'); 
	} else {
		ob_start();
		include_once(__DIR__ . '/header.php');
		echo str_replace('<%%HEADER%%>', ob_get_clean(), $headerCode);
	}

	echo $x->HTML;

	// hook: indicates_repair_damages_found_list_footer
	$footerCode = '';
	if(function_exists('indicates_repair_damages_found_list_footer')) {
		$args = [];
		$footerCode = indicates_repair_damages_found_list_footer($x->ContentType, getMemberInfo(), $args);
	}

	if(!$footerCode) {
		include_once(__DIR__ . '/footer.php'); 
	} else {
		ob_start();
		include_once(__DIR__ . '/footer.php');
		echo str_replace('<%%FOOTER%%>', ob_get_clean(), $footerCode);
	}
