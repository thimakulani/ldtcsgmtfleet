<?php

// Data functions (insert, update, delete, form) for table vehicle_annual_inspection

// This script and data application were generated by AppGini 22.13
// Download AppGini for free from https://bigprof.com/appgini/download/

function vehicle_annual_inspection_insert(&$error_message = '') {
	global $Translation;

	// mm: can member insert record?
	$arrPerm = getTablePermissions('vehicle_annual_inspection');
	if(!$arrPerm['insert']) return false;

	$data = [
		'vehicle_registration_number' => Request::lookup('vehicle_registration_number', ''),
		'register_number' => Request::lookup('register_number', ''),
		'engine_number' => Request::lookup('vehicle_registration_number'),
		'chassis_number' => Request::lookup('vehicle_registration_number'),
		'make_of_vehicle' => Request::lookup('vehicle_registration_number'),
		'model_of_vehicle' => Request::lookup('vehicle_registration_number'),
		'year_model_specification' => Request::lookup('vehicle_registration_number'),
		'engine_capacity' => Request::lookup('vehicle_registration_number'),
		'tyre_size' => Request::lookup('vehicle_registration_number'),
		'transmission' => Request::lookup('vehicle_registration_number'),
		'fuel_type' => Request::lookup('vehicle_registration_number'),
		'type_of_vehicle' => Request::lookup('vehicle_registration_number'),
		'colour_of_vehicle' => Request::lookup('vehicle_registration_number'),
		'application_status' => Request::lookup('vehicle_registration_number'),
		'renewal_of_license' => Request::lookup('vehicle_registration_number'),
		'barcode_number' => Request::lookup('vehicle_registration_number'),
		'last_entry_logbook' => Request::dateComponents('last_entry_logbook', ''),
		'photo_of_vehicle' => Request::fileUpload('photo_of_vehicle', [
			'maxSize' => 1048576,
			'types' => 'jpg|jpeg|gif|png|webp',
			'noRename' => true,
			'dir' => '',
			'success' => function($name, $selected_id) {
				createThumbnail($name, getThumbnailSpecs('vehicle_annual_inspection', 'photo_of_vehicle', 'tv'));
				createThumbnail($name, getThumbnailSpecs('vehicle_annual_inspection', 'photo_of_vehicle', 'dv'));
			},
			'failure' => function($selected_id, $fileRemoved) {
				if(!strlen(Request::val('SelectedID'))) return '';

				/* for empty upload fields, when saving a copy of an existing record, copy the original upload field */
				return existing_value('vehicle_annual_inspection', 'photo_of_vehicle', Request::val('SelectedID'));
			},
		]),
		'department_name' => Request::lookup('department_name', ''),
		'province' => Request::lookup('province', ''),
		'district' => Request::lookup('district', ''),
		'mechanical_inspection' => Request::val('mechanical_inspection', ''),
		'upholstery' => Request::val('upholstery', ''),
		'electrical_inspection' => Request::val('electrical_inspection', ''),
		'wheel_spanner' => Request::val('wheel_spanner', ''),
		'spare_wheel' => Request::val('spare_wheel', ''),
		'jack' => Request::val('jack', ''),
		'radio' => Request::val('radio', ''),
		'triangle' => Request::val('triangle', ''),
		'log_book' => Request::val('log_book', ''),
		'iternary' => Request::val('iternary', ''),
		'fuel_card' => Request::val('fuel_card', ''),
		'recommendation' => Request::val('recommendation', ''),
		'documents' => Request::fileUpload('documents', [
			'maxSize' => 5242880,
			'types' => 'txt|doc|docx|docm|odt|pdf|rtf',
			'noRename' => true,
			'dir' => '',
			'success' => function($name, $selected_id) {
			},
			'failure' => function($selected_id, $fileRemoved) {
				if(!strlen(Request::val('SelectedID'))) return '';

				/* for empty upload fields, when saving a copy of an existing record, copy the original upload field */
				return existing_value('vehicle_annual_inspection', 'documents', Request::val('SelectedID'));
			},
		]),
		'checking_officer_name_and_surname' => Request::val('checking_officer_name_and_surname', ''),
		'checking_officer_contact_email' => Request::val('checking_officer_contact_email', ''),
		'date_of_inspection' => Request::dateComponents('date_of_inspection', '0000-00-00'),
	];

	if($data['vehicle_registration_number'] === '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Registration Number:': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">' . $Translation['< back'] . '</a></div>';
		exit;
	}
	if($data['register_number'] === '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Register Number:': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">' . $Translation['< back'] . '</a></div>';
		exit;
	}
	if($data['engine_number'] === '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Engine Number:': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">' . $Translation['< back'] . '</a></div>';
		exit;
	}
	if($data['chassis_number'] === '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Chassis/Vin Number:': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">' . $Translation['< back'] . '</a></div>';
		exit;
	}
	if($data['make_of_vehicle'] === '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Make of Vehicle:': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">' . $Translation['< back'] . '</a></div>';
		exit;
	}
	if($data['model_of_vehicle'] === '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Model of Vehicle:': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">' . $Translation['< back'] . '</a></div>';
		exit;
	}
	if($data['year_model_specification'] === '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Year Model Specification:': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">' . $Translation['< back'] . '</a></div>';
		exit;
	}
	if($data['engine_capacity'] === '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Engine Capacity (cc):': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">' . $Translation['< back'] . '</a></div>';
		exit;
	}
	if($data['department_name'] === '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Department Name:': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">' . $Translation['< back'] . '</a></div>';
		exit;
	}
	if($data['province'] === '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Province:': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">' . $Translation['< back'] . '</a></div>';
		exit;
	}
	if($data['district'] === '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'District and Station:': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">' . $Translation['< back'] . '</a></div>';
		exit;
	}
	if($data['checking_officer_name_and_surname'] === '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Checking Officer:': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">' . $Translation['< back'] . '</a></div>';
		exit;
	}
	if($data['checking_officer_contact_email'] === '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Checking Officer Contact  Email:': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">' . $Translation['< back'] . '</a></div>';
		exit;
	}

	// hook: vehicle_annual_inspection_before_insert
	if(function_exists('vehicle_annual_inspection_before_insert')) {
		$args = [];
		if(!vehicle_annual_inspection_before_insert($data, getMemberInfo(), $args)) {
			if(isset($args['error_message'])) $error_message = $args['error_message'];
			return false;
		}
	}

	$error = '';
	// set empty fields to NULL
	$data = array_map(function($v) { return ($v === '' ? NULL : $v); }, $data);
	insert('vehicle_annual_inspection', backtick_keys_once($data), $error);
	if($error) {
		$error_message = $error;
		return false;
	}

	$recID = db_insert_id(db_link());

	update_calc_fields('vehicle_annual_inspection', $recID, calculated_fields()['vehicle_annual_inspection']);

	// hook: vehicle_annual_inspection_after_insert
	if(function_exists('vehicle_annual_inspection_after_insert')) {
		$res = sql("SELECT * FROM `vehicle_annual_inspection` WHERE `fleet_asset_id`='" . makeSafe($recID, false) . "' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)) {
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = makeSafe($recID, false);
		$args = [];
		if(!vehicle_annual_inspection_after_insert($data, getMemberInfo(), $args)) { return $recID; }
	}

	// mm: save ownership data
	set_record_owner('vehicle_annual_inspection', $recID, getLoggedMemberID());

	// if this record is a copy of another record, copy children if applicable
	if(strlen(Request::val('SelectedID'))) vehicle_annual_inspection_copy_children($recID, Request::val('SelectedID'));

	return $recID;
}

function vehicle_annual_inspection_copy_children($destination_id, $source_id) {
	global $Translation;
	$requests = []; // array of curl handlers for launching insert requests
	$eo = ['silentErrors' => true];
	$safe_sid = makeSafe($source_id);

	// launch requests, asynchronously
	curl_batch($requests);
}

function vehicle_annual_inspection_delete($selected_id, $AllowDeleteOfParents = false, $skipChecks = false) {
	// insure referential integrity ...
	global $Translation;
	$selected_id = makeSafe($selected_id);

	// mm: can member delete record?
	if(!check_record_permission('vehicle_annual_inspection', $selected_id, 'delete')) {
		return $Translation['You don\'t have enough permissions to delete this record'];
	}

	// hook: vehicle_annual_inspection_before_delete
	if(function_exists('vehicle_annual_inspection_before_delete')) {
		$args = [];
		if(!vehicle_annual_inspection_before_delete($selected_id, $skipChecks, getMemberInfo(), $args))
			return $Translation['Couldn\'t delete this record'] . (
				!empty($args['error_message']) ?
					'<div class="text-bold">' . strip_tags($args['error_message']) . '</div>'
					: '' 
			);
	}

	sql("DELETE FROM `vehicle_annual_inspection` WHERE `fleet_asset_id`='{$selected_id}'", $eo);

	// hook: vehicle_annual_inspection_after_delete
	if(function_exists('vehicle_annual_inspection_after_delete')) {
		$args = [];
		vehicle_annual_inspection_after_delete($selected_id, getMemberInfo(), $args);
	}

	// mm: delete ownership data
	sql("DELETE FROM `membership_userrecords` WHERE `tableName`='vehicle_annual_inspection' AND `pkValue`='{$selected_id}'", $eo);
}

function vehicle_annual_inspection_update(&$selected_id, &$error_message = '') {
	global $Translation;

	// mm: can member edit record?
	if(!check_record_permission('vehicle_annual_inspection', $selected_id, 'edit')) return false;

	$data = [
		'vehicle_registration_number' => Request::lookup('vehicle_registration_number', ''),
		'register_number' => Request::lookup('register_number', ''),
		'engine_number' => Request::lookup('vehicle_registration_number'),
		'chassis_number' => Request::lookup('vehicle_registration_number'),
		'make_of_vehicle' => Request::lookup('vehicle_registration_number'),
		'model_of_vehicle' => Request::lookup('vehicle_registration_number'),
		'year_model_specification' => Request::lookup('vehicle_registration_number'),
		'engine_capacity' => Request::lookup('vehicle_registration_number'),
		'tyre_size' => Request::lookup('vehicle_registration_number'),
		'transmission' => Request::lookup('vehicle_registration_number'),
		'fuel_type' => Request::lookup('vehicle_registration_number'),
		'type_of_vehicle' => Request::lookup('vehicle_registration_number'),
		'colour_of_vehicle' => Request::lookup('vehicle_registration_number'),
		'application_status' => Request::lookup('vehicle_registration_number'),
		'renewal_of_license' => Request::lookup('vehicle_registration_number'),
		'barcode_number' => Request::lookup('vehicle_registration_number'),
		'last_entry_logbook' => Request::dateComponents('last_entry_logbook', ''),
		'photo_of_vehicle' => Request::fileUpload('photo_of_vehicle', [
			'maxSize' => 1048576,
			'types' => 'jpg|jpeg|gif|png|webp',
			'noRename' => true,
			'dir' => '',
			'id' => $selected_id,
			'success' => function($name, $selected_id) {
				createThumbnail($name, getThumbnailSpecs('vehicle_annual_inspection', 'photo_of_vehicle', 'tv'));
				createThumbnail($name, getThumbnailSpecs('vehicle_annual_inspection', 'photo_of_vehicle', 'dv'));
			},
			'removeOnRequest' => true,
			'remove' => function($selected_id) {
				// do nothing: preserve removed files on server.
			},
			'failure' => function($selected_id, $fileRemoved) {
				if($fileRemoved) return '';
				return existing_value('vehicle_annual_inspection', 'photo_of_vehicle', $selected_id);
			},
		]),
		'department_name' => Request::lookup('department_name', ''),
		'province' => Request::lookup('province', ''),
		'district' => Request::lookup('district', ''),
		'mechanical_inspection' => Request::val('mechanical_inspection', ''),
		'upholstery' => Request::val('upholstery', ''),
		'electrical_inspection' => Request::val('electrical_inspection', ''),
		'wheel_spanner' => Request::val('wheel_spanner', ''),
		'spare_wheel' => Request::val('spare_wheel', ''),
		'jack' => Request::val('jack', ''),
		'radio' => Request::val('radio', ''),
		'triangle' => Request::val('triangle', ''),
		'log_book' => Request::val('log_book', ''),
		'iternary' => Request::val('iternary', ''),
		'fuel_card' => Request::val('fuel_card', ''),
		'recommendation' => Request::val('recommendation', ''),
		'documents' => Request::fileUpload('documents', [
			'maxSize' => 5242880,
			'types' => 'txt|doc|docx|docm|odt|pdf|rtf',
			'noRename' => true,
			'dir' => '',
			'id' => $selected_id,
			'success' => function($name, $selected_id) {
			},
			'removeOnRequest' => true,
			'remove' => function($selected_id) {
				// do nothing: preserve removed files on server.
			},
			'failure' => function($selected_id, $fileRemoved) {
				if($fileRemoved) return '';
				return existing_value('vehicle_annual_inspection', 'documents', $selected_id);
			},
		]),
		'checking_officer_name_and_surname' => Request::val('checking_officer_name_and_surname', ''),
		'checking_officer_contact_email' => Request::val('checking_officer_contact_email', ''),
		'date_of_inspection' => Request::dateComponents('date_of_inspection', ''),
	];

	if($data['vehicle_registration_number'] === '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Registration Number:': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">' . $Translation['< back'] . '</a></div>';
		exit;
	}
	if($data['register_number'] === '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Register Number:': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">' . $Translation['< back'] . '</a></div>';
		exit;
	}
	if($data['engine_number'] === '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Engine Number:': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">' . $Translation['< back'] . '</a></div>';
		exit;
	}
	if($data['chassis_number'] === '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Chassis/Vin Number:': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">' . $Translation['< back'] . '</a></div>';
		exit;
	}
	if($data['make_of_vehicle'] === '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Make of Vehicle:': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">' . $Translation['< back'] . '</a></div>';
		exit;
	}
	if($data['model_of_vehicle'] === '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Model of Vehicle:': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">' . $Translation['< back'] . '</a></div>';
		exit;
	}
	if($data['year_model_specification'] === '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Year Model Specification:': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">' . $Translation['< back'] . '</a></div>';
		exit;
	}
	if($data['engine_capacity'] === '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Engine Capacity (cc):': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">' . $Translation['< back'] . '</a></div>';
		exit;
	}
	if($data['department_name'] === '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Department Name:': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">' . $Translation['< back'] . '</a></div>';
		exit;
	}
	if($data['province'] === '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Province:': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">' . $Translation['< back'] . '</a></div>';
		exit;
	}
	if($data['district'] === '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'District and Station:': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">' . $Translation['< back'] . '</a></div>';
		exit;
	}
	if($data['checking_officer_name_and_surname'] === '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Checking Officer:': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">' . $Translation['< back'] . '</a></div>';
		exit;
	}
	if($data['checking_officer_contact_email'] === '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Checking Officer Contact  Email:': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">' . $Translation['< back'] . '</a></div>';
		exit;
	}
	// get existing values
	$old_data = getRecord('vehicle_annual_inspection', $selected_id);
	if(is_array($old_data)) {
		$old_data = array_map('makeSafe', $old_data);
		$old_data['selectedID'] = makeSafe($selected_id);
	}

	$data['selectedID'] = makeSafe($selected_id);

	// hook: vehicle_annual_inspection_before_update
	if(function_exists('vehicle_annual_inspection_before_update')) {
		$args = ['old_data' => $old_data];
		if(!vehicle_annual_inspection_before_update($data, getMemberInfo(), $args)) {
			if(isset($args['error_message'])) $error_message = $args['error_message'];
			return false;
		}
	}

	$set = $data; unset($set['selectedID']);
	foreach ($set as $field => $value) {
		$set[$field] = ($value !== '' && $value !== NULL) ? $value : NULL;
	}

	if(!update(
		'vehicle_annual_inspection', 
		backtick_keys_once($set), 
		['`fleet_asset_id`' => $selected_id], 
		$error_message
	)) {
		echo $error_message;
		echo '<a href="vehicle_annual_inspection_view.php?SelectedID=' . urlencode($selected_id) . "\">{$Translation['< back']}</a>";
		exit;
	}


	$eo = ['silentErrors' => true];

	update_calc_fields('vehicle_annual_inspection', $data['selectedID'], calculated_fields()['vehicle_annual_inspection']);

	// hook: vehicle_annual_inspection_after_update
	if(function_exists('vehicle_annual_inspection_after_update')) {
		$res = sql("SELECT * FROM `vehicle_annual_inspection` WHERE `fleet_asset_id`='{$data['selectedID']}' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)) $data = array_map('makeSafe', $row);

		$data['selectedID'] = $data['fleet_asset_id'];
		$args = ['old_data' => $old_data];
		if(!vehicle_annual_inspection_after_update($data, getMemberInfo(), $args)) return;
	}

	// mm: update ownership data
	sql("UPDATE `membership_userrecords` SET `dateUpdated`='" . time() . "' WHERE `tableName`='vehicle_annual_inspection' AND `pkValue`='" . makeSafe($selected_id) . "'", $eo);
}

function vehicle_annual_inspection_form($selected_id = '', $AllowUpdate = 1, $AllowInsert = 1, $AllowDelete = 1, $separateDV = 0, $TemplateDV = '', $TemplateDVP = '') {
	// function to return an editable form for a table records
	// and fill it with data of record whose ID is $selected_id. If $selected_id
	// is empty, an empty form is shown, with only an 'Add New'
	// button displayed.

	global $Translation;
	$eo = ['silentErrors' => true];
	$noUploads = null;
	$row = $urow = $jsReadOnly = $jsEditable = $lookups = null;

	$noSaveAsCopy = true;

	// mm: get table permissions
	$arrPerm = getTablePermissions('vehicle_annual_inspection');
	if(!$arrPerm['insert'] && $selected_id == '')
		// no insert permission and no record selected
		// so show access denied error unless TVDV
		return $separateDV ? $Translation['tableAccessDenied'] : '';
	$AllowInsert = ($arrPerm['insert'] ? true : false);
	// print preview?
	$dvprint = false;
	if(strlen($selected_id) && Request::val('dvprint_x') != '') {
		$dvprint = true;
	}

	$filterer_vehicle_registration_number = Request::val('filterer_vehicle_registration_number');
	$filterer_register_number = Request::val('filterer_register_number');
	$filterer_department_name = Request::val('filterer_department_name');
	$filterer_province = Request::val('filterer_province');
	$filterer_district = Request::val('filterer_district');

	// populate filterers, starting from children to grand-parents

	// unique random identifier
	$rnd1 = ($dvprint ? rand(1000000, 9999999) : '');
	// combobox: vehicle_registration_number
	$combo_vehicle_registration_number = new DataCombo;
	// combobox: register_number
	$combo_register_number = new DataCombo;
	// combobox: last_entry_logbook
	$combo_last_entry_logbook = new DateCombo;
	$combo_last_entry_logbook->DateFormat = "dmy";
	$combo_last_entry_logbook->MinYear = defined('vehicle_annual_inspection.last_entry_logbook.MinYear') ? constant('vehicle_annual_inspection.last_entry_logbook.MinYear') : 1900;
	$combo_last_entry_logbook->MaxYear = defined('vehicle_annual_inspection.last_entry_logbook.MaxYear') ? constant('vehicle_annual_inspection.last_entry_logbook.MaxYear') : 2100;
	$combo_last_entry_logbook->DefaultDate = parseMySQLDate('', '');
	$combo_last_entry_logbook->MonthNames = $Translation['month names'];
	$combo_last_entry_logbook->NamePrefix = 'last_entry_logbook';
	// combobox: department_name
	$combo_department_name = new DataCombo;
	// combobox: province
	$combo_province = new DataCombo;
	// combobox: district
	$combo_district = new DataCombo;
	// combobox: wheel_spanner
	$combo_wheel_spanner = new Combo;
	$combo_wheel_spanner->ListType = 0;
	$combo_wheel_spanner->MultipleSeparator = ', ';
	$combo_wheel_spanner->ListBoxHeight = 10;
	$combo_wheel_spanner->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/vehicle_annual_inspection.wheel_spanner.csv')) {
		$wheel_spanner_data = addslashes(implode('', @file(__DIR__ . '/hooks/vehicle_annual_inspection.wheel_spanner.csv')));
		$combo_wheel_spanner->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($wheel_spanner_data))));
		$combo_wheel_spanner->ListData = $combo_wheel_spanner->ListItem;
	} else {
		$combo_wheel_spanner->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("Yes;;No"))));
		$combo_wheel_spanner->ListData = $combo_wheel_spanner->ListItem;
	}
	$combo_wheel_spanner->SelectName = 'wheel_spanner';
	// combobox: spare_wheel
	$combo_spare_wheel = new Combo;
	$combo_spare_wheel->ListType = 0;
	$combo_spare_wheel->MultipleSeparator = ', ';
	$combo_spare_wheel->ListBoxHeight = 10;
	$combo_spare_wheel->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/vehicle_annual_inspection.spare_wheel.csv')) {
		$spare_wheel_data = addslashes(implode('', @file(__DIR__ . '/hooks/vehicle_annual_inspection.spare_wheel.csv')));
		$combo_spare_wheel->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($spare_wheel_data))));
		$combo_spare_wheel->ListData = $combo_spare_wheel->ListItem;
	} else {
		$combo_spare_wheel->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("Yes;;No"))));
		$combo_spare_wheel->ListData = $combo_spare_wheel->ListItem;
	}
	$combo_spare_wheel->SelectName = 'spare_wheel';
	// combobox: jack
	$combo_jack = new Combo;
	$combo_jack->ListType = 0;
	$combo_jack->MultipleSeparator = ', ';
	$combo_jack->ListBoxHeight = 10;
	$combo_jack->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/vehicle_annual_inspection.jack.csv')) {
		$jack_data = addslashes(implode('', @file(__DIR__ . '/hooks/vehicle_annual_inspection.jack.csv')));
		$combo_jack->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($jack_data))));
		$combo_jack->ListData = $combo_jack->ListItem;
	} else {
		$combo_jack->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("Yes;;No"))));
		$combo_jack->ListData = $combo_jack->ListItem;
	}
	$combo_jack->SelectName = 'jack';
	// combobox: radio
	$combo_radio = new Combo;
	$combo_radio->ListType = 0;
	$combo_radio->MultipleSeparator = ', ';
	$combo_radio->ListBoxHeight = 10;
	$combo_radio->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/vehicle_annual_inspection.radio.csv')) {
		$radio_data = addslashes(implode('', @file(__DIR__ . '/hooks/vehicle_annual_inspection.radio.csv')));
		$combo_radio->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($radio_data))));
		$combo_radio->ListData = $combo_radio->ListItem;
	} else {
		$combo_radio->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("Yes;;No"))));
		$combo_radio->ListData = $combo_radio->ListItem;
	}
	$combo_radio->SelectName = 'radio';
	// combobox: triangle
	$combo_triangle = new Combo;
	$combo_triangle->ListType = 0;
	$combo_triangle->MultipleSeparator = ', ';
	$combo_triangle->ListBoxHeight = 10;
	$combo_triangle->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/vehicle_annual_inspection.triangle.csv')) {
		$triangle_data = addslashes(implode('', @file(__DIR__ . '/hooks/vehicle_annual_inspection.triangle.csv')));
		$combo_triangle->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($triangle_data))));
		$combo_triangle->ListData = $combo_triangle->ListItem;
	} else {
		$combo_triangle->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("Yes;;No"))));
		$combo_triangle->ListData = $combo_triangle->ListItem;
	}
	$combo_triangle->SelectName = 'triangle';
	// combobox: log_book
	$combo_log_book = new Combo;
	$combo_log_book->ListType = 0;
	$combo_log_book->MultipleSeparator = ', ';
	$combo_log_book->ListBoxHeight = 10;
	$combo_log_book->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/vehicle_annual_inspection.log_book.csv')) {
		$log_book_data = addslashes(implode('', @file(__DIR__ . '/hooks/vehicle_annual_inspection.log_book.csv')));
		$combo_log_book->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($log_book_data))));
		$combo_log_book->ListData = $combo_log_book->ListItem;
	} else {
		$combo_log_book->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("Yes;;No"))));
		$combo_log_book->ListData = $combo_log_book->ListItem;
	}
	$combo_log_book->SelectName = 'log_book';
	// combobox: iternary
	$combo_iternary = new Combo;
	$combo_iternary->ListType = 0;
	$combo_iternary->MultipleSeparator = ', ';
	$combo_iternary->ListBoxHeight = 10;
	$combo_iternary->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/vehicle_annual_inspection.iternary.csv')) {
		$iternary_data = addslashes(implode('', @file(__DIR__ . '/hooks/vehicle_annual_inspection.iternary.csv')));
		$combo_iternary->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($iternary_data))));
		$combo_iternary->ListData = $combo_iternary->ListItem;
	} else {
		$combo_iternary->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("Yes;;No"))));
		$combo_iternary->ListData = $combo_iternary->ListItem;
	}
	$combo_iternary->SelectName = 'iternary';
	// combobox: fuel_card
	$combo_fuel_card = new Combo;
	$combo_fuel_card->ListType = 0;
	$combo_fuel_card->MultipleSeparator = ', ';
	$combo_fuel_card->ListBoxHeight = 10;
	$combo_fuel_card->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/vehicle_annual_inspection.fuel_card.csv')) {
		$fuel_card_data = addslashes(implode('', @file(__DIR__ . '/hooks/vehicle_annual_inspection.fuel_card.csv')));
		$combo_fuel_card->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($fuel_card_data))));
		$combo_fuel_card->ListData = $combo_fuel_card->ListItem;
	} else {
		$combo_fuel_card->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("Yes;;No"))));
		$combo_fuel_card->ListData = $combo_fuel_card->ListItem;
	}
	$combo_fuel_card->SelectName = 'fuel_card';
	// combobox: date_of_inspection
	$combo_date_of_inspection = new DateCombo;
	$combo_date_of_inspection->DateFormat = "dmy";
	$combo_date_of_inspection->MinYear = defined('vehicle_annual_inspection.date_of_inspection.MinYear') ? constant('vehicle_annual_inspection.date_of_inspection.MinYear') : 1900;
	$combo_date_of_inspection->MaxYear = defined('vehicle_annual_inspection.date_of_inspection.MaxYear') ? constant('vehicle_annual_inspection.date_of_inspection.MaxYear') : 2100;
	$combo_date_of_inspection->DefaultDate = parseMySQLDate('0000-00-00', '0000-00-00');
	$combo_date_of_inspection->MonthNames = $Translation['month names'];
	$combo_date_of_inspection->NamePrefix = 'date_of_inspection';

	if($selected_id) {
		// mm: check member permissions
		if(!$arrPerm['view']) return $Translation['tableAccessDenied'];

		// mm: who is the owner?
		$ownerGroupID = sqlValue("SELECT `groupID` FROM `membership_userrecords` WHERE `tableName`='vehicle_annual_inspection' AND `pkValue`='" . makeSafe($selected_id) . "'");
		$ownerMemberID = sqlValue("SELECT LCASE(`memberID`) FROM `membership_userrecords` WHERE `tableName`='vehicle_annual_inspection' AND `pkValue`='" . makeSafe($selected_id) . "'");

		if($arrPerm['view'] == 1 && getLoggedMemberID() != $ownerMemberID) return $Translation['tableAccessDenied'];
		if($arrPerm['view'] == 2 && getLoggedGroupID() != $ownerGroupID) return $Translation['tableAccessDenied'];

		// can edit?
		$AllowUpdate = 0;
		if(($arrPerm['edit'] == 1 && $ownerMemberID == getLoggedMemberID()) || ($arrPerm['edit'] == 2 && $ownerGroupID == getLoggedGroupID()) || $arrPerm['edit'] == 3) {
			$AllowUpdate = 1;
		}

		$res = sql("SELECT * FROM `vehicle_annual_inspection` WHERE `fleet_asset_id`='" . makeSafe($selected_id) . "'", $eo);
		if(!($row = db_fetch_array($res))) {
			return error_message($Translation['No records found'], 'vehicle_annual_inspection_view.php', false);
		}
		$combo_vehicle_registration_number->SelectedData = $row['vehicle_registration_number'];
		$combo_register_number->SelectedData = $row['register_number'];
		$combo_last_entry_logbook->DefaultDate = $row['last_entry_logbook'];
		$combo_department_name->SelectedData = $row['department_name'];
		$combo_province->SelectedData = $row['province'];
		$combo_district->SelectedData = $row['district'];
		$combo_wheel_spanner->SelectedData = $row['wheel_spanner'];
		$combo_spare_wheel->SelectedData = $row['spare_wheel'];
		$combo_jack->SelectedData = $row['jack'];
		$combo_radio->SelectedData = $row['radio'];
		$combo_triangle->SelectedData = $row['triangle'];
		$combo_log_book->SelectedData = $row['log_book'];
		$combo_iternary->SelectedData = $row['iternary'];
		$combo_fuel_card->SelectedData = $row['fuel_card'];
		$combo_date_of_inspection->DefaultDate = $row['date_of_inspection'];
		$urow = $row; /* unsanitized data */
		$row = array_map('safe_html', $row);
	} else {
		$filterField = Request::val('FilterField');
		$filterOperator = Request::val('FilterOperator');
		$filterValue = Request::val('FilterValue');
		$combo_vehicle_registration_number->SelectedData = $filterer_vehicle_registration_number;
		$combo_register_number->SelectedData = $filterer_register_number;
		$combo_department_name->SelectedData = $filterer_department_name;
		$combo_province->SelectedData = $filterer_province;
		$combo_district->SelectedData = $filterer_district;
		$combo_wheel_spanner->SelectedText = (isset($filterField[1]) && $filterField[1] == '26' && $filterOperator[1] == '<=>' ? $filterValue[1] : '');
		$combo_spare_wheel->SelectedText = (isset($filterField[1]) && $filterField[1] == '27' && $filterOperator[1] == '<=>' ? $filterValue[1] : '');
		$combo_jack->SelectedText = (isset($filterField[1]) && $filterField[1] == '28' && $filterOperator[1] == '<=>' ? $filterValue[1] : '');
		$combo_radio->SelectedText = (isset($filterField[1]) && $filterField[1] == '29' && $filterOperator[1] == '<=>' ? $filterValue[1] : '');
		$combo_triangle->SelectedText = (isset($filterField[1]) && $filterField[1] == '30' && $filterOperator[1] == '<=>' ? $filterValue[1] : '');
		$combo_log_book->SelectedText = (isset($filterField[1]) && $filterField[1] == '31' && $filterOperator[1] == '<=>' ? $filterValue[1] : '');
		$combo_iternary->SelectedText = (isset($filterField[1]) && $filterField[1] == '32' && $filterOperator[1] == '<=>' ? $filterValue[1] : '');
		$combo_fuel_card->SelectedText = (isset($filterField[1]) && $filterField[1] == '33' && $filterOperator[1] == '<=>' ? $filterValue[1] : '');
	}
	$combo_vehicle_registration_number->HTML = '<span id="vehicle_registration_number-container' . $rnd1 . '"></span><input type="hidden" name="vehicle_registration_number" id="vehicle_registration_number' . $rnd1 . '" value="' . html_attr($combo_vehicle_registration_number->SelectedData) . '">';
	$combo_vehicle_registration_number->MatchText = '<span id="vehicle_registration_number-container-readonly' . $rnd1 . '"></span><input type="hidden" name="vehicle_registration_number" id="vehicle_registration_number' . $rnd1 . '" value="' . html_attr($combo_vehicle_registration_number->SelectedData) . '">';
	$combo_register_number->HTML = '<span id="register_number-container' . $rnd1 . '"></span><input type="hidden" name="register_number" id="register_number' . $rnd1 . '" value="' . html_attr($combo_register_number->SelectedData) . '">';
	$combo_register_number->MatchText = '<span id="register_number-container-readonly' . $rnd1 . '"></span><input type="hidden" name="register_number" id="register_number' . $rnd1 . '" value="' . html_attr($combo_register_number->SelectedData) . '">';
	$combo_department_name->HTML = '<span id="department_name-container' . $rnd1 . '"></span><input type="hidden" name="department_name" id="department_name' . $rnd1 . '" value="' . html_attr($combo_department_name->SelectedData) . '">';
	$combo_department_name->MatchText = '<span id="department_name-container-readonly' . $rnd1 . '"></span><input type="hidden" name="department_name" id="department_name' . $rnd1 . '" value="' . html_attr($combo_department_name->SelectedData) . '">';
	$combo_province->HTML = '<span id="province-container' . $rnd1 . '"></span><input type="hidden" name="province" id="province' . $rnd1 . '" value="' . html_attr($combo_province->SelectedData) . '">';
	$combo_province->MatchText = '<span id="province-container-readonly' . $rnd1 . '"></span><input type="hidden" name="province" id="province' . $rnd1 . '" value="' . html_attr($combo_province->SelectedData) . '">';
	$combo_district->HTML = '<span id="district-container' . $rnd1 . '"></span><input type="hidden" name="district" id="district' . $rnd1 . '" value="' . html_attr($combo_district->SelectedData) . '">';
	$combo_district->MatchText = '<span id="district-container-readonly' . $rnd1 . '"></span><input type="hidden" name="district" id="district' . $rnd1 . '" value="' . html_attr($combo_district->SelectedData) . '">';
	$combo_wheel_spanner->Render();
	$combo_spare_wheel->Render();
	$combo_jack->Render();
	$combo_radio->Render();
	$combo_triangle->Render();
	$combo_log_book->Render();
	$combo_iternary->Render();
	$combo_fuel_card->Render();

	ob_start();
	?>

	<script>
		// initial lookup values
		AppGini.current_vehicle_registration_number__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['vehicle_registration_number'] : htmlspecialchars($filterer_vehicle_registration_number, ENT_QUOTES)); ?>"};
		AppGini.current_register_number__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['register_number'] : htmlspecialchars($filterer_register_number, ENT_QUOTES)); ?>"};
		AppGini.current_department_name__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['department_name'] : htmlspecialchars($filterer_department_name, ENT_QUOTES)); ?>"};
		AppGini.current_province__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['province'] : htmlspecialchars($filterer_province, ENT_QUOTES)); ?>"};
		AppGini.current_district__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['district'] : htmlspecialchars($filterer_district, ENT_QUOTES)); ?>"};

		jQuery(function() {
			setTimeout(function() {
				if(typeof(vehicle_registration_number_reload__RAND__) == 'function') vehicle_registration_number_reload__RAND__();
				if(typeof(register_number_reload__RAND__) == 'function') register_number_reload__RAND__();
				if(typeof(department_name_reload__RAND__) == 'function') department_name_reload__RAND__();
				if(typeof(province_reload__RAND__) == 'function') province_reload__RAND__();
				if(typeof(district_reload__RAND__) == 'function') district_reload__RAND__();
			}, 50); /* we need to slightly delay client-side execution of the above code to allow AppGini.ajaxCache to work */
		});
		function vehicle_registration_number_reload__RAND__() {
		<?php if(($AllowUpdate || ($arrPerm['insert'] && !$selected_id)) && !$dvprint) { ?>

			$j("#vehicle_registration_number-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_vehicle_registration_number__RAND__.value, t: 'vehicle_annual_inspection', f: 'vehicle_registration_number' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="vehicle_registration_number"]').val(resp.results[0].id);
							$j('[id=vehicle_registration_number-container-readonly__RAND__]').html('<span class="match-text" id="vehicle_registration_number-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=gmt_fleet_register_view_parent]').hide(); } else { $j('.btn[id=gmt_fleet_register_view_parent]').show(); }


							if(typeof(vehicle_registration_number_update_autofills__RAND__) == 'function') vehicle_registration_number_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'vehicle_annual_inspection', f: 'vehicle_registration_number' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_vehicle_registration_number__RAND__.value = e.added.id;
				AppGini.current_vehicle_registration_number__RAND__.text = e.added.text;
				$j('[name="vehicle_registration_number"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=gmt_fleet_register_view_parent]').hide(); } else { $j('.btn[id=gmt_fleet_register_view_parent]').show(); }


				if(typeof(vehicle_registration_number_update_autofills__RAND__) == 'function') vehicle_registration_number_update_autofills__RAND__();
			});

			if(!$j("#vehicle_registration_number-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_vehicle_registration_number__RAND__.value, t: 'vehicle_annual_inspection', f: 'vehicle_registration_number' },
					success: function(resp) {
						$j('[name="vehicle_registration_number"]').val(resp.results[0].id);
						$j('[id=vehicle_registration_number-container-readonly__RAND__]').html('<span class="match-text" id="vehicle_registration_number-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=gmt_fleet_register_view_parent]').hide(); } else { $j('.btn[id=gmt_fleet_register_view_parent]').show(); }

						if(typeof(vehicle_registration_number_update_autofills__RAND__) == 'function') vehicle_registration_number_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_vehicle_registration_number__RAND__.value, t: 'vehicle_annual_inspection', f: 'vehicle_registration_number' },
				success: function(resp) {
					$j('[id=vehicle_registration_number-container__RAND__], [id=vehicle_registration_number-container-readonly__RAND__]').html('<span class="match-text" id="vehicle_registration_number-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=gmt_fleet_register_view_parent]').hide(); } else { $j('.btn[id=gmt_fleet_register_view_parent]').show(); }

					if(typeof(vehicle_registration_number_update_autofills__RAND__) == 'function') vehicle_registration_number_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function register_number_reload__RAND__() {
		<?php if(($AllowUpdate || ($arrPerm['insert'] && !$selected_id)) && !$dvprint) { ?>

			$j("#register_number-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_register_number__RAND__.value, t: 'vehicle_annual_inspection', f: 'register_number' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="register_number"]').val(resp.results[0].id);
							$j('[id=register_number-container-readonly__RAND__]').html('<span class="match-text" id="register_number-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=gmt_fleet_register_view_parent]').hide(); } else { $j('.btn[id=gmt_fleet_register_view_parent]').show(); }


							if(typeof(register_number_update_autofills__RAND__) == 'function') register_number_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'vehicle_annual_inspection', f: 'register_number' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_register_number__RAND__.value = e.added.id;
				AppGini.current_register_number__RAND__.text = e.added.text;
				$j('[name="register_number"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=gmt_fleet_register_view_parent]').hide(); } else { $j('.btn[id=gmt_fleet_register_view_parent]').show(); }


				if(typeof(register_number_update_autofills__RAND__) == 'function') register_number_update_autofills__RAND__();
			});

			if(!$j("#register_number-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_register_number__RAND__.value, t: 'vehicle_annual_inspection', f: 'register_number' },
					success: function(resp) {
						$j('[name="register_number"]').val(resp.results[0].id);
						$j('[id=register_number-container-readonly__RAND__]').html('<span class="match-text" id="register_number-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=gmt_fleet_register_view_parent]').hide(); } else { $j('.btn[id=gmt_fleet_register_view_parent]').show(); }

						if(typeof(register_number_update_autofills__RAND__) == 'function') register_number_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_register_number__RAND__.value, t: 'vehicle_annual_inspection', f: 'register_number' },
				success: function(resp) {
					$j('[id=register_number-container__RAND__], [id=register_number-container-readonly__RAND__]').html('<span class="match-text" id="register_number-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=gmt_fleet_register_view_parent]').hide(); } else { $j('.btn[id=gmt_fleet_register_view_parent]').show(); }

					if(typeof(register_number_update_autofills__RAND__) == 'function') register_number_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function department_name_reload__RAND__() {
		<?php if(($AllowUpdate || ($arrPerm['insert'] && !$selected_id)) && !$dvprint) { ?>

			$j("#department_name-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_department_name__RAND__.value, t: 'vehicle_annual_inspection', f: 'department_name' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="department_name"]').val(resp.results[0].id);
							$j('[id=department_name-container-readonly__RAND__]').html('<span class="match-text" id="department_name-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=departments_view_parent]').hide(); } else { $j('.btn[id=departments_view_parent]').show(); }


							if(typeof(department_name_update_autofills__RAND__) == 'function') department_name_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'vehicle_annual_inspection', f: 'department_name' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_department_name__RAND__.value = e.added.id;
				AppGini.current_department_name__RAND__.text = e.added.text;
				$j('[name="department_name"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=departments_view_parent]').hide(); } else { $j('.btn[id=departments_view_parent]').show(); }


				if(typeof(department_name_update_autofills__RAND__) == 'function') department_name_update_autofills__RAND__();
			});

			if(!$j("#department_name-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_department_name__RAND__.value, t: 'vehicle_annual_inspection', f: 'department_name' },
					success: function(resp) {
						$j('[name="department_name"]').val(resp.results[0].id);
						$j('[id=department_name-container-readonly__RAND__]').html('<span class="match-text" id="department_name-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=departments_view_parent]').hide(); } else { $j('.btn[id=departments_view_parent]').show(); }

						if(typeof(department_name_update_autofills__RAND__) == 'function') department_name_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_department_name__RAND__.value, t: 'vehicle_annual_inspection', f: 'department_name' },
				success: function(resp) {
					$j('[id=department_name-container__RAND__], [id=department_name-container-readonly__RAND__]').html('<span class="match-text" id="department_name-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=departments_view_parent]').hide(); } else { $j('.btn[id=departments_view_parent]').show(); }

					if(typeof(department_name_update_autofills__RAND__) == 'function') department_name_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function province_reload__RAND__() {
		<?php if(($AllowUpdate || ($arrPerm['insert'] && !$selected_id)) && !$dvprint) { ?>

			$j("#province-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_province__RAND__.value, t: 'vehicle_annual_inspection', f: 'province' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="province"]').val(resp.results[0].id);
							$j('[id=province-container-readonly__RAND__]').html('<span class="match-text" id="province-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=province_view_parent]').hide(); } else { $j('.btn[id=province_view_parent]').show(); }


							if(typeof(province_update_autofills__RAND__) == 'function') province_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'vehicle_annual_inspection', f: 'province' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_province__RAND__.value = e.added.id;
				AppGini.current_province__RAND__.text = e.added.text;
				$j('[name="province"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=province_view_parent]').hide(); } else { $j('.btn[id=province_view_parent]').show(); }


				if(typeof(province_update_autofills__RAND__) == 'function') province_update_autofills__RAND__();
			});

			if(!$j("#province-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_province__RAND__.value, t: 'vehicle_annual_inspection', f: 'province' },
					success: function(resp) {
						$j('[name="province"]').val(resp.results[0].id);
						$j('[id=province-container-readonly__RAND__]').html('<span class="match-text" id="province-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=province_view_parent]').hide(); } else { $j('.btn[id=province_view_parent]').show(); }

						if(typeof(province_update_autofills__RAND__) == 'function') province_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_province__RAND__.value, t: 'vehicle_annual_inspection', f: 'province' },
				success: function(resp) {
					$j('[id=province-container__RAND__], [id=province-container-readonly__RAND__]').html('<span class="match-text" id="province-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=province_view_parent]').hide(); } else { $j('.btn[id=province_view_parent]').show(); }

					if(typeof(province_update_autofills__RAND__) == 'function') province_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function district_reload__RAND__() {
		<?php if(($AllowUpdate || ($arrPerm['insert'] && !$selected_id)) && !$dvprint) { ?>

			$j("#district-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_district__RAND__.value, t: 'vehicle_annual_inspection', f: 'district' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="district"]').val(resp.results[0].id);
							$j('[id=district-container-readonly__RAND__]').html('<span class="match-text" id="district-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=districts_view_parent]').hide(); } else { $j('.btn[id=districts_view_parent]').show(); }


							if(typeof(district_update_autofills__RAND__) == 'function') district_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'vehicle_annual_inspection', f: 'district' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_district__RAND__.value = e.added.id;
				AppGini.current_district__RAND__.text = e.added.text;
				$j('[name="district"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=districts_view_parent]').hide(); } else { $j('.btn[id=districts_view_parent]').show(); }


				if(typeof(district_update_autofills__RAND__) == 'function') district_update_autofills__RAND__();
			});

			if(!$j("#district-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_district__RAND__.value, t: 'vehicle_annual_inspection', f: 'district' },
					success: function(resp) {
						$j('[name="district"]').val(resp.results[0].id);
						$j('[id=district-container-readonly__RAND__]').html('<span class="match-text" id="district-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=districts_view_parent]').hide(); } else { $j('.btn[id=districts_view_parent]').show(); }

						if(typeof(district_update_autofills__RAND__) == 'function') district_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_district__RAND__.value, t: 'vehicle_annual_inspection', f: 'district' },
				success: function(resp) {
					$j('[id=district-container__RAND__], [id=district-container-readonly__RAND__]').html('<span class="match-text" id="district-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=districts_view_parent]').hide(); } else { $j('.btn[id=districts_view_parent]').show(); }

					if(typeof(district_update_autofills__RAND__) == 'function') district_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
	</script>
	<?php

	$lookups = str_replace('__RAND__', $rnd1, ob_get_clean());


	// code for template based detail view forms

	// open the detail view template
	if($dvprint) {
		$template_file = is_file("./{$TemplateDVP}") ? "./{$TemplateDVP}" : './templates/vehicle_annual_inspection_templateDVP.html';
		$templateCode = @file_get_contents($template_file);
	} else {
		$template_file = is_file("./{$TemplateDV}") ? "./{$TemplateDV}" : './templates/vehicle_annual_inspection_templateDV.html';
		$templateCode = @file_get_contents($template_file);
	}

	// process form title
	$templateCode = str_replace('<%%DETAIL_VIEW_TITLE%%>', 'Vehicle Annual Inspection Details:', $templateCode);
	$templateCode = str_replace('<%%RND1%%>', $rnd1, $templateCode);
	$templateCode = str_replace('<%%EMBEDDED%%>', (Request::val('Embedded') ? 'Embedded=1' : ''), $templateCode);
	// process buttons
	if($arrPerm['insert'] && !$selected_id) { // allow insert and no record selected?
		if(!$selected_id) $templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-success" id="insert" name="insert_x" value="1" onclick="return vehicle_annual_inspection_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save New'] . '</button>', $templateCode);
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="insert" name="insert_x" value="1" onclick="return vehicle_annual_inspection_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save As Copy'] . '</button>', $templateCode);
	} else {
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '', $templateCode);
	}

	// 'Back' button action
	if(Request::val('Embedded')) {
		$backAction = 'AppGini.closeParentModal(); return false;';
	} else {
		$backAction = '$j(\'form\').eq(0).attr(\'novalidate\', \'novalidate\'); document.myform.reset(); return true;';
	}

	if($selected_id) {
		if(!Request::val('Embedded')) $templateCode = str_replace('<%%DVPRINT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="dvprint" name="dvprint_x" value="1" onclick="$j(\'form\').eq(0).prop(\'novalidate\', true); document.myform.reset(); return true;" title="' . html_attr($Translation['Print Preview']) . '"><i class="glyphicon glyphicon-print"></i> ' . $Translation['Print Preview'] . '</button>', $templateCode);
		if($AllowUpdate) {
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '<button type="submit" class="btn btn-success btn-lg" id="update" name="update_x" value="1" onclick="return vehicle_annual_inspection_validateData();" title="' . html_attr($Translation['Save Changes']) . '"><i class="glyphicon glyphicon-ok"></i> ' . $Translation['Save Changes'] . '</button>', $templateCode);
		} else {
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		}
		if(($arrPerm['delete'] == 1 && $ownerMemberID == getLoggedMemberID()) || ($arrPerm['delete'] == 2 && $ownerGroupID == getLoggedGroupID()) || $arrPerm['delete'] == 3) { // allow delete?
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '<button type="submit" class="btn btn-danger" id="delete" name="delete_x" value="1" onclick="return confirm(\'' . $Translation['are you sure?'] . '\');" title="' . html_attr($Translation['Delete']) . '"><i class="glyphicon glyphicon-trash"></i> ' . $Translation['Delete'] . '</button>', $templateCode);
		} else {
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		}
		$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>', $templateCode);
	} else {
		$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);

		// if not in embedded mode and user has insert only but no view/update/delete,
		// remove 'back' button
		if(
			$arrPerm['insert']
			&& !$arrPerm['update'] && !$arrPerm['delete'] && !$arrPerm['view']
			&& !Request::val('Embedded')
		)
			$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '', $templateCode);
		elseif($separateDV)
			$templateCode = str_replace(
				'<%%DESELECT_BUTTON%%>', 
				'<button
					type="submit" 
					class="btn btn-default" 
					id="deselect" 
					name="deselect_x" 
					value="1" 
					onclick="' . $backAction . '" 
					title="' . html_attr($Translation['Back']) . '">
						<i class="glyphicon glyphicon-chevron-left"></i> ' .
						$Translation['Back'] .
				'</button>',
				$templateCode
			);
		else
			$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '', $templateCode);
	}

	// set records to read only if user can't insert new records and can't edit current record
	if(($selected_id && !$AllowUpdate) || (!$selected_id && !$AllowInsert)) {
		$jsReadOnly = '';
		$jsReadOnly .= "\tjQuery('#vehicle_registration_number').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#vehicle_registration_number_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#register_number').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#register_number_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#last_entry_logbook').prop('readonly', true);\n";
		$jsReadOnly .= "\tjQuery('#last_entry_logbookDay, #last_entry_logbookMonth, #last_entry_logbookYear').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#photo_of_vehicle').replaceWith('<div class=\"form-control-static\" id=\"photo_of_vehicle\">' + (jQuery('#photo_of_vehicle').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#department_name').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#department_name_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#province').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#province_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#district').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#district_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#wheel_spanner').replaceWith('<div class=\"form-control-static\" id=\"wheel_spanner\">' + (jQuery('#wheel_spanner').val() || '') + '</div>'); jQuery('#wheel_spanner-multi-selection-help').hide();\n";
		$jsReadOnly .= "\tjQuery('#spare_wheel').replaceWith('<div class=\"form-control-static\" id=\"spare_wheel\">' + (jQuery('#spare_wheel').val() || '') + '</div>'); jQuery('#spare_wheel-multi-selection-help').hide();\n";
		$jsReadOnly .= "\tjQuery('#jack').replaceWith('<div class=\"form-control-static\" id=\"jack\">' + (jQuery('#jack').val() || '') + '</div>'); jQuery('#jack-multi-selection-help').hide();\n";
		$jsReadOnly .= "\tjQuery('#radio').replaceWith('<div class=\"form-control-static\" id=\"radio\">' + (jQuery('#radio').val() || '') + '</div>'); jQuery('#radio-multi-selection-help').hide();\n";
		$jsReadOnly .= "\tjQuery('#triangle').replaceWith('<div class=\"form-control-static\" id=\"triangle\">' + (jQuery('#triangle').val() || '') + '</div>'); jQuery('#triangle-multi-selection-help').hide();\n";
		$jsReadOnly .= "\tjQuery('#log_book').replaceWith('<div class=\"form-control-static\" id=\"log_book\">' + (jQuery('#log_book').val() || '') + '</div>'); jQuery('#log_book-multi-selection-help').hide();\n";
		$jsReadOnly .= "\tjQuery('#iternary').replaceWith('<div class=\"form-control-static\" id=\"iternary\">' + (jQuery('#iternary').val() || '') + '</div>'); jQuery('#iternary-multi-selection-help').hide();\n";
		$jsReadOnly .= "\tjQuery('#fuel_card').replaceWith('<div class=\"form-control-static\" id=\"fuel_card\">' + (jQuery('#fuel_card').val() || '') + '</div>'); jQuery('#fuel_card-multi-selection-help').hide();\n";
		$jsReadOnly .= "\tjQuery('#documents').replaceWith('<div class=\"form-control-static\" id=\"documents\">' + (jQuery('#documents').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#documents, #documents-edit-link').hide();\n";
		$jsReadOnly .= "\tjQuery('#checking_officer_name_and_surname').replaceWith('<div class=\"form-control-static\" id=\"checking_officer_name_and_surname\">' + (jQuery('#checking_officer_name_and_surname').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#checking_officer_contact_email').replaceWith('<div class=\"form-control-static\" id=\"checking_officer_contact_email\">' + (jQuery('#checking_officer_contact_email').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#checking_officer_contact_email, #checking_officer_contact_email-edit-link').hide();\n";
		$jsReadOnly .= "\tjQuery('#date_of_inspection').prop('readonly', true);\n";
		$jsReadOnly .= "\tjQuery('#date_of_inspectionDay, #date_of_inspectionMonth, #date_of_inspectionYear').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('.select2-container').hide();\n";

		$noUploads = true;
	} elseif(($AllowInsert && !$selected_id) || ($AllowUpdate && $selected_id)) {
		$jsEditable = "\tjQuery('form').eq(0).data('already_changed', true);"; // temporarily disable form change handler
		$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', false);"; // re-enable form change handler
	}

	// process combos
	$templateCode = str_replace('<%%COMBO(vehicle_registration_number)%%>', $combo_vehicle_registration_number->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(vehicle_registration_number)%%>', $combo_vehicle_registration_number->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(vehicle_registration_number)%%>', urlencode($combo_vehicle_registration_number->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(register_number)%%>', $combo_register_number->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(register_number)%%>', $combo_register_number->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(register_number)%%>', urlencode($combo_register_number->MatchText), $templateCode);
	$templateCode = str_replace(
		'<%%COMBO(last_entry_logbook)%%>', 
		($selected_id && !$arrPerm['edit'] && ($noSaveAsCopy || !$arrPerm['insert']) ? 
			'<div class="form-control-static">' . $combo_last_entry_logbook->GetHTML(true) . '</div>' : 
			$combo_last_entry_logbook->GetHTML()
		), $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(last_entry_logbook)%%>', $combo_last_entry_logbook->GetHTML(true), $templateCode);
	$templateCode = str_replace('<%%COMBO(department_name)%%>', $combo_department_name->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(department_name)%%>', $combo_department_name->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(department_name)%%>', urlencode($combo_department_name->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(province)%%>', $combo_province->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(province)%%>', $combo_province->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(province)%%>', urlencode($combo_province->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(district)%%>', $combo_district->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(district)%%>', $combo_district->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(district)%%>', urlencode($combo_district->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(wheel_spanner)%%>', $combo_wheel_spanner->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(wheel_spanner)%%>', $combo_wheel_spanner->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(spare_wheel)%%>', $combo_spare_wheel->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(spare_wheel)%%>', $combo_spare_wheel->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(jack)%%>', $combo_jack->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(jack)%%>', $combo_jack->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(radio)%%>', $combo_radio->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(radio)%%>', $combo_radio->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(triangle)%%>', $combo_triangle->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(triangle)%%>', $combo_triangle->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(log_book)%%>', $combo_log_book->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(log_book)%%>', $combo_log_book->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(iternary)%%>', $combo_iternary->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(iternary)%%>', $combo_iternary->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(fuel_card)%%>', $combo_fuel_card->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(fuel_card)%%>', $combo_fuel_card->SelectedData, $templateCode);
	$templateCode = str_replace(
		'<%%COMBO(date_of_inspection)%%>', 
		($selected_id && !$arrPerm['edit'] && ($noSaveAsCopy || !$arrPerm['insert']) ? 
			'<div class="form-control-static">' . $combo_date_of_inspection->GetHTML(true) . '</div>' : 
			$combo_date_of_inspection->GetHTML()
		), $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(date_of_inspection)%%>', $combo_date_of_inspection->GetHTML(true), $templateCode);

	/* lookup fields array: 'lookup field name' => ['parent table name', 'lookup field caption'] */
	$lookup_fields = ['vehicle_registration_number' => ['gmt_fleet_register', 'Registration Number:'], 'register_number' => ['gmt_fleet_register', 'Register Number:'], 'department_name' => ['departments', 'Department Name:'], 'province' => ['province', 'Province:'], 'district' => ['districts', 'District and Station:'], ];
	foreach($lookup_fields as $luf => $ptfc) {
		$pt_perm = getTablePermissions($ptfc[0]);

		// process foreign key links
		if($pt_perm['view'] || $pt_perm['edit']) {
			$templateCode = str_replace("<%%PLINK({$luf})%%>", '<button type="button" class="btn btn-default view_parent" id="' . $ptfc[0] . '_view_parent" title="' . html_attr($Translation['View'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-eye-open"></i></button>', $templateCode);
		}

		// if user has insert permission to parent table of a lookup field, put an add new button
		if($pt_perm['insert'] /* && !Request::val('Embedded')*/) {
			$templateCode = str_replace("<%%ADDNEW({$ptfc[0]})%%>", '<button type="button" class="btn btn-default add_new_parent" id="' . $ptfc[0] . '_add_new" title="' . html_attr($Translation['Add New'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-plus text-success"></i></button>', $templateCode);
		}
	}

	// process images
	$templateCode = str_replace('<%%UPLOADFILE(fleet_asset_id)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(vehicle_registration_number)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(register_number)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(last_entry_logbook)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(photo_of_vehicle)%%>', ($noUploads ? '' : "<div>{$Translation['upload image']}</div>" . '<i class="glyphicon glyphicon-remove text-danger clear-upload hidden"></i> <input type="file" name="photo_of_vehicle" id="photo_of_vehicle" data-filetypes="jpg|jpeg|gif|png|webp" data-maxsize="1048576" accept=".jpg,.jpeg,.gif,.png,.webp">'), $templateCode);
	if($AllowUpdate && $row['photo_of_vehicle'] != '') {
		$templateCode = str_replace('<%%REMOVEFILE(photo_of_vehicle)%%>', '<br><input type="checkbox" name="photo_of_vehicle_remove" id="photo_of_vehicle_remove" value="1"> <label for="photo_of_vehicle_remove" style="color: red; font-weight: bold;">'.$Translation['remove image'].'</label>', $templateCode);
	} else {
		$templateCode = str_replace('<%%REMOVEFILE(photo_of_vehicle)%%>', '', $templateCode);
	}
	$templateCode = str_replace('<%%UPLOADFILE(department_name)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(province)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(district)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(mechanical_inspection)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(upholstery)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(electrical_inspection)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(wheel_spanner)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(spare_wheel)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(jack)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(radio)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(triangle)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(log_book)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(iternary)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(fuel_card)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(recommendation)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(documents)%%>', ($noUploads ? '' : "<div>{$Translation['upload image']}</div>" . '<i class="glyphicon glyphicon-remove text-danger clear-upload hidden"></i> <input type="file" name="documents" id="documents" data-filetypes="txt|doc|docx|docm|odt|pdf|rtf" data-maxsize="5242880" accept=".txt,.doc,.docx,.docm,.odt,.pdf,.rtf">'), $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(checking_officer_name_and_surname)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(checking_officer_contact_email)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(date_of_inspection)%%>', '', $templateCode);

	// process values
	if($selected_id) {
		if( $dvprint) $templateCode = str_replace('<%%VALUE(fleet_asset_id)%%>', safe_html($urow['fleet_asset_id']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(fleet_asset_id)%%>', html_attr($row['fleet_asset_id']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(fleet_asset_id)%%>', urlencode($urow['fleet_asset_id']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(vehicle_registration_number)%%>', safe_html($urow['vehicle_registration_number']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(vehicle_registration_number)%%>', html_attr($row['vehicle_registration_number']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(vehicle_registration_number)%%>', urlencode($urow['vehicle_registration_number']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(register_number)%%>', safe_html($urow['register_number']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(register_number)%%>', html_attr($row['register_number']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(register_number)%%>', urlencode($urow['register_number']), $templateCode);
		$templateCode = str_replace('<%%VALUE(last_entry_logbook)%%>', app_datetime($row['last_entry_logbook']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(last_entry_logbook)%%>', urlencode(app_datetime($urow['last_entry_logbook'])), $templateCode);
		$row['photo_of_vehicle'] = ($row['photo_of_vehicle'] != '' ? $row['photo_of_vehicle'] : 'blank.gif');
		if( $dvprint) $templateCode = str_replace('<%%VALUE(photo_of_vehicle)%%>', safe_html($urow['photo_of_vehicle']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(photo_of_vehicle)%%>', html_attr($row['photo_of_vehicle']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(photo_of_vehicle)%%>', urlencode($urow['photo_of_vehicle']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(department_name)%%>', safe_html($urow['department_name']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(department_name)%%>', html_attr($row['department_name']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(department_name)%%>', urlencode($urow['department_name']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(province)%%>', safe_html($urow['province']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(province)%%>', html_attr($row['province']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(province)%%>', urlencode($urow['province']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(district)%%>', safe_html($urow['district']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(district)%%>', html_attr($row['district']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(district)%%>', urlencode($urow['district']), $templateCode);
		if($AllowUpdate || $AllowInsert) {
			$templateCode = str_replace('<%%HTMLAREA(mechanical_inspection)%%>', '<textarea name="mechanical_inspection" id="mechanical_inspection" rows="5">' . safe_html(htmlspecialchars_decode($row['mechanical_inspection'])) . '</textarea>', $templateCode);
		} else {
			$templateCode = str_replace('<%%HTMLAREA(mechanical_inspection)%%>', '<div id="mechanical_inspection" class="form-control-static">' . $row['mechanical_inspection'] . '</div>', $templateCode);
		}
		$templateCode = str_replace('<%%VALUE(mechanical_inspection)%%>', nl2br($row['mechanical_inspection']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(mechanical_inspection)%%>', urlencode($urow['mechanical_inspection']), $templateCode);
		if($AllowUpdate || $AllowInsert) {
			$templateCode = str_replace('<%%HTMLAREA(upholstery)%%>', '<textarea name="upholstery" id="upholstery" rows="5">' . safe_html(htmlspecialchars_decode($row['upholstery'])) . '</textarea>', $templateCode);
		} else {
			$templateCode = str_replace('<%%HTMLAREA(upholstery)%%>', '<div id="upholstery" class="form-control-static">' . $row['upholstery'] . '</div>', $templateCode);
		}
		$templateCode = str_replace('<%%VALUE(upholstery)%%>', nl2br($row['upholstery']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(upholstery)%%>', urlencode($urow['upholstery']), $templateCode);
		if($AllowUpdate || $AllowInsert) {
			$templateCode = str_replace('<%%HTMLAREA(electrical_inspection)%%>', '<textarea name="electrical_inspection" id="electrical_inspection" rows="5">' . safe_html(htmlspecialchars_decode($row['electrical_inspection'])) . '</textarea>', $templateCode);
		} else {
			$templateCode = str_replace('<%%HTMLAREA(electrical_inspection)%%>', '<div id="electrical_inspection" class="form-control-static">' . $row['electrical_inspection'] . '</div>', $templateCode);
		}
		$templateCode = str_replace('<%%VALUE(electrical_inspection)%%>', nl2br($row['electrical_inspection']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(electrical_inspection)%%>', urlencode($urow['electrical_inspection']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(wheel_spanner)%%>', safe_html($urow['wheel_spanner']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(wheel_spanner)%%>', html_attr($row['wheel_spanner']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(wheel_spanner)%%>', urlencode($urow['wheel_spanner']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(spare_wheel)%%>', safe_html($urow['spare_wheel']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(spare_wheel)%%>', html_attr($row['spare_wheel']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(spare_wheel)%%>', urlencode($urow['spare_wheel']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(jack)%%>', safe_html($urow['jack']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(jack)%%>', html_attr($row['jack']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(jack)%%>', urlencode($urow['jack']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(radio)%%>', safe_html($urow['radio']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(radio)%%>', html_attr($row['radio']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(radio)%%>', urlencode($urow['radio']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(triangle)%%>', safe_html($urow['triangle']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(triangle)%%>', html_attr($row['triangle']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(triangle)%%>', urlencode($urow['triangle']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(log_book)%%>', safe_html($urow['log_book']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(log_book)%%>', html_attr($row['log_book']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(log_book)%%>', urlencode($urow['log_book']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(iternary)%%>', safe_html($urow['iternary']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(iternary)%%>', html_attr($row['iternary']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(iternary)%%>', urlencode($urow['iternary']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(fuel_card)%%>', safe_html($urow['fuel_card']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(fuel_card)%%>', html_attr($row['fuel_card']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(fuel_card)%%>', urlencode($urow['fuel_card']), $templateCode);
		if($AllowUpdate || $AllowInsert) {
			$templateCode = str_replace('<%%HTMLAREA(recommendation)%%>', '<textarea name="recommendation" id="recommendation" rows="5">' . safe_html(htmlspecialchars_decode($row['recommendation'])) . '</textarea>', $templateCode);
		} else {
			$templateCode = str_replace('<%%HTMLAREA(recommendation)%%>', '<div id="recommendation" class="form-control-static">' . $row['recommendation'] . '</div>', $templateCode);
		}
		$templateCode = str_replace('<%%VALUE(recommendation)%%>', nl2br($row['recommendation']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(recommendation)%%>', urlencode($urow['recommendation']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(documents)%%>', safe_html($urow['documents']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(documents)%%>', html_attr($row['documents']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(documents)%%>', urlencode($urow['documents']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(checking_officer_name_and_surname)%%>', safe_html($urow['checking_officer_name_and_surname']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(checking_officer_name_and_surname)%%>', html_attr($row['checking_officer_name_and_surname']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(checking_officer_name_and_surname)%%>', urlencode($urow['checking_officer_name_and_surname']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(checking_officer_contact_email)%%>', safe_html($urow['checking_officer_contact_email']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(checking_officer_contact_email)%%>', html_attr($row['checking_officer_contact_email']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(checking_officer_contact_email)%%>', urlencode($urow['checking_officer_contact_email']), $templateCode);
		$templateCode = str_replace('<%%VALUE(date_of_inspection)%%>', app_datetime($row['date_of_inspection']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(date_of_inspection)%%>', urlencode(app_datetime($urow['date_of_inspection'])), $templateCode);
	} else {
		$templateCode = str_replace('<%%VALUE(fleet_asset_id)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(fleet_asset_id)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(vehicle_registration_number)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(vehicle_registration_number)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(register_number)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(register_number)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(last_entry_logbook)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(last_entry_logbook)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(photo_of_vehicle)%%>', 'blank.gif', $templateCode);
		$templateCode = str_replace('<%%VALUE(department_name)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(department_name)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(province)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(province)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(district)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(district)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%HTMLAREA(mechanical_inspection)%%>', '<textarea name="mechanical_inspection" id="mechanical_inspection" rows="5"></textarea>', $templateCode);
		$templateCode = str_replace('<%%HTMLAREA(upholstery)%%>', '<textarea name="upholstery" id="upholstery" rows="5"></textarea>', $templateCode);
		$templateCode = str_replace('<%%HTMLAREA(electrical_inspection)%%>', '<textarea name="electrical_inspection" id="electrical_inspection" rows="5"></textarea>', $templateCode);
		$templateCode = str_replace('<%%VALUE(wheel_spanner)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(wheel_spanner)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(spare_wheel)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(spare_wheel)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(jack)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(jack)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(radio)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(radio)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(triangle)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(triangle)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(log_book)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(log_book)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(iternary)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(iternary)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(fuel_card)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(fuel_card)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%HTMLAREA(recommendation)%%>', '<textarea name="recommendation" id="recommendation" rows="5"></textarea>', $templateCode);
		$templateCode = str_replace('<%%VALUE(documents)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(documents)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(checking_officer_name_and_surname)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(checking_officer_name_and_surname)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(checking_officer_contact_email)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(checking_officer_contact_email)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(date_of_inspection)%%>', '0000-00-00', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(date_of_inspection)%%>', urlencode('0000-00-00'), $templateCode);
	}

	// process translations
	$templateCode = parseTemplate($templateCode);

	// clear scrap
	$templateCode = str_replace('<%%', '<!-- ', $templateCode);
	$templateCode = str_replace('%%>', ' -->', $templateCode);

	// hide links to inaccessible tables
	if(Request::val('dvprint_x') == '') {
		$templateCode .= "\n\n<script>\$j(function() {\n";
		$arrTables = getTableList();
		foreach($arrTables as $name => $caption) {
			$templateCode .= "\t\$j('#{$name}_link').removeClass('hidden');\n";
			$templateCode .= "\t\$j('#xs_{$name}_link').removeClass('hidden');\n";
		}

		$templateCode .= $jsReadOnly;
		$templateCode .= $jsEditable;

		if(!$selected_id) {
			$templateCode.="\n\tif(document.getElementById('documentsEdit')) { document.getElementById('documentsEdit').style.display='inline'; }";
			$templateCode.="\n\tif(document.getElementById('documentsEditLink')) { document.getElementById('documentsEditLink').style.display='none'; }";
			$templateCode.="\n\tif(document.getElementById('checking_officer_contact_emailEdit')) { document.getElementById('checking_officer_contact_emailEdit').style.display='inline'; }";
			$templateCode.="\n\tif(document.getElementById('checking_officer_contact_emailEditLink')) { document.getElementById('checking_officer_contact_emailEditLink').style.display='none'; }";
		}

		$templateCode.="\n});</script>\n";
	}

	// ajaxed auto-fill fields
	$templateCode .= '<script>';
	$templateCode .= '$j(function() {';

	$templateCode .= "\tvehicle_registration_number_update_autofills$rnd1 = function() {\n";
	$templateCode .= "\t\t\$j.ajax({\n";
	if($dvprint) {
		$templateCode .= "\t\t\turl: 'vehicle_annual_inspection_autofill.php?rnd1=$rnd1&mfk=vehicle_registration_number&id=' + encodeURIComponent('".addslashes($row['vehicle_registration_number'])."'),\n";
		$templateCode .= "\t\t\tcontentType: 'application/x-www-form-urlencoded; charset=" . datalist_db_encoding . "',\n";
		$templateCode .= "\t\t\ttype: 'GET'\n";
	} else {
		$templateCode .= "\t\t\turl: 'vehicle_annual_inspection_autofill.php?rnd1=$rnd1&mfk=vehicle_registration_number&id=' + encodeURIComponent(AppGini.current_vehicle_registration_number{$rnd1}.value),\n";
		$templateCode .= "\t\t\tcontentType: 'application/x-www-form-urlencoded; charset=" . datalist_db_encoding . "',\n";
		$templateCode .= "\t\t\ttype: 'GET',\n";
		$templateCode .= "\t\t\tbeforeSend: function() { \$j('#vehicle_registration_number$rnd1').prop('disabled', true); },\n";
		$templateCode .= "\t\t\tcomplete: function() { " . (($arrPerm['insert'] || (($arrPerm['edit'] == 1 && $ownerMemberID == getLoggedMemberID()) || ($arrPerm['edit'] == 2 && $ownerGroupID == getLoggedGroupID()) || $arrPerm['edit'] == 3)) ? "\$j('#vehicle_registration_number$rnd1').prop('disabled', false); " : "\$j('#vehicle_registration_number$rnd1').prop('disabled', true); ")." \$j(window).resize(); }\n";
	}
	$templateCode .= "\t\t});\n";
	$templateCode .= "\t};\n";
	if(!$dvprint) $templateCode .= "\tif(\$j('#vehicle_registration_number_caption').length) \$j('#vehicle_registration_number_caption').click(function() { vehicle_registration_number_update_autofills$rnd1(); });\n";


	$templateCode.="});";
	$templateCode.="</script>";
	$templateCode .= $lookups;

	// handle enforced parent values for read-only lookup fields
	$filterField = Request::val('FilterField');
	$filterOperator = Request::val('FilterOperator');
	$filterValue = Request::val('FilterValue');

	// don't include blank images in lightbox gallery
	$templateCode = preg_replace('/blank.gif" data-lightbox=".*?"/', 'blank.gif"', $templateCode);

	// don't display empty email links
	$templateCode=preg_replace('/<a .*?href="mailto:".*?<\/a>/', '', $templateCode);

	/* default field values */
	$rdata = $jdata = get_defaults('vehicle_annual_inspection');
	if($selected_id) {
		$jdata = get_joined_record('vehicle_annual_inspection', $selected_id);
		if($jdata === false) $jdata = get_defaults('vehicle_annual_inspection');
		$rdata = $row;
	}
	$templateCode .= loadView('vehicle_annual_inspection-ajax-cache', ['rdata' => $rdata, 'jdata' => $jdata]);

	// hook: vehicle_annual_inspection_dv
	if(function_exists('vehicle_annual_inspection_dv')) {
		$args = [];
		vehicle_annual_inspection_dv(($selected_id ? $selected_id : FALSE), getMemberInfo(), $templateCode, $args);
	}

	return $templateCode;
}