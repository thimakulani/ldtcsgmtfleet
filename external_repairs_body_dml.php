<?php

// Data functions (insert, update, delete, form) for table external_repairs_body

// This script and data application were generated by AppGini 22.13
// Download AppGini for free from https://bigprof.com/appgini/download/

function external_repairs_body_insert(&$error_message = '') {
	global $Translation;

	// mm: can member insert record?
	$arrPerm = getTablePermissions('external_repairs_body');
	if(!$arrPerm['insert']) return false;

	$data = [
		'head_panel_beating_name' => Request::val('head_panel_beating_name', ''),
		'head_panel_beating_contact_details' => Request::val('head_panel_beating_contact_details', ''),
		'head_panel_beating_address' => Request::val('head_panel_beating_address', ''),
		'head_panel_beating_signature' => Request::fileUpload('head_panel_beating_signature', [
			'maxSize' => 512000,
			'types' => 'jpg|jpeg|gif|png|webp',
			'noRename' => false,
			'dir' => '',
			'success' => function($name, $selected_id) {
				createThumbnail($name, getThumbnailSpecs('external_repairs_body', 'head_panel_beating_signature', 'tv'));
				createThumbnail($name, getThumbnailSpecs('external_repairs_body', 'head_panel_beating_signature', 'dv'));
			},
			'failure' => function($selected_id, $fileRemoved) {
				if(!strlen(Request::val('SelectedID'))) return '';

				/* for empty upload fields, when saving a copy of an existing record, copy the original upload field */
				return existing_value('external_repairs_body', 'head_panel_beating_signature', Request::val('SelectedID'));
			},
		]),
		'panel_beating_quotation' => Request::val('panel_beating_quotation', ''),
		'panel_beating_quotation_approved_by_service_provider' => Request::fileUpload('panel_beating_quotation_approved_by_service_provider', [
			'maxSize' => 5242880,
			'types' => 'txt|doc|docx|docm|odt|pdf|rtf',
			'noRename' => true,
			'dir' => '',
			'success' => function($name, $selected_id) {
			},
			'failure' => function($selected_id, $fileRemoved) {
				if(!strlen(Request::val('SelectedID'))) return '';

				/* for empty upload fields, when saving a copy of an existing record, copy the original upload field */
				return existing_value('external_repairs_body', 'panel_beating_quotation_approved_by_service_provider', Request::val('SelectedID'));
			},
		]),
		'service_provider_name' => Request::lookup('service_provider_name', ''),
		'service_provider_type' => Request::lookup('service_provider_type', ''),
		'service_provider_contact_details' => Request::lookup('service_provider_contact_details', ''),
		'service_provider_address' => Request::lookup('service_provider_address', ''),
		'service_provider_branch' => Request::lookup('service_provider_branch', ''),
		'service_provider_branch_code' => Request::lookup('service_provider_branch_code', ''),
		'service_provider_signature' => Request::fileUpload('service_provider_signature', [
			'maxSize' => 512000,
			'types' => 'jpg|jpeg|gif|png|webp',
			'noRename' => false,
			'dir' => '',
			'success' => function($name, $selected_id) {
				createThumbnail($name, getThumbnailSpecs('external_repairs_body', 'service_provider_signature', 'tv'));
				createThumbnail($name, getThumbnailSpecs('external_repairs_body', 'service_provider_signature', 'dv'));
			},
			'failure' => function($selected_id, $fileRemoved) {
				if(!strlen(Request::val('SelectedID'))) return '';

				/* for empty upload fields, when saving a copy of an existing record, copy the original upload field */
				return existing_value('external_repairs_body', 'service_provider_signature', Request::val('SelectedID'));
			},
		]),
		'instruction_note' => Request::lookup('instruction_note', ''),
		'authorization_number' => Request::lookup('instruction_note'),
		'vehicle_registration_number' => Request::lookup('vehicle_registration_number', ''),
		'engine_number' => Request::lookup('vehicle_registration_number'),
		'make_of_vehicle' => Request::lookup('vehicle_registration_number'),
		'vehicle_colour' => Request::lookup('vehicle_registration_number'),
		'vehicle_inspection_done' => Request::val('vehicle_inspection_done', ''),
		'vehicle_inspection_check_list_form' => Request::fileUpload('vehicle_inspection_check_list_form', [
			'maxSize' => 102400,
			'types' => 'txt|doc|docx|docm|odt|pdf|rtf',
			'noRename' => true,
			'dir' => '',
			'success' => function($name, $selected_id) {
			},
			'failure' => function($selected_id, $fileRemoved) {
				if(!strlen(Request::val('SelectedID'))) return '';

				/* for empty upload fields, when saving a copy of an existing record, copy the original upload field */
				return existing_value('external_repairs_body', 'vehicle_inspection_check_list_form', Request::val('SelectedID'));
			},
		]),
		'vehicle_tyre_sizes' => Request::val('vehicle_tyre_sizes', ''),
		'vehicle_mirrow_check' => Request::multipleChoice('vehicle_mirrow_check', ''),
		'vehicle_interior_condition' => Request::val('vehicle_interior_condition', ''),
		'vehicle_exterior_condition' => Request::val('vehicle_exterior_condition', ''),
		'merchant_type' => Request::lookup('merchant_type', ''),
		'merchant_code' => Request::lookup('merchant_code', ''),
		'merchant_name' => Request::lookup('merchant_name', ''),
		'merchant_contacts_details' => Request::lookup('merchant_contacts_details', ''),
		'merchant_email_address' => Request::val('merchant_email_address', ''),
		'merchant_signature' => Request::fileUpload('merchant_signature', [
			'maxSize' => 512000,
			'types' => 'jpg|jpeg|gif|png|webp',
			'noRename' => false,
			'dir' => '',
			'success' => function($name, $selected_id) {
				createThumbnail($name, getThumbnailSpecs('external_repairs_body', 'merchant_signature', 'tv'));
				createThumbnail($name, getThumbnailSpecs('external_repairs_body', 'merchant_signature', 'dv'));
			},
			'failure' => function($selected_id, $fileRemoved) {
				if(!strlen(Request::val('SelectedID'))) return '';

				/* for empty upload fields, when saving a copy of an existing record, copy the original upload field */
				return existing_value('external_repairs_body', 'merchant_signature', Request::val('SelectedID'));
			},
		]),
		'merchant_address' => Request::lookup('merchant_address', ''),
		'merchant_address_code' => Request::lookup('merchant_address_code', ''),
		'merchant_city' => Request::lookup('merchant_city', ''),
		'head_panel_beating_monitor_progress' => Request::val('head_panel_beating_monitor_progress', ''),
		'head_panel_beating_monitor_quality_of_work_manship' => Request::val('head_panel_beating_monitor_quality_of_work_manship', ''),
		'vehicle_inspection_report' => Request::fileUpload('vehicle_inspection_report', [
			'maxSize' => 5160960,
			'types' => 'txt|doc|docx|docm|odt|pdf|rtf',
			'noRename' => false,
			'dir' => '',
			'success' => function($name, $selected_id) {
			},
			'failure' => function($selected_id, $fileRemoved) {
				if(!strlen(Request::val('SelectedID'))) return '';

				/* for empty upload fields, when saving a copy of an existing record, copy the original upload field */
				return existing_value('external_repairs_body', 'vehicle_inspection_report', Request::val('SelectedID'));
			},
		]),
		'upload_invoice' => Request::fileUpload('upload_invoice', [
			'maxSize' => 5365760,
			'types' => 'txt|doc|docx|docm|odt|pdf|rtf',
			'noRename' => true,
			'dir' => '',
			'success' => function($name, $selected_id) {
			},
			'failure' => function($selected_id, $fileRemoved) {
				if(!strlen(Request::val('SelectedID'))) return '';

				/* for empty upload fields, when saving a copy of an existing record, copy the original upload field */
				return existing_value('external_repairs_body', 'upload_invoice', Request::val('SelectedID'));
			},
		]),
	];


	// hook: external_repairs_body_before_insert
	if(function_exists('external_repairs_body_before_insert')) {
		$args = [];
		if(!external_repairs_body_before_insert($data, getMemberInfo(), $args)) {
			if(isset($args['error_message'])) $error_message = $args['error_message'];
			return false;
		}
	}

	$error = '';
	// set empty fields to NULL
	$data = array_map(function($v) { return ($v === '' ? NULL : $v); }, $data);
	insert('external_repairs_body', backtick_keys_once($data), $error);
	if($error) {
		$error_message = $error;
		return false;
	}

	$recID = db_insert_id(db_link());

	update_calc_fields('external_repairs_body', $recID, calculated_fields()['external_repairs_body']);

	// hook: external_repairs_body_after_insert
	if(function_exists('external_repairs_body_after_insert')) {
		$res = sql("SELECT * FROM `external_repairs_body` WHERE `external_repair_body_id`='" . makeSafe($recID, false) . "' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)) {
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = makeSafe($recID, false);
		$args = [];
		if(!external_repairs_body_after_insert($data, getMemberInfo(), $args)) { return $recID; }
	}

	// mm: save ownership data
	set_record_owner('external_repairs_body', $recID, getLoggedMemberID());

	// if this record is a copy of another record, copy children if applicable
	if(strlen(Request::val('SelectedID'))) external_repairs_body_copy_children($recID, Request::val('SelectedID'));

	return $recID;
}

function external_repairs_body_copy_children($destination_id, $source_id) {
	global $Translation;
	$requests = []; // array of curl handlers for launching insert requests
	$eo = ['silentErrors' => true];
	$safe_sid = makeSafe($source_id);

	// launch requests, asynchronously
	curl_batch($requests);
}

function external_repairs_body_delete($selected_id, $AllowDeleteOfParents = false, $skipChecks = false) {
	// insure referential integrity ...
	global $Translation;
	$selected_id = makeSafe($selected_id);

	// mm: can member delete record?
	if(!check_record_permission('external_repairs_body', $selected_id, 'delete')) {
		return $Translation['You don\'t have enough permissions to delete this record'];
	}

	// hook: external_repairs_body_before_delete
	if(function_exists('external_repairs_body_before_delete')) {
		$args = [];
		if(!external_repairs_body_before_delete($selected_id, $skipChecks, getMemberInfo(), $args))
			return $Translation['Couldn\'t delete this record'] . (
				!empty($args['error_message']) ?
					'<div class="text-bold">' . strip_tags($args['error_message']) . '</div>'
					: '' 
			);
	}

	sql("DELETE FROM `external_repairs_body` WHERE `external_repair_body_id`='{$selected_id}'", $eo);

	// hook: external_repairs_body_after_delete
	if(function_exists('external_repairs_body_after_delete')) {
		$args = [];
		external_repairs_body_after_delete($selected_id, getMemberInfo(), $args);
	}

	// mm: delete ownership data
	sql("DELETE FROM `membership_userrecords` WHERE `tableName`='external_repairs_body' AND `pkValue`='{$selected_id}'", $eo);
}

function external_repairs_body_update(&$selected_id, &$error_message = '') {
	global $Translation;

	// mm: can member edit record?
	if(!check_record_permission('external_repairs_body', $selected_id, 'edit')) return false;

	$data = [
		'head_panel_beating_name' => Request::val('head_panel_beating_name', ''),
		'head_panel_beating_contact_details' => Request::val('head_panel_beating_contact_details', ''),
		'head_panel_beating_address' => Request::val('head_panel_beating_address', ''),
		'head_panel_beating_signature' => Request::fileUpload('head_panel_beating_signature', [
			'maxSize' => 512000,
			'types' => 'jpg|jpeg|gif|png|webp',
			'noRename' => false,
			'dir' => '',
			'id' => $selected_id,
			'success' => function($name, $selected_id) {
				createThumbnail($name, getThumbnailSpecs('external_repairs_body', 'head_panel_beating_signature', 'tv'));
				createThumbnail($name, getThumbnailSpecs('external_repairs_body', 'head_panel_beating_signature', 'dv'));
			},
			'removeOnRequest' => true,
			'remove' => function($selected_id) {
				// do nothing: preserve removed files on server.
			},
			'failure' => function($selected_id, $fileRemoved) {
				if($fileRemoved) return '';
				return existing_value('external_repairs_body', 'head_panel_beating_signature', $selected_id);
			},
		]),
		'panel_beating_quotation' => Request::val('panel_beating_quotation', ''),
		'panel_beating_quotation_approved_by_service_provider' => Request::fileUpload('panel_beating_quotation_approved_by_service_provider', [
			'maxSize' => 5242880,
			'types' => 'txt|doc|docx|docm|odt|pdf|rtf',
			'noRename' => true,
			'dir' => '',
			'id' => $selected_id,
			'success' => function($name, $selected_id) {
			},
			'removeOnRequest' => true,
			'remove' => function($selected_id) {
				// do nothing: preserve removed files on server.
			},
			'failure' => function($selected_id, $fileRemoved) {
				if($fileRemoved) return '';
				return existing_value('external_repairs_body', 'panel_beating_quotation_approved_by_service_provider', $selected_id);
			},
		]),
		'service_provider_name' => Request::lookup('service_provider_name', ''),
		'service_provider_type' => Request::lookup('service_provider_type', ''),
		'service_provider_contact_details' => Request::lookup('service_provider_contact_details', ''),
		'service_provider_address' => Request::lookup('service_provider_address', ''),
		'service_provider_branch' => Request::lookup('service_provider_branch', ''),
		'service_provider_branch_code' => Request::lookup('service_provider_branch_code', ''),
		'service_provider_signature' => Request::fileUpload('service_provider_signature', [
			'maxSize' => 512000,
			'types' => 'jpg|jpeg|gif|png|webp',
			'noRename' => false,
			'dir' => '',
			'id' => $selected_id,
			'success' => function($name, $selected_id) {
				createThumbnail($name, getThumbnailSpecs('external_repairs_body', 'service_provider_signature', 'tv'));
				createThumbnail($name, getThumbnailSpecs('external_repairs_body', 'service_provider_signature', 'dv'));
			},
			'removeOnRequest' => true,
			'remove' => function($selected_id) {
				// do nothing: preserve removed files on server.
			},
			'failure' => function($selected_id, $fileRemoved) {
				if($fileRemoved) return '';
				return existing_value('external_repairs_body', 'service_provider_signature', $selected_id);
			},
		]),
		'instruction_note' => Request::lookup('instruction_note', ''),
		'authorization_number' => Request::lookup('instruction_note'),
		'vehicle_registration_number' => Request::lookup('vehicle_registration_number', ''),
		'engine_number' => Request::lookup('vehicle_registration_number'),
		'make_of_vehicle' => Request::lookup('vehicle_registration_number'),
		'vehicle_colour' => Request::lookup('vehicle_registration_number'),
		'vehicle_inspection_done' => Request::val('vehicle_inspection_done', ''),
		'vehicle_inspection_check_list_form' => Request::fileUpload('vehicle_inspection_check_list_form', [
			'maxSize' => 102400,
			'types' => 'txt|doc|docx|docm|odt|pdf|rtf',
			'noRename' => true,
			'dir' => '',
			'id' => $selected_id,
			'success' => function($name, $selected_id) {
			},
			'removeOnRequest' => true,
			'remove' => function($selected_id) {
				// do nothing: preserve removed files on server.
			},
			'failure' => function($selected_id, $fileRemoved) {
				if($fileRemoved) return '';
				return existing_value('external_repairs_body', 'vehicle_inspection_check_list_form', $selected_id);
			},
		]),
		'vehicle_tyre_sizes' => Request::val('vehicle_tyre_sizes', ''),
		'vehicle_mirrow_check' => Request::multipleChoice('vehicle_mirrow_check', ''),
		'vehicle_interior_condition' => Request::val('vehicle_interior_condition', ''),
		'vehicle_exterior_condition' => Request::val('vehicle_exterior_condition', ''),
		'merchant_type' => Request::lookup('merchant_type', ''),
		'merchant_code' => Request::lookup('merchant_code', ''),
		'merchant_name' => Request::lookup('merchant_name', ''),
		'merchant_contacts_details' => Request::lookup('merchant_contacts_details', ''),
		'merchant_email_address' => Request::val('merchant_email_address', ''),
		'merchant_signature' => Request::fileUpload('merchant_signature', [
			'maxSize' => 512000,
			'types' => 'jpg|jpeg|gif|png|webp',
			'noRename' => false,
			'dir' => '',
			'id' => $selected_id,
			'success' => function($name, $selected_id) {
				createThumbnail($name, getThumbnailSpecs('external_repairs_body', 'merchant_signature', 'tv'));
				createThumbnail($name, getThumbnailSpecs('external_repairs_body', 'merchant_signature', 'dv'));
			},
			'removeOnRequest' => true,
			'remove' => function($selected_id) {
				// do nothing: preserve removed files on server.
			},
			'failure' => function($selected_id, $fileRemoved) {
				if($fileRemoved) return '';
				return existing_value('external_repairs_body', 'merchant_signature', $selected_id);
			},
		]),
		'merchant_address' => Request::lookup('merchant_address', ''),
		'merchant_address_code' => Request::lookup('merchant_address_code', ''),
		'merchant_city' => Request::lookup('merchant_city', ''),
		'head_panel_beating_monitor_progress' => Request::val('head_panel_beating_monitor_progress', ''),
		'head_panel_beating_monitor_quality_of_work_manship' => Request::val('head_panel_beating_monitor_quality_of_work_manship', ''),
		'vehicle_inspection_report' => Request::fileUpload('vehicle_inspection_report', [
			'maxSize' => 5160960,
			'types' => 'txt|doc|docx|docm|odt|pdf|rtf',
			'noRename' => false,
			'dir' => '',
			'id' => $selected_id,
			'success' => function($name, $selected_id) {
			},
			'removeOnRequest' => true,
			'remove' => function($selected_id) {
				// do nothing: preserve removed files on server.
			},
			'failure' => function($selected_id, $fileRemoved) {
				if($fileRemoved) return '';
				return existing_value('external_repairs_body', 'vehicle_inspection_report', $selected_id);
			},
		]),
		'upload_invoice' => Request::fileUpload('upload_invoice', [
			'maxSize' => 5365760,
			'types' => 'txt|doc|docx|docm|odt|pdf|rtf',
			'noRename' => true,
			'dir' => '',
			'id' => $selected_id,
			'success' => function($name, $selected_id) {
			},
			'removeOnRequest' => true,
			'remove' => function($selected_id) {
				// do nothing: preserve removed files on server.
			},
			'failure' => function($selected_id, $fileRemoved) {
				if($fileRemoved) return '';
				return existing_value('external_repairs_body', 'upload_invoice', $selected_id);
			},
		]),
	];

	// get existing values
	$old_data = getRecord('external_repairs_body', $selected_id);
	if(is_array($old_data)) {
		$old_data = array_map('makeSafe', $old_data);
		$old_data['selectedID'] = makeSafe($selected_id);
	}

	$data['selectedID'] = makeSafe($selected_id);

	// hook: external_repairs_body_before_update
	if(function_exists('external_repairs_body_before_update')) {
		$args = ['old_data' => $old_data];
		if(!external_repairs_body_before_update($data, getMemberInfo(), $args)) {
			if(isset($args['error_message'])) $error_message = $args['error_message'];
			return false;
		}
	}

	$set = $data; unset($set['selectedID']);
	foreach ($set as $field => $value) {
		$set[$field] = ($value !== '' && $value !== NULL) ? $value : NULL;
	}

	if(!update(
		'external_repairs_body', 
		backtick_keys_once($set), 
		['`external_repair_body_id`' => $selected_id], 
		$error_message
	)) {
		echo $error_message;
		echo '<a href="external_repairs_body_view.php?SelectedID=' . urlencode($selected_id) . "\">{$Translation['< back']}</a>";
		exit;
	}


	$eo = ['silentErrors' => true];

	update_calc_fields('external_repairs_body', $data['selectedID'], calculated_fields()['external_repairs_body']);

	// hook: external_repairs_body_after_update
	if(function_exists('external_repairs_body_after_update')) {
		$res = sql("SELECT * FROM `external_repairs_body` WHERE `external_repair_body_id`='{$data['selectedID']}' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)) $data = array_map('makeSafe', $row);

		$data['selectedID'] = $data['external_repair_body_id'];
		$args = ['old_data' => $old_data];
		if(!external_repairs_body_after_update($data, getMemberInfo(), $args)) return;
	}

	// mm: update ownership data
	sql("UPDATE `membership_userrecords` SET `dateUpdated`='" . time() . "' WHERE `tableName`='external_repairs_body' AND `pkValue`='" . makeSafe($selected_id) . "'", $eo);
}

function external_repairs_body_form($selected_id = '', $AllowUpdate = 1, $AllowInsert = 1, $AllowDelete = 1, $separateDV = 0, $TemplateDV = '', $TemplateDVP = '') {
	// function to return an editable form for a table records
	// and fill it with data of record whose ID is $selected_id. If $selected_id
	// is empty, an empty form is shown, with only an 'Add New'
	// button displayed.

	global $Translation;
	$eo = ['silentErrors' => true];
	$noUploads = null;
	$row = $urow = $jsReadOnly = $jsEditable = $lookups = null;

	$noSaveAsCopy = true;

	// mm: get table permissions
	$arrPerm = getTablePermissions('external_repairs_body');
	if(!$arrPerm['insert'] && $selected_id == '')
		// no insert permission and no record selected
		// so show access denied error unless TVDV
		return $separateDV ? $Translation['tableAccessDenied'] : '';
	$AllowInsert = ($arrPerm['insert'] ? true : false);
	// print preview?
	$dvprint = false;
	if(strlen($selected_id) && Request::val('dvprint_x') != '') {
		$dvprint = true;
	}

	$filterer_service_provider_name = Request::val('filterer_service_provider_name');
	$filterer_service_provider_type = Request::val('filterer_service_provider_type');
	$filterer_service_provider_contact_details = Request::val('filterer_service_provider_contact_details');
	$filterer_service_provider_address = Request::val('filterer_service_provider_address');
	$filterer_service_provider_branch = Request::val('filterer_service_provider_branch');
	$filterer_service_provider_branch_code = Request::val('filterer_service_provider_branch_code');
	$filterer_instruction_note = Request::val('filterer_instruction_note');
	$filterer_vehicle_registration_number = Request::val('filterer_vehicle_registration_number');
	$filterer_merchant_type = Request::val('filterer_merchant_type');
	$filterer_merchant_code = Request::val('filterer_merchant_code');
	$filterer_merchant_name = Request::val('filterer_merchant_name');
	$filterer_merchant_contacts_details = Request::val('filterer_merchant_contacts_details');
	$filterer_merchant_address = Request::val('filterer_merchant_address');
	$filterer_merchant_address_code = Request::val('filterer_merchant_address_code');
	$filterer_merchant_city = Request::val('filterer_merchant_city');

	// populate filterers, starting from children to grand-parents

	// unique random identifier
	$rnd1 = ($dvprint ? rand(1000000, 9999999) : '');
	// combobox: service_provider_name
	$combo_service_provider_name = new DataCombo;
	// combobox: service_provider_type
	$combo_service_provider_type = new DataCombo;
	// combobox: service_provider_contact_details
	$combo_service_provider_contact_details = new DataCombo;
	// combobox: service_provider_address
	$combo_service_provider_address = new DataCombo;
	// combobox: service_provider_branch
	$combo_service_provider_branch = new DataCombo;
	// combobox: service_provider_branch_code
	$combo_service_provider_branch_code = new DataCombo;
	// combobox: instruction_note
	$combo_instruction_note = new DataCombo;
	// combobox: vehicle_registration_number
	$combo_vehicle_registration_number = new DataCombo;
	// combobox: vehicle_inspection_done
	$combo_vehicle_inspection_done = new Combo;
	$combo_vehicle_inspection_done->ListType = 2;
	$combo_vehicle_inspection_done->MultipleSeparator = ', ';
	$combo_vehicle_inspection_done->ListBoxHeight = 10;
	$combo_vehicle_inspection_done->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/external_repairs_body.vehicle_inspection_done.csv')) {
		$vehicle_inspection_done_data = addslashes(implode('', @file(__DIR__ . '/hooks/external_repairs_body.vehicle_inspection_done.csv')));
		$combo_vehicle_inspection_done->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($vehicle_inspection_done_data))));
		$combo_vehicle_inspection_done->ListData = $combo_vehicle_inspection_done->ListItem;
	} else {
		$combo_vehicle_inspection_done->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("Yes;;No"))));
		$combo_vehicle_inspection_done->ListData = $combo_vehicle_inspection_done->ListItem;
	}
	$combo_vehicle_inspection_done->SelectName = 'vehicle_inspection_done';
	// combobox: vehicle_mirrow_check
	$combo_vehicle_mirrow_check = new Combo;
	$combo_vehicle_mirrow_check->ListType = 3;
	$combo_vehicle_mirrow_check->MultipleSeparator = ', ';
	$combo_vehicle_mirrow_check->ListBoxHeight = 10;
	$combo_vehicle_mirrow_check->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/external_repairs_body.vehicle_mirrow_check.csv')) {
		$vehicle_mirrow_check_data = addslashes(implode('', @file(__DIR__ . '/hooks/external_repairs_body.vehicle_mirrow_check.csv')));
		$combo_vehicle_mirrow_check->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($vehicle_mirrow_check_data))));
		$combo_vehicle_mirrow_check->ListData = $combo_vehicle_mirrow_check->ListItem;
	} else {
		$combo_vehicle_mirrow_check->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("Yes;;No;;Excellent Condition;;Damaged;;Missing"))));
		$combo_vehicle_mirrow_check->ListData = $combo_vehicle_mirrow_check->ListItem;
	}
	$combo_vehicle_mirrow_check->SelectName = 'vehicle_mirrow_check';
	// combobox: merchant_type
	$combo_merchant_type = new DataCombo;
	// combobox: merchant_code
	$combo_merchant_code = new DataCombo;
	// combobox: merchant_name
	$combo_merchant_name = new DataCombo;
	// combobox: merchant_contacts_details
	$combo_merchant_contacts_details = new DataCombo;
	// combobox: merchant_address
	$combo_merchant_address = new DataCombo;
	// combobox: merchant_address_code
	$combo_merchant_address_code = new DataCombo;
	// combobox: merchant_city
	$combo_merchant_city = new DataCombo;
	// combobox: head_panel_beating_monitor_progress
	$combo_head_panel_beating_monitor_progress = new Combo;
	$combo_head_panel_beating_monitor_progress->ListType = 2;
	$combo_head_panel_beating_monitor_progress->MultipleSeparator = ', ';
	$combo_head_panel_beating_monitor_progress->ListBoxHeight = 10;
	$combo_head_panel_beating_monitor_progress->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/external_repairs_body.head_panel_beating_monitor_progress.csv')) {
		$head_panel_beating_monitor_progress_data = addslashes(implode('', @file(__DIR__ . '/hooks/external_repairs_body.head_panel_beating_monitor_progress.csv')));
		$combo_head_panel_beating_monitor_progress->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($head_panel_beating_monitor_progress_data))));
		$combo_head_panel_beating_monitor_progress->ListData = $combo_head_panel_beating_monitor_progress->ListItem;
	} else {
		$combo_head_panel_beating_monitor_progress->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("In Scope of Time;; Delays;;Other"))));
		$combo_head_panel_beating_monitor_progress->ListData = $combo_head_panel_beating_monitor_progress->ListItem;
	}
	$combo_head_panel_beating_monitor_progress->SelectName = 'head_panel_beating_monitor_progress';
	// combobox: head_panel_beating_monitor_quality_of_work_manship
	$combo_head_panel_beating_monitor_quality_of_work_manship = new Combo;
	$combo_head_panel_beating_monitor_quality_of_work_manship->ListType = 2;
	$combo_head_panel_beating_monitor_quality_of_work_manship->MultipleSeparator = ', ';
	$combo_head_panel_beating_monitor_quality_of_work_manship->ListBoxHeight = 10;
	$combo_head_panel_beating_monitor_quality_of_work_manship->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/external_repairs_body.head_panel_beating_monitor_quality_of_work_manship.csv')) {
		$head_panel_beating_monitor_quality_of_work_manship_data = addslashes(implode('', @file(__DIR__ . '/hooks/external_repairs_body.head_panel_beating_monitor_quality_of_work_manship.csv')));
		$combo_head_panel_beating_monitor_quality_of_work_manship->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($head_panel_beating_monitor_quality_of_work_manship_data))));
		$combo_head_panel_beating_monitor_quality_of_work_manship->ListData = $combo_head_panel_beating_monitor_quality_of_work_manship->ListItem;
	} else {
		$combo_head_panel_beating_monitor_quality_of_work_manship->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("Excellent;; Satisfied;;Poor"))));
		$combo_head_panel_beating_monitor_quality_of_work_manship->ListData = $combo_head_panel_beating_monitor_quality_of_work_manship->ListItem;
	}
	$combo_head_panel_beating_monitor_quality_of_work_manship->SelectName = 'head_panel_beating_monitor_quality_of_work_manship';

	if($selected_id) {
		// mm: check member permissions
		if(!$arrPerm['view']) return $Translation['tableAccessDenied'];

		// mm: who is the owner?
		$ownerGroupID = sqlValue("SELECT `groupID` FROM `membership_userrecords` WHERE `tableName`='external_repairs_body' AND `pkValue`='" . makeSafe($selected_id) . "'");
		$ownerMemberID = sqlValue("SELECT LCASE(`memberID`) FROM `membership_userrecords` WHERE `tableName`='external_repairs_body' AND `pkValue`='" . makeSafe($selected_id) . "'");

		if($arrPerm['view'] == 1 && getLoggedMemberID() != $ownerMemberID) return $Translation['tableAccessDenied'];
		if($arrPerm['view'] == 2 && getLoggedGroupID() != $ownerGroupID) return $Translation['tableAccessDenied'];

		// can edit?
		$AllowUpdate = 0;
		if(($arrPerm['edit'] == 1 && $ownerMemberID == getLoggedMemberID()) || ($arrPerm['edit'] == 2 && $ownerGroupID == getLoggedGroupID()) || $arrPerm['edit'] == 3) {
			$AllowUpdate = 1;
		}

		$res = sql("SELECT * FROM `external_repairs_body` WHERE `external_repair_body_id`='" . makeSafe($selected_id) . "'", $eo);
		if(!($row = db_fetch_array($res))) {
			return error_message($Translation['No records found'], 'external_repairs_body_view.php', false);
		}
		$combo_service_provider_name->SelectedData = $row['service_provider_name'];
		$combo_service_provider_type->SelectedData = $row['service_provider_type'];
		$combo_service_provider_contact_details->SelectedData = $row['service_provider_contact_details'];
		$combo_service_provider_address->SelectedData = $row['service_provider_address'];
		$combo_service_provider_branch->SelectedData = $row['service_provider_branch'];
		$combo_service_provider_branch_code->SelectedData = $row['service_provider_branch_code'];
		$combo_instruction_note->SelectedData = $row['instruction_note'];
		$combo_vehicle_registration_number->SelectedData = $row['vehicle_registration_number'];
		$combo_vehicle_inspection_done->SelectedData = $row['vehicle_inspection_done'];
		$combo_vehicle_mirrow_check->SelectedData = $row['vehicle_mirrow_check'];
		$combo_merchant_type->SelectedData = $row['merchant_type'];
		$combo_merchant_code->SelectedData = $row['merchant_code'];
		$combo_merchant_name->SelectedData = $row['merchant_name'];
		$combo_merchant_contacts_details->SelectedData = $row['merchant_contacts_details'];
		$combo_merchant_address->SelectedData = $row['merchant_address'];
		$combo_merchant_address_code->SelectedData = $row['merchant_address_code'];
		$combo_merchant_city->SelectedData = $row['merchant_city'];
		$combo_head_panel_beating_monitor_progress->SelectedData = $row['head_panel_beating_monitor_progress'];
		$combo_head_panel_beating_monitor_quality_of_work_manship->SelectedData = $row['head_panel_beating_monitor_quality_of_work_manship'];
		$urow = $row; /* unsanitized data */
		$row = array_map('safe_html', $row);
	} else {
		$filterField = Request::val('FilterField');
		$filterOperator = Request::val('FilterOperator');
		$filterValue = Request::val('FilterValue');
		$combo_service_provider_name->SelectedData = $filterer_service_provider_name;
		$combo_service_provider_type->SelectedData = $filterer_service_provider_type;
		$combo_service_provider_contact_details->SelectedData = $filterer_service_provider_contact_details;
		$combo_service_provider_address->SelectedData = $filterer_service_provider_address;
		$combo_service_provider_branch->SelectedData = $filterer_service_provider_branch;
		$combo_service_provider_branch_code->SelectedData = $filterer_service_provider_branch_code;
		$combo_instruction_note->SelectedData = $filterer_instruction_note;
		$combo_vehicle_registration_number->SelectedData = $filterer_vehicle_registration_number;
		$combo_vehicle_inspection_done->SelectedText = (isset($filterField[1]) && $filterField[1] == '21' && $filterOperator[1] == '<=>' ? $filterValue[1] : '');
		$combo_merchant_type->SelectedData = $filterer_merchant_type;
		$combo_merchant_code->SelectedData = $filterer_merchant_code;
		$combo_merchant_name->SelectedData = $filterer_merchant_name;
		$combo_merchant_contacts_details->SelectedData = $filterer_merchant_contacts_details;
		$combo_merchant_address->SelectedData = $filterer_merchant_address;
		$combo_merchant_address_code->SelectedData = $filterer_merchant_address_code;
		$combo_merchant_city->SelectedData = $filterer_merchant_city;
		$combo_head_panel_beating_monitor_progress->SelectedText = (isset($filterField[1]) && $filterField[1] == '36' && $filterOperator[1] == '<=>' ? $filterValue[1] : '');
		$combo_head_panel_beating_monitor_quality_of_work_manship->SelectedText = (isset($filterField[1]) && $filterField[1] == '37' && $filterOperator[1] == '<=>' ? $filterValue[1] : '');
	}
	$combo_service_provider_name->HTML = '<span id="service_provider_name-container' . $rnd1 . '"></span><input type="hidden" name="service_provider_name" id="service_provider_name' . $rnd1 . '" value="' . html_attr($combo_service_provider_name->SelectedData) . '">';
	$combo_service_provider_name->MatchText = '<span id="service_provider_name-container-readonly' . $rnd1 . '"></span><input type="hidden" name="service_provider_name" id="service_provider_name' . $rnd1 . '" value="' . html_attr($combo_service_provider_name->SelectedData) . '">';
	$combo_service_provider_type->HTML = '<span id="service_provider_type-container' . $rnd1 . '"></span><input type="hidden" name="service_provider_type" id="service_provider_type' . $rnd1 . '" value="' . html_attr($combo_service_provider_type->SelectedData) . '">';
	$combo_service_provider_type->MatchText = '<span id="service_provider_type-container-readonly' . $rnd1 . '"></span><input type="hidden" name="service_provider_type" id="service_provider_type' . $rnd1 . '" value="' . html_attr($combo_service_provider_type->SelectedData) . '">';
	$combo_service_provider_contact_details->HTML = '<span id="service_provider_contact_details-container' . $rnd1 . '"></span><input type="hidden" name="service_provider_contact_details" id="service_provider_contact_details' . $rnd1 . '" value="' . html_attr($combo_service_provider_contact_details->SelectedData) . '">';
	$combo_service_provider_contact_details->MatchText = '<span id="service_provider_contact_details-container-readonly' . $rnd1 . '"></span><input type="hidden" name="service_provider_contact_details" id="service_provider_contact_details' . $rnd1 . '" value="' . html_attr($combo_service_provider_contact_details->SelectedData) . '">';
	$combo_service_provider_address->HTML = '<span id="service_provider_address-container' . $rnd1 . '"></span><input type="hidden" name="service_provider_address" id="service_provider_address' . $rnd1 . '" value="' . html_attr($combo_service_provider_address->SelectedData) . '">';
	$combo_service_provider_address->MatchText = '<span id="service_provider_address-container-readonly' . $rnd1 . '"></span><input type="hidden" name="service_provider_address" id="service_provider_address' . $rnd1 . '" value="' . html_attr($combo_service_provider_address->SelectedData) . '">';
	$combo_service_provider_branch->HTML = '<span id="service_provider_branch-container' . $rnd1 . '"></span><input type="hidden" name="service_provider_branch" id="service_provider_branch' . $rnd1 . '" value="' . html_attr($combo_service_provider_branch->SelectedData) . '">';
	$combo_service_provider_branch->MatchText = '<span id="service_provider_branch-container-readonly' . $rnd1 . '"></span><input type="hidden" name="service_provider_branch" id="service_provider_branch' . $rnd1 . '" value="' . html_attr($combo_service_provider_branch->SelectedData) . '">';
	$combo_service_provider_branch_code->HTML = '<span id="service_provider_branch_code-container' . $rnd1 . '"></span><input type="hidden" name="service_provider_branch_code" id="service_provider_branch_code' . $rnd1 . '" value="' . html_attr($combo_service_provider_branch_code->SelectedData) . '">';
	$combo_service_provider_branch_code->MatchText = '<span id="service_provider_branch_code-container-readonly' . $rnd1 . '"></span><input type="hidden" name="service_provider_branch_code" id="service_provider_branch_code' . $rnd1 . '" value="' . html_attr($combo_service_provider_branch_code->SelectedData) . '">';
	$combo_instruction_note->HTML = '<span id="instruction_note-container' . $rnd1 . '"></span><input type="hidden" name="instruction_note" id="instruction_note' . $rnd1 . '" value="' . html_attr($combo_instruction_note->SelectedData) . '">';
	$combo_instruction_note->MatchText = '<span id="instruction_note-container-readonly' . $rnd1 . '"></span><input type="hidden" name="instruction_note" id="instruction_note' . $rnd1 . '" value="' . html_attr($combo_instruction_note->SelectedData) . '">';
	$combo_vehicle_registration_number->HTML = '<span id="vehicle_registration_number-container' . $rnd1 . '"></span><input type="hidden" name="vehicle_registration_number" id="vehicle_registration_number' . $rnd1 . '" value="' . html_attr($combo_vehicle_registration_number->SelectedData) . '">';
	$combo_vehicle_registration_number->MatchText = '<span id="vehicle_registration_number-container-readonly' . $rnd1 . '"></span><input type="hidden" name="vehicle_registration_number" id="vehicle_registration_number' . $rnd1 . '" value="' . html_attr($combo_vehicle_registration_number->SelectedData) . '">';
	$combo_vehicle_inspection_done->Render();
	$combo_vehicle_mirrow_check->Render();
	$combo_merchant_type->HTML = '<span id="merchant_type-container' . $rnd1 . '"></span><input type="hidden" name="merchant_type" id="merchant_type' . $rnd1 . '" value="' . html_attr($combo_merchant_type->SelectedData) . '">';
	$combo_merchant_type->MatchText = '<span id="merchant_type-container-readonly' . $rnd1 . '"></span><input type="hidden" name="merchant_type" id="merchant_type' . $rnd1 . '" value="' . html_attr($combo_merchant_type->SelectedData) . '">';
	$combo_merchant_code->HTML = '<span id="merchant_code-container' . $rnd1 . '"></span><input type="hidden" name="merchant_code" id="merchant_code' . $rnd1 . '" value="' . html_attr($combo_merchant_code->SelectedData) . '">';
	$combo_merchant_code->MatchText = '<span id="merchant_code-container-readonly' . $rnd1 . '"></span><input type="hidden" name="merchant_code" id="merchant_code' . $rnd1 . '" value="' . html_attr($combo_merchant_code->SelectedData) . '">';
	$combo_merchant_name->HTML = '<span id="merchant_name-container' . $rnd1 . '"></span><input type="hidden" name="merchant_name" id="merchant_name' . $rnd1 . '" value="' . html_attr($combo_merchant_name->SelectedData) . '">';
	$combo_merchant_name->MatchText = '<span id="merchant_name-container-readonly' . $rnd1 . '"></span><input type="hidden" name="merchant_name" id="merchant_name' . $rnd1 . '" value="' . html_attr($combo_merchant_name->SelectedData) . '">';
	$combo_merchant_contacts_details->HTML = '<span id="merchant_contacts_details-container' . $rnd1 . '"></span><input type="hidden" name="merchant_contacts_details" id="merchant_contacts_details' . $rnd1 . '" value="' . html_attr($combo_merchant_contacts_details->SelectedData) . '">';
	$combo_merchant_contacts_details->MatchText = '<span id="merchant_contacts_details-container-readonly' . $rnd1 . '"></span><input type="hidden" name="merchant_contacts_details" id="merchant_contacts_details' . $rnd1 . '" value="' . html_attr($combo_merchant_contacts_details->SelectedData) . '">';
	$combo_merchant_address->HTML = '<span id="merchant_address-container' . $rnd1 . '"></span><input type="hidden" name="merchant_address" id="merchant_address' . $rnd1 . '" value="' . html_attr($combo_merchant_address->SelectedData) . '">';
	$combo_merchant_address->MatchText = '<span id="merchant_address-container-readonly' . $rnd1 . '"></span><input type="hidden" name="merchant_address" id="merchant_address' . $rnd1 . '" value="' . html_attr($combo_merchant_address->SelectedData) . '">';
	$combo_merchant_address_code->HTML = '<span id="merchant_address_code-container' . $rnd1 . '"></span><input type="hidden" name="merchant_address_code" id="merchant_address_code' . $rnd1 . '" value="' . html_attr($combo_merchant_address_code->SelectedData) . '">';
	$combo_merchant_address_code->MatchText = '<span id="merchant_address_code-container-readonly' . $rnd1 . '"></span><input type="hidden" name="merchant_address_code" id="merchant_address_code' . $rnd1 . '" value="' . html_attr($combo_merchant_address_code->SelectedData) . '">';
	$combo_merchant_city->HTML = '<span id="merchant_city-container' . $rnd1 . '"></span><input type="hidden" name="merchant_city" id="merchant_city' . $rnd1 . '" value="' . html_attr($combo_merchant_city->SelectedData) . '">';
	$combo_merchant_city->MatchText = '<span id="merchant_city-container-readonly' . $rnd1 . '"></span><input type="hidden" name="merchant_city" id="merchant_city' . $rnd1 . '" value="' . html_attr($combo_merchant_city->SelectedData) . '">';
	$combo_head_panel_beating_monitor_progress->Render();
	$combo_head_panel_beating_monitor_quality_of_work_manship->Render();

	ob_start();
	?>

	<script>
		// initial lookup values
		AppGini.current_service_provider_name__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['service_provider_name'] : htmlspecialchars($filterer_service_provider_name, ENT_QUOTES)); ?>"};
		AppGini.current_service_provider_type__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['service_provider_type'] : htmlspecialchars($filterer_service_provider_type, ENT_QUOTES)); ?>"};
		AppGini.current_service_provider_contact_details__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['service_provider_contact_details'] : htmlspecialchars($filterer_service_provider_contact_details, ENT_QUOTES)); ?>"};
		AppGini.current_service_provider_address__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['service_provider_address'] : htmlspecialchars($filterer_service_provider_address, ENT_QUOTES)); ?>"};
		AppGini.current_service_provider_branch__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['service_provider_branch'] : htmlspecialchars($filterer_service_provider_branch, ENT_QUOTES)); ?>"};
		AppGini.current_service_provider_branch_code__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['service_provider_branch_code'] : htmlspecialchars($filterer_service_provider_branch_code, ENT_QUOTES)); ?>"};
		AppGini.current_instruction_note__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['instruction_note'] : htmlspecialchars($filterer_instruction_note, ENT_QUOTES)); ?>"};
		AppGini.current_vehicle_registration_number__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['vehicle_registration_number'] : htmlspecialchars($filterer_vehicle_registration_number, ENT_QUOTES)); ?>"};
		AppGini.current_merchant_type__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['merchant_type'] : htmlspecialchars($filterer_merchant_type, ENT_QUOTES)); ?>"};
		AppGini.current_merchant_code__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['merchant_code'] : htmlspecialchars($filterer_merchant_code, ENT_QUOTES)); ?>"};
		AppGini.current_merchant_name__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['merchant_name'] : htmlspecialchars($filterer_merchant_name, ENT_QUOTES)); ?>"};
		AppGini.current_merchant_contacts_details__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['merchant_contacts_details'] : htmlspecialchars($filterer_merchant_contacts_details, ENT_QUOTES)); ?>"};
		AppGini.current_merchant_address__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['merchant_address'] : htmlspecialchars($filterer_merchant_address, ENT_QUOTES)); ?>"};
		AppGini.current_merchant_address_code__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['merchant_address_code'] : htmlspecialchars($filterer_merchant_address_code, ENT_QUOTES)); ?>"};
		AppGini.current_merchant_city__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['merchant_city'] : htmlspecialchars($filterer_merchant_city, ENT_QUOTES)); ?>"};

		jQuery(function() {
			setTimeout(function() {
				if(typeof(service_provider_name_reload__RAND__) == 'function') service_provider_name_reload__RAND__();
				if(typeof(service_provider_type_reload__RAND__) == 'function') service_provider_type_reload__RAND__();
				if(typeof(service_provider_contact_details_reload__RAND__) == 'function') service_provider_contact_details_reload__RAND__();
				if(typeof(service_provider_address_reload__RAND__) == 'function') service_provider_address_reload__RAND__();
				if(typeof(service_provider_branch_reload__RAND__) == 'function') service_provider_branch_reload__RAND__();
				if(typeof(service_provider_branch_code_reload__RAND__) == 'function') service_provider_branch_code_reload__RAND__();
				if(typeof(instruction_note_reload__RAND__) == 'function') instruction_note_reload__RAND__();
				if(typeof(vehicle_registration_number_reload__RAND__) == 'function') vehicle_registration_number_reload__RAND__();
				if(typeof(merchant_type_reload__RAND__) == 'function') merchant_type_reload__RAND__();
				if(typeof(merchant_code_reload__RAND__) == 'function') merchant_code_reload__RAND__();
				if(typeof(merchant_name_reload__RAND__) == 'function') merchant_name_reload__RAND__();
				if(typeof(merchant_contacts_details_reload__RAND__) == 'function') merchant_contacts_details_reload__RAND__();
				if(typeof(merchant_address_reload__RAND__) == 'function') merchant_address_reload__RAND__();
				if(typeof(merchant_address_code_reload__RAND__) == 'function') merchant_address_code_reload__RAND__();
				if(typeof(merchant_city_reload__RAND__) == 'function') merchant_city_reload__RAND__();
			}, 50); /* we need to slightly delay client-side execution of the above code to allow AppGini.ajaxCache to work */
		});
		function service_provider_name_reload__RAND__() {
		<?php if(($AllowUpdate || ($arrPerm['insert'] && !$selected_id)) && !$dvprint) { ?>

			$j("#service_provider_name-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_service_provider_name__RAND__.value, t: 'external_repairs_body', f: 'service_provider_name' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="service_provider_name"]').val(resp.results[0].id);
							$j('[id=service_provider_name-container-readonly__RAND__]').html('<span class="match-text" id="service_provider_name-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=service_provider_view_parent]').hide(); } else { $j('.btn[id=service_provider_view_parent]').show(); }


							if(typeof(service_provider_name_update_autofills__RAND__) == 'function') service_provider_name_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'external_repairs_body', f: 'service_provider_name' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_service_provider_name__RAND__.value = e.added.id;
				AppGini.current_service_provider_name__RAND__.text = e.added.text;
				$j('[name="service_provider_name"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=service_provider_view_parent]').hide(); } else { $j('.btn[id=service_provider_view_parent]').show(); }


				if(typeof(service_provider_name_update_autofills__RAND__) == 'function') service_provider_name_update_autofills__RAND__();
			});

			if(!$j("#service_provider_name-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_service_provider_name__RAND__.value, t: 'external_repairs_body', f: 'service_provider_name' },
					success: function(resp) {
						$j('[name="service_provider_name"]').val(resp.results[0].id);
						$j('[id=service_provider_name-container-readonly__RAND__]').html('<span class="match-text" id="service_provider_name-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=service_provider_view_parent]').hide(); } else { $j('.btn[id=service_provider_view_parent]').show(); }

						if(typeof(service_provider_name_update_autofills__RAND__) == 'function') service_provider_name_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_service_provider_name__RAND__.value, t: 'external_repairs_body', f: 'service_provider_name' },
				success: function(resp) {
					$j('[id=service_provider_name-container__RAND__], [id=service_provider_name-container-readonly__RAND__]').html('<span class="match-text" id="service_provider_name-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=service_provider_view_parent]').hide(); } else { $j('.btn[id=service_provider_view_parent]').show(); }

					if(typeof(service_provider_name_update_autofills__RAND__) == 'function') service_provider_name_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function service_provider_type_reload__RAND__() {
		<?php if(($AllowUpdate || ($arrPerm['insert'] && !$selected_id)) && !$dvprint) { ?>

			$j("#service_provider_type-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_service_provider_type__RAND__.value, t: 'external_repairs_body', f: 'service_provider_type' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="service_provider_type"]').val(resp.results[0].id);
							$j('[id=service_provider_type-container-readonly__RAND__]').html('<span class="match-text" id="service_provider_type-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=service_provider_view_parent]').hide(); } else { $j('.btn[id=service_provider_view_parent]').show(); }


							if(typeof(service_provider_type_update_autofills__RAND__) == 'function') service_provider_type_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'external_repairs_body', f: 'service_provider_type' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_service_provider_type__RAND__.value = e.added.id;
				AppGini.current_service_provider_type__RAND__.text = e.added.text;
				$j('[name="service_provider_type"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=service_provider_view_parent]').hide(); } else { $j('.btn[id=service_provider_view_parent]').show(); }


				if(typeof(service_provider_type_update_autofills__RAND__) == 'function') service_provider_type_update_autofills__RAND__();
			});

			if(!$j("#service_provider_type-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_service_provider_type__RAND__.value, t: 'external_repairs_body', f: 'service_provider_type' },
					success: function(resp) {
						$j('[name="service_provider_type"]').val(resp.results[0].id);
						$j('[id=service_provider_type-container-readonly__RAND__]').html('<span class="match-text" id="service_provider_type-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=service_provider_view_parent]').hide(); } else { $j('.btn[id=service_provider_view_parent]').show(); }

						if(typeof(service_provider_type_update_autofills__RAND__) == 'function') service_provider_type_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_service_provider_type__RAND__.value, t: 'external_repairs_body', f: 'service_provider_type' },
				success: function(resp) {
					$j('[id=service_provider_type-container__RAND__], [id=service_provider_type-container-readonly__RAND__]').html('<span class="match-text" id="service_provider_type-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=service_provider_view_parent]').hide(); } else { $j('.btn[id=service_provider_view_parent]').show(); }

					if(typeof(service_provider_type_update_autofills__RAND__) == 'function') service_provider_type_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function service_provider_contact_details_reload__RAND__() {
		<?php if(($AllowUpdate || ($arrPerm['insert'] && !$selected_id)) && !$dvprint) { ?>

			$j("#service_provider_contact_details-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_service_provider_contact_details__RAND__.value, t: 'external_repairs_body', f: 'service_provider_contact_details' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="service_provider_contact_details"]').val(resp.results[0].id);
							$j('[id=service_provider_contact_details-container-readonly__RAND__]').html('<span class="match-text" id="service_provider_contact_details-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=service_provider_view_parent]').hide(); } else { $j('.btn[id=service_provider_view_parent]').show(); }


							if(typeof(service_provider_contact_details_update_autofills__RAND__) == 'function') service_provider_contact_details_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'external_repairs_body', f: 'service_provider_contact_details' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_service_provider_contact_details__RAND__.value = e.added.id;
				AppGini.current_service_provider_contact_details__RAND__.text = e.added.text;
				$j('[name="service_provider_contact_details"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=service_provider_view_parent]').hide(); } else { $j('.btn[id=service_provider_view_parent]').show(); }


				if(typeof(service_provider_contact_details_update_autofills__RAND__) == 'function') service_provider_contact_details_update_autofills__RAND__();
			});

			if(!$j("#service_provider_contact_details-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_service_provider_contact_details__RAND__.value, t: 'external_repairs_body', f: 'service_provider_contact_details' },
					success: function(resp) {
						$j('[name="service_provider_contact_details"]').val(resp.results[0].id);
						$j('[id=service_provider_contact_details-container-readonly__RAND__]').html('<span class="match-text" id="service_provider_contact_details-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=service_provider_view_parent]').hide(); } else { $j('.btn[id=service_provider_view_parent]').show(); }

						if(typeof(service_provider_contact_details_update_autofills__RAND__) == 'function') service_provider_contact_details_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_service_provider_contact_details__RAND__.value, t: 'external_repairs_body', f: 'service_provider_contact_details' },
				success: function(resp) {
					$j('[id=service_provider_contact_details-container__RAND__], [id=service_provider_contact_details-container-readonly__RAND__]').html('<span class="match-text" id="service_provider_contact_details-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=service_provider_view_parent]').hide(); } else { $j('.btn[id=service_provider_view_parent]').show(); }

					if(typeof(service_provider_contact_details_update_autofills__RAND__) == 'function') service_provider_contact_details_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function service_provider_address_reload__RAND__() {
		<?php if(($AllowUpdate || ($arrPerm['insert'] && !$selected_id)) && !$dvprint) { ?>

			$j("#service_provider_address-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_service_provider_address__RAND__.value, t: 'external_repairs_body', f: 'service_provider_address' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="service_provider_address"]').val(resp.results[0].id);
							$j('[id=service_provider_address-container-readonly__RAND__]').html('<span class="match-text" id="service_provider_address-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=service_provider_view_parent]').hide(); } else { $j('.btn[id=service_provider_view_parent]').show(); }


							if(typeof(service_provider_address_update_autofills__RAND__) == 'function') service_provider_address_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'external_repairs_body', f: 'service_provider_address' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_service_provider_address__RAND__.value = e.added.id;
				AppGini.current_service_provider_address__RAND__.text = e.added.text;
				$j('[name="service_provider_address"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=service_provider_view_parent]').hide(); } else { $j('.btn[id=service_provider_view_parent]').show(); }


				if(typeof(service_provider_address_update_autofills__RAND__) == 'function') service_provider_address_update_autofills__RAND__();
			});

			if(!$j("#service_provider_address-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_service_provider_address__RAND__.value, t: 'external_repairs_body', f: 'service_provider_address' },
					success: function(resp) {
						$j('[name="service_provider_address"]').val(resp.results[0].id);
						$j('[id=service_provider_address-container-readonly__RAND__]').html('<span class="match-text" id="service_provider_address-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=service_provider_view_parent]').hide(); } else { $j('.btn[id=service_provider_view_parent]').show(); }

						if(typeof(service_provider_address_update_autofills__RAND__) == 'function') service_provider_address_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_service_provider_address__RAND__.value, t: 'external_repairs_body', f: 'service_provider_address' },
				success: function(resp) {
					$j('[id=service_provider_address-container__RAND__], [id=service_provider_address-container-readonly__RAND__]').html('<span class="match-text" id="service_provider_address-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=service_provider_view_parent]').hide(); } else { $j('.btn[id=service_provider_view_parent]').show(); }

					if(typeof(service_provider_address_update_autofills__RAND__) == 'function') service_provider_address_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function service_provider_branch_reload__RAND__() {
		<?php if(($AllowUpdate || ($arrPerm['insert'] && !$selected_id)) && !$dvprint) { ?>

			$j("#service_provider_branch-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_service_provider_branch__RAND__.value, t: 'external_repairs_body', f: 'service_provider_branch' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="service_provider_branch"]').val(resp.results[0].id);
							$j('[id=service_provider_branch-container-readonly__RAND__]').html('<span class="match-text" id="service_provider_branch-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=service_provider_view_parent]').hide(); } else { $j('.btn[id=service_provider_view_parent]').show(); }


							if(typeof(service_provider_branch_update_autofills__RAND__) == 'function') service_provider_branch_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'external_repairs_body', f: 'service_provider_branch' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_service_provider_branch__RAND__.value = e.added.id;
				AppGini.current_service_provider_branch__RAND__.text = e.added.text;
				$j('[name="service_provider_branch"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=service_provider_view_parent]').hide(); } else { $j('.btn[id=service_provider_view_parent]').show(); }


				if(typeof(service_provider_branch_update_autofills__RAND__) == 'function') service_provider_branch_update_autofills__RAND__();
			});

			if(!$j("#service_provider_branch-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_service_provider_branch__RAND__.value, t: 'external_repairs_body', f: 'service_provider_branch' },
					success: function(resp) {
						$j('[name="service_provider_branch"]').val(resp.results[0].id);
						$j('[id=service_provider_branch-container-readonly__RAND__]').html('<span class="match-text" id="service_provider_branch-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=service_provider_view_parent]').hide(); } else { $j('.btn[id=service_provider_view_parent]').show(); }

						if(typeof(service_provider_branch_update_autofills__RAND__) == 'function') service_provider_branch_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_service_provider_branch__RAND__.value, t: 'external_repairs_body', f: 'service_provider_branch' },
				success: function(resp) {
					$j('[id=service_provider_branch-container__RAND__], [id=service_provider_branch-container-readonly__RAND__]').html('<span class="match-text" id="service_provider_branch-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=service_provider_view_parent]').hide(); } else { $j('.btn[id=service_provider_view_parent]').show(); }

					if(typeof(service_provider_branch_update_autofills__RAND__) == 'function') service_provider_branch_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function service_provider_branch_code_reload__RAND__() {
		<?php if(($AllowUpdate || ($arrPerm['insert'] && !$selected_id)) && !$dvprint) { ?>

			$j("#service_provider_branch_code-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_service_provider_branch_code__RAND__.value, t: 'external_repairs_body', f: 'service_provider_branch_code' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="service_provider_branch_code"]').val(resp.results[0].id);
							$j('[id=service_provider_branch_code-container-readonly__RAND__]').html('<span class="match-text" id="service_provider_branch_code-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=service_provider_view_parent]').hide(); } else { $j('.btn[id=service_provider_view_parent]').show(); }


							if(typeof(service_provider_branch_code_update_autofills__RAND__) == 'function') service_provider_branch_code_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'external_repairs_body', f: 'service_provider_branch_code' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_service_provider_branch_code__RAND__.value = e.added.id;
				AppGini.current_service_provider_branch_code__RAND__.text = e.added.text;
				$j('[name="service_provider_branch_code"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=service_provider_view_parent]').hide(); } else { $j('.btn[id=service_provider_view_parent]').show(); }


				if(typeof(service_provider_branch_code_update_autofills__RAND__) == 'function') service_provider_branch_code_update_autofills__RAND__();
			});

			if(!$j("#service_provider_branch_code-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_service_provider_branch_code__RAND__.value, t: 'external_repairs_body', f: 'service_provider_branch_code' },
					success: function(resp) {
						$j('[name="service_provider_branch_code"]').val(resp.results[0].id);
						$j('[id=service_provider_branch_code-container-readonly__RAND__]').html('<span class="match-text" id="service_provider_branch_code-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=service_provider_view_parent]').hide(); } else { $j('.btn[id=service_provider_view_parent]').show(); }

						if(typeof(service_provider_branch_code_update_autofills__RAND__) == 'function') service_provider_branch_code_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_service_provider_branch_code__RAND__.value, t: 'external_repairs_body', f: 'service_provider_branch_code' },
				success: function(resp) {
					$j('[id=service_provider_branch_code-container__RAND__], [id=service_provider_branch_code-container-readonly__RAND__]').html('<span class="match-text" id="service_provider_branch_code-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=service_provider_view_parent]').hide(); } else { $j('.btn[id=service_provider_view_parent]').show(); }

					if(typeof(service_provider_branch_code_update_autofills__RAND__) == 'function') service_provider_branch_code_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function instruction_note_reload__RAND__() {
		<?php if(($AllowUpdate || ($arrPerm['insert'] && !$selected_id)) && !$dvprint) { ?>

			$j("#instruction_note-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_instruction_note__RAND__.value, t: 'external_repairs_body', f: 'instruction_note' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="instruction_note"]').val(resp.results[0].id);
							$j('[id=instruction_note-container-readonly__RAND__]').html('<span class="match-text" id="instruction_note-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=claim_view_parent]').hide(); } else { $j('.btn[id=claim_view_parent]').show(); }


							if(typeof(instruction_note_update_autofills__RAND__) == 'function') instruction_note_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'external_repairs_body', f: 'instruction_note' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_instruction_note__RAND__.value = e.added.id;
				AppGini.current_instruction_note__RAND__.text = e.added.text;
				$j('[name="instruction_note"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=claim_view_parent]').hide(); } else { $j('.btn[id=claim_view_parent]').show(); }


				if(typeof(instruction_note_update_autofills__RAND__) == 'function') instruction_note_update_autofills__RAND__();
			});

			if(!$j("#instruction_note-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_instruction_note__RAND__.value, t: 'external_repairs_body', f: 'instruction_note' },
					success: function(resp) {
						$j('[name="instruction_note"]').val(resp.results[0].id);
						$j('[id=instruction_note-container-readonly__RAND__]').html('<span class="match-text" id="instruction_note-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=claim_view_parent]').hide(); } else { $j('.btn[id=claim_view_parent]').show(); }

						if(typeof(instruction_note_update_autofills__RAND__) == 'function') instruction_note_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_instruction_note__RAND__.value, t: 'external_repairs_body', f: 'instruction_note' },
				success: function(resp) {
					$j('[id=instruction_note-container__RAND__], [id=instruction_note-container-readonly__RAND__]').html('<span class="match-text" id="instruction_note-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=claim_view_parent]').hide(); } else { $j('.btn[id=claim_view_parent]').show(); }

					if(typeof(instruction_note_update_autofills__RAND__) == 'function') instruction_note_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function vehicle_registration_number_reload__RAND__() {
		<?php if(($AllowUpdate || ($arrPerm['insert'] && !$selected_id)) && !$dvprint) { ?>

			$j("#vehicle_registration_number-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_vehicle_registration_number__RAND__.value, t: 'external_repairs_body', f: 'vehicle_registration_number' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="vehicle_registration_number"]').val(resp.results[0].id);
							$j('[id=vehicle_registration_number-container-readonly__RAND__]').html('<span class="match-text" id="vehicle_registration_number-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=gmt_fleet_register_view_parent]').hide(); } else { $j('.btn[id=gmt_fleet_register_view_parent]').show(); }


							if(typeof(vehicle_registration_number_update_autofills__RAND__) == 'function') vehicle_registration_number_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'external_repairs_body', f: 'vehicle_registration_number' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_vehicle_registration_number__RAND__.value = e.added.id;
				AppGini.current_vehicle_registration_number__RAND__.text = e.added.text;
				$j('[name="vehicle_registration_number"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=gmt_fleet_register_view_parent]').hide(); } else { $j('.btn[id=gmt_fleet_register_view_parent]').show(); }


				if(typeof(vehicle_registration_number_update_autofills__RAND__) == 'function') vehicle_registration_number_update_autofills__RAND__();
			});

			if(!$j("#vehicle_registration_number-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_vehicle_registration_number__RAND__.value, t: 'external_repairs_body', f: 'vehicle_registration_number' },
					success: function(resp) {
						$j('[name="vehicle_registration_number"]').val(resp.results[0].id);
						$j('[id=vehicle_registration_number-container-readonly__RAND__]').html('<span class="match-text" id="vehicle_registration_number-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=gmt_fleet_register_view_parent]').hide(); } else { $j('.btn[id=gmt_fleet_register_view_parent]').show(); }

						if(typeof(vehicle_registration_number_update_autofills__RAND__) == 'function') vehicle_registration_number_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_vehicle_registration_number__RAND__.value, t: 'external_repairs_body', f: 'vehicle_registration_number' },
				success: function(resp) {
					$j('[id=vehicle_registration_number-container__RAND__], [id=vehicle_registration_number-container-readonly__RAND__]').html('<span class="match-text" id="vehicle_registration_number-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=gmt_fleet_register_view_parent]').hide(); } else { $j('.btn[id=gmt_fleet_register_view_parent]').show(); }

					if(typeof(vehicle_registration_number_update_autofills__RAND__) == 'function') vehicle_registration_number_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function merchant_type_reload__RAND__() {
		<?php if(($AllowUpdate || ($arrPerm['insert'] && !$selected_id)) && !$dvprint) { ?>

			$j("#merchant_type-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_merchant_type__RAND__.value, t: 'external_repairs_body', f: 'merchant_type' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="merchant_type"]').val(resp.results[0].id);
							$j('[id=merchant_type-container-readonly__RAND__]').html('<span class="match-text" id="merchant_type-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=merchant_view_parent]').hide(); } else { $j('.btn[id=merchant_view_parent]').show(); }


							if(typeof(merchant_type_update_autofills__RAND__) == 'function') merchant_type_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'external_repairs_body', f: 'merchant_type' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_merchant_type__RAND__.value = e.added.id;
				AppGini.current_merchant_type__RAND__.text = e.added.text;
				$j('[name="merchant_type"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=merchant_view_parent]').hide(); } else { $j('.btn[id=merchant_view_parent]').show(); }


				if(typeof(merchant_type_update_autofills__RAND__) == 'function') merchant_type_update_autofills__RAND__();
			});

			if(!$j("#merchant_type-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_merchant_type__RAND__.value, t: 'external_repairs_body', f: 'merchant_type' },
					success: function(resp) {
						$j('[name="merchant_type"]').val(resp.results[0].id);
						$j('[id=merchant_type-container-readonly__RAND__]').html('<span class="match-text" id="merchant_type-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=merchant_view_parent]').hide(); } else { $j('.btn[id=merchant_view_parent]').show(); }

						if(typeof(merchant_type_update_autofills__RAND__) == 'function') merchant_type_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_merchant_type__RAND__.value, t: 'external_repairs_body', f: 'merchant_type' },
				success: function(resp) {
					$j('[id=merchant_type-container__RAND__], [id=merchant_type-container-readonly__RAND__]').html('<span class="match-text" id="merchant_type-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=merchant_view_parent]').hide(); } else { $j('.btn[id=merchant_view_parent]').show(); }

					if(typeof(merchant_type_update_autofills__RAND__) == 'function') merchant_type_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function merchant_code_reload__RAND__() {
		<?php if(($AllowUpdate || ($arrPerm['insert'] && !$selected_id)) && !$dvprint) { ?>

			$j("#merchant_code-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_merchant_code__RAND__.value, t: 'external_repairs_body', f: 'merchant_code' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="merchant_code"]').val(resp.results[0].id);
							$j('[id=merchant_code-container-readonly__RAND__]').html('<span class="match-text" id="merchant_code-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=merchant_view_parent]').hide(); } else { $j('.btn[id=merchant_view_parent]').show(); }


							if(typeof(merchant_code_update_autofills__RAND__) == 'function') merchant_code_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'external_repairs_body', f: 'merchant_code' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_merchant_code__RAND__.value = e.added.id;
				AppGini.current_merchant_code__RAND__.text = e.added.text;
				$j('[name="merchant_code"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=merchant_view_parent]').hide(); } else { $j('.btn[id=merchant_view_parent]').show(); }


				if(typeof(merchant_code_update_autofills__RAND__) == 'function') merchant_code_update_autofills__RAND__();
			});

			if(!$j("#merchant_code-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_merchant_code__RAND__.value, t: 'external_repairs_body', f: 'merchant_code' },
					success: function(resp) {
						$j('[name="merchant_code"]').val(resp.results[0].id);
						$j('[id=merchant_code-container-readonly__RAND__]').html('<span class="match-text" id="merchant_code-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=merchant_view_parent]').hide(); } else { $j('.btn[id=merchant_view_parent]').show(); }

						if(typeof(merchant_code_update_autofills__RAND__) == 'function') merchant_code_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_merchant_code__RAND__.value, t: 'external_repairs_body', f: 'merchant_code' },
				success: function(resp) {
					$j('[id=merchant_code-container__RAND__], [id=merchant_code-container-readonly__RAND__]').html('<span class="match-text" id="merchant_code-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=merchant_view_parent]').hide(); } else { $j('.btn[id=merchant_view_parent]').show(); }

					if(typeof(merchant_code_update_autofills__RAND__) == 'function') merchant_code_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function merchant_name_reload__RAND__() {
		<?php if(($AllowUpdate || ($arrPerm['insert'] && !$selected_id)) && !$dvprint) { ?>

			$j("#merchant_name-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_merchant_name__RAND__.value, t: 'external_repairs_body', f: 'merchant_name' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="merchant_name"]').val(resp.results[0].id);
							$j('[id=merchant_name-container-readonly__RAND__]').html('<span class="match-text" id="merchant_name-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=merchant_view_parent]').hide(); } else { $j('.btn[id=merchant_view_parent]').show(); }


							if(typeof(merchant_name_update_autofills__RAND__) == 'function') merchant_name_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'external_repairs_body', f: 'merchant_name' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_merchant_name__RAND__.value = e.added.id;
				AppGini.current_merchant_name__RAND__.text = e.added.text;
				$j('[name="merchant_name"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=merchant_view_parent]').hide(); } else { $j('.btn[id=merchant_view_parent]').show(); }


				if(typeof(merchant_name_update_autofills__RAND__) == 'function') merchant_name_update_autofills__RAND__();
			});

			if(!$j("#merchant_name-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_merchant_name__RAND__.value, t: 'external_repairs_body', f: 'merchant_name' },
					success: function(resp) {
						$j('[name="merchant_name"]').val(resp.results[0].id);
						$j('[id=merchant_name-container-readonly__RAND__]').html('<span class="match-text" id="merchant_name-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=merchant_view_parent]').hide(); } else { $j('.btn[id=merchant_view_parent]').show(); }

						if(typeof(merchant_name_update_autofills__RAND__) == 'function') merchant_name_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_merchant_name__RAND__.value, t: 'external_repairs_body', f: 'merchant_name' },
				success: function(resp) {
					$j('[id=merchant_name-container__RAND__], [id=merchant_name-container-readonly__RAND__]').html('<span class="match-text" id="merchant_name-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=merchant_view_parent]').hide(); } else { $j('.btn[id=merchant_view_parent]').show(); }

					if(typeof(merchant_name_update_autofills__RAND__) == 'function') merchant_name_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function merchant_contacts_details_reload__RAND__() {
		<?php if(($AllowUpdate || ($arrPerm['insert'] && !$selected_id)) && !$dvprint) { ?>

			$j("#merchant_contacts_details-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_merchant_contacts_details__RAND__.value, t: 'external_repairs_body', f: 'merchant_contacts_details' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="merchant_contacts_details"]').val(resp.results[0].id);
							$j('[id=merchant_contacts_details-container-readonly__RAND__]').html('<span class="match-text" id="merchant_contacts_details-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=merchant_view_parent]').hide(); } else { $j('.btn[id=merchant_view_parent]').show(); }


							if(typeof(merchant_contacts_details_update_autofills__RAND__) == 'function') merchant_contacts_details_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'external_repairs_body', f: 'merchant_contacts_details' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_merchant_contacts_details__RAND__.value = e.added.id;
				AppGini.current_merchant_contacts_details__RAND__.text = e.added.text;
				$j('[name="merchant_contacts_details"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=merchant_view_parent]').hide(); } else { $j('.btn[id=merchant_view_parent]').show(); }


				if(typeof(merchant_contacts_details_update_autofills__RAND__) == 'function') merchant_contacts_details_update_autofills__RAND__();
			});

			if(!$j("#merchant_contacts_details-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_merchant_contacts_details__RAND__.value, t: 'external_repairs_body', f: 'merchant_contacts_details' },
					success: function(resp) {
						$j('[name="merchant_contacts_details"]').val(resp.results[0].id);
						$j('[id=merchant_contacts_details-container-readonly__RAND__]').html('<span class="match-text" id="merchant_contacts_details-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=merchant_view_parent]').hide(); } else { $j('.btn[id=merchant_view_parent]').show(); }

						if(typeof(merchant_contacts_details_update_autofills__RAND__) == 'function') merchant_contacts_details_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_merchant_contacts_details__RAND__.value, t: 'external_repairs_body', f: 'merchant_contacts_details' },
				success: function(resp) {
					$j('[id=merchant_contacts_details-container__RAND__], [id=merchant_contacts_details-container-readonly__RAND__]').html('<span class="match-text" id="merchant_contacts_details-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=merchant_view_parent]').hide(); } else { $j('.btn[id=merchant_view_parent]').show(); }

					if(typeof(merchant_contacts_details_update_autofills__RAND__) == 'function') merchant_contacts_details_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function merchant_address_reload__RAND__() {
		<?php if(($AllowUpdate || ($arrPerm['insert'] && !$selected_id)) && !$dvprint) { ?>

			$j("#merchant_address-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_merchant_address__RAND__.value, t: 'external_repairs_body', f: 'merchant_address' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="merchant_address"]').val(resp.results[0].id);
							$j('[id=merchant_address-container-readonly__RAND__]').html('<span class="match-text" id="merchant_address-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=merchant_view_parent]').hide(); } else { $j('.btn[id=merchant_view_parent]').show(); }


							if(typeof(merchant_address_update_autofills__RAND__) == 'function') merchant_address_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'external_repairs_body', f: 'merchant_address' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_merchant_address__RAND__.value = e.added.id;
				AppGini.current_merchant_address__RAND__.text = e.added.text;
				$j('[name="merchant_address"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=merchant_view_parent]').hide(); } else { $j('.btn[id=merchant_view_parent]').show(); }


				if(typeof(merchant_address_update_autofills__RAND__) == 'function') merchant_address_update_autofills__RAND__();
			});

			if(!$j("#merchant_address-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_merchant_address__RAND__.value, t: 'external_repairs_body', f: 'merchant_address' },
					success: function(resp) {
						$j('[name="merchant_address"]').val(resp.results[0].id);
						$j('[id=merchant_address-container-readonly__RAND__]').html('<span class="match-text" id="merchant_address-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=merchant_view_parent]').hide(); } else { $j('.btn[id=merchant_view_parent]').show(); }

						if(typeof(merchant_address_update_autofills__RAND__) == 'function') merchant_address_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_merchant_address__RAND__.value, t: 'external_repairs_body', f: 'merchant_address' },
				success: function(resp) {
					$j('[id=merchant_address-container__RAND__], [id=merchant_address-container-readonly__RAND__]').html('<span class="match-text" id="merchant_address-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=merchant_view_parent]').hide(); } else { $j('.btn[id=merchant_view_parent]').show(); }

					if(typeof(merchant_address_update_autofills__RAND__) == 'function') merchant_address_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function merchant_address_code_reload__RAND__() {
		<?php if(($AllowUpdate || ($arrPerm['insert'] && !$selected_id)) && !$dvprint) { ?>

			$j("#merchant_address_code-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_merchant_address_code__RAND__.value, t: 'external_repairs_body', f: 'merchant_address_code' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="merchant_address_code"]').val(resp.results[0].id);
							$j('[id=merchant_address_code-container-readonly__RAND__]').html('<span class="match-text" id="merchant_address_code-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=merchant_view_parent]').hide(); } else { $j('.btn[id=merchant_view_parent]').show(); }


							if(typeof(merchant_address_code_update_autofills__RAND__) == 'function') merchant_address_code_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'external_repairs_body', f: 'merchant_address_code' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_merchant_address_code__RAND__.value = e.added.id;
				AppGini.current_merchant_address_code__RAND__.text = e.added.text;
				$j('[name="merchant_address_code"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=merchant_view_parent]').hide(); } else { $j('.btn[id=merchant_view_parent]').show(); }


				if(typeof(merchant_address_code_update_autofills__RAND__) == 'function') merchant_address_code_update_autofills__RAND__();
			});

			if(!$j("#merchant_address_code-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_merchant_address_code__RAND__.value, t: 'external_repairs_body', f: 'merchant_address_code' },
					success: function(resp) {
						$j('[name="merchant_address_code"]').val(resp.results[0].id);
						$j('[id=merchant_address_code-container-readonly__RAND__]').html('<span class="match-text" id="merchant_address_code-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=merchant_view_parent]').hide(); } else { $j('.btn[id=merchant_view_parent]').show(); }

						if(typeof(merchant_address_code_update_autofills__RAND__) == 'function') merchant_address_code_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_merchant_address_code__RAND__.value, t: 'external_repairs_body', f: 'merchant_address_code' },
				success: function(resp) {
					$j('[id=merchant_address_code-container__RAND__], [id=merchant_address_code-container-readonly__RAND__]').html('<span class="match-text" id="merchant_address_code-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=merchant_view_parent]').hide(); } else { $j('.btn[id=merchant_view_parent]').show(); }

					if(typeof(merchant_address_code_update_autofills__RAND__) == 'function') merchant_address_code_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function merchant_city_reload__RAND__() {
		<?php if(($AllowUpdate || ($arrPerm['insert'] && !$selected_id)) && !$dvprint) { ?>

			$j("#merchant_city-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_merchant_city__RAND__.value, t: 'external_repairs_body', f: 'merchant_city' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="merchant_city"]').val(resp.results[0].id);
							$j('[id=merchant_city-container-readonly__RAND__]').html('<span class="match-text" id="merchant_city-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=merchant_view_parent]').hide(); } else { $j('.btn[id=merchant_view_parent]').show(); }


							if(typeof(merchant_city_update_autofills__RAND__) == 'function') merchant_city_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'external_repairs_body', f: 'merchant_city' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_merchant_city__RAND__.value = e.added.id;
				AppGini.current_merchant_city__RAND__.text = e.added.text;
				$j('[name="merchant_city"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=merchant_view_parent]').hide(); } else { $j('.btn[id=merchant_view_parent]').show(); }


				if(typeof(merchant_city_update_autofills__RAND__) == 'function') merchant_city_update_autofills__RAND__();
			});

			if(!$j("#merchant_city-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_merchant_city__RAND__.value, t: 'external_repairs_body', f: 'merchant_city' },
					success: function(resp) {
						$j('[name="merchant_city"]').val(resp.results[0].id);
						$j('[id=merchant_city-container-readonly__RAND__]').html('<span class="match-text" id="merchant_city-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=merchant_view_parent]').hide(); } else { $j('.btn[id=merchant_view_parent]').show(); }

						if(typeof(merchant_city_update_autofills__RAND__) == 'function') merchant_city_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_merchant_city__RAND__.value, t: 'external_repairs_body', f: 'merchant_city' },
				success: function(resp) {
					$j('[id=merchant_city-container__RAND__], [id=merchant_city-container-readonly__RAND__]').html('<span class="match-text" id="merchant_city-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=merchant_view_parent]').hide(); } else { $j('.btn[id=merchant_view_parent]').show(); }

					if(typeof(merchant_city_update_autofills__RAND__) == 'function') merchant_city_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
	</script>
	<?php

	$lookups = str_replace('__RAND__', $rnd1, ob_get_clean());


	// code for template based detail view forms

	// open the detail view template
	if($dvprint) {
		$template_file = is_file("./{$TemplateDVP}") ? "./{$TemplateDVP}" : './templates/external_repairs_body_templateDVP.html';
		$templateCode = @file_get_contents($template_file);
	} else {
		$template_file = is_file("./{$TemplateDV}") ? "./{$TemplateDV}" : './templates/external_repairs_body_templateDV.html';
		$templateCode = @file_get_contents($template_file);
	}

	// process form title
	$templateCode = str_replace('<%%DETAIL_VIEW_TITLE%%>', 'External Repairs Body ID Details:', $templateCode);
	$templateCode = str_replace('<%%RND1%%>', $rnd1, $templateCode);
	$templateCode = str_replace('<%%EMBEDDED%%>', (Request::val('Embedded') ? 'Embedded=1' : ''), $templateCode);
	// process buttons
	if($arrPerm['insert'] && !$selected_id) { // allow insert and no record selected?
		if(!$selected_id) $templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-success" id="insert" name="insert_x" value="1" onclick="return external_repairs_body_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save New'] . '</button>', $templateCode);
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="insert" name="insert_x" value="1" onclick="return external_repairs_body_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save As Copy'] . '</button>', $templateCode);
	} else {
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '', $templateCode);
	}

	// 'Back' button action
	if(Request::val('Embedded')) {
		$backAction = 'AppGini.closeParentModal(); return false;';
	} else {
		$backAction = '$j(\'form\').eq(0).attr(\'novalidate\', \'novalidate\'); document.myform.reset(); return true;';
	}

	if($selected_id) {
		if(!Request::val('Embedded')) $templateCode = str_replace('<%%DVPRINT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="dvprint" name="dvprint_x" value="1" onclick="$j(\'form\').eq(0).prop(\'novalidate\', true); document.myform.reset(); return true;" title="' . html_attr($Translation['Print Preview']) . '"><i class="glyphicon glyphicon-print"></i> ' . $Translation['Print Preview'] . '</button>', $templateCode);
		if($AllowUpdate) {
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '<button type="submit" class="btn btn-success btn-lg" id="update" name="update_x" value="1" onclick="return external_repairs_body_validateData();" title="' . html_attr($Translation['Save Changes']) . '"><i class="glyphicon glyphicon-ok"></i> ' . $Translation['Save Changes'] . '</button>', $templateCode);
		} else {
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		}
		if(($arrPerm['delete'] == 1 && $ownerMemberID == getLoggedMemberID()) || ($arrPerm['delete'] == 2 && $ownerGroupID == getLoggedGroupID()) || $arrPerm['delete'] == 3) { // allow delete?
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '<button type="submit" class="btn btn-danger" id="delete" name="delete_x" value="1" onclick="return confirm(\'' . $Translation['are you sure?'] . '\');" title="' . html_attr($Translation['Delete']) . '"><i class="glyphicon glyphicon-trash"></i> ' . $Translation['Delete'] . '</button>', $templateCode);
		} else {
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		}
		$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>', $templateCode);
	} else {
		$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);

		// if not in embedded mode and user has insert only but no view/update/delete,
		// remove 'back' button
		if(
			$arrPerm['insert']
			&& !$arrPerm['update'] && !$arrPerm['delete'] && !$arrPerm['view']
			&& !Request::val('Embedded')
		)
			$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '', $templateCode);
		elseif($separateDV)
			$templateCode = str_replace(
				'<%%DESELECT_BUTTON%%>', 
				'<button
					type="submit" 
					class="btn btn-default" 
					id="deselect" 
					name="deselect_x" 
					value="1" 
					onclick="' . $backAction . '" 
					title="' . html_attr($Translation['Back']) . '">
						<i class="glyphicon glyphicon-chevron-left"></i> ' .
						$Translation['Back'] .
				'</button>',
				$templateCode
			);
		else
			$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '', $templateCode);
	}

	// set records to read only if user can't insert new records and can't edit current record
	if(($selected_id && !$AllowUpdate) || (!$selected_id && !$AllowInsert)) {
		$jsReadOnly = '';
		$jsReadOnly .= "\tjQuery('#head_panel_beating_name').replaceWith('<div class=\"form-control-static\" id=\"head_panel_beating_name\">' + (jQuery('#head_panel_beating_name').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#head_panel_beating_contact_details').replaceWith('<div class=\"form-control-static\" id=\"head_panel_beating_contact_details\">' + (jQuery('#head_panel_beating_contact_details').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#head_panel_beating_signature').replaceWith('<div class=\"form-control-static\" id=\"head_panel_beating_signature\">' + (jQuery('#head_panel_beating_signature').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#panel_beating_quotation').replaceWith('<div class=\"form-control-static\" id=\"panel_beating_quotation\">' + (jQuery('#panel_beating_quotation').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#panel_beating_quotation_approved_by_service_provider').replaceWith('<div class=\"form-control-static\" id=\"panel_beating_quotation_approved_by_service_provider\">' + (jQuery('#panel_beating_quotation_approved_by_service_provider').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#panel_beating_quotation_approved_by_service_provider, #panel_beating_quotation_approved_by_service_provider-edit-link').hide();\n";
		$jsReadOnly .= "\tjQuery('#service_provider_name').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#service_provider_name_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#service_provider_type').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#service_provider_type_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#service_provider_contact_details').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#service_provider_contact_details_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#service_provider_address').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#service_provider_address_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#service_provider_branch').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#service_provider_branch_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#service_provider_branch_code').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#service_provider_branch_code_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#service_provider_signature').replaceWith('<div class=\"form-control-static\" id=\"service_provider_signature\">' + (jQuery('#service_provider_signature').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#instruction_note').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#instruction_note_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#vehicle_registration_number').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#vehicle_registration_number_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('input[name=vehicle_inspection_done]').parent().html('<div class=\"form-control-static\">' + jQuery('input[name=vehicle_inspection_done]:checked').next().text() + '</div>')\n";
		$jsReadOnly .= "\tjQuery('#vehicle_inspection_check_list_form').replaceWith('<div class=\"form-control-static\" id=\"vehicle_inspection_check_list_form\">' + (jQuery('#vehicle_inspection_check_list_form').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#vehicle_inspection_check_list_form, #vehicle_inspection_check_list_form-edit-link').hide();\n";
		$jsReadOnly .= "\tjQuery('#vehicle_tyre_sizes').replaceWith('<div class=\"form-control-static\" id=\"vehicle_tyre_sizes\">' + (jQuery('#vehicle_tyre_sizes').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#vehicle_mirrow_check').replaceWith('<div class=\"form-control-static\" id=\"vehicle_mirrow_check\">' + (jQuery('#vehicle_mirrow_check').val() || '') + '</div>'); jQuery('#vehicle_mirrow_check-multi-selection-help').hide();\n";
		$jsReadOnly .= "\tjQuery('#s2id_vehicle_mirrow_check').remove();\n";
		$jsReadOnly .= "\tjQuery('#merchant_type').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#merchant_type_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#merchant_code').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#merchant_code_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#merchant_name').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#merchant_name_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#merchant_contacts_details').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#merchant_contacts_details_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#merchant_email_address').replaceWith('<div class=\"form-control-static\" id=\"merchant_email_address\">' + (jQuery('#merchant_email_address').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#merchant_email_address, #merchant_email_address-edit-link').hide();\n";
		$jsReadOnly .= "\tjQuery('#merchant_signature').replaceWith('<div class=\"form-control-static\" id=\"merchant_signature\">' + (jQuery('#merchant_signature').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#merchant_address').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#merchant_address_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#merchant_address_code').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#merchant_address_code_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#merchant_city').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#merchant_city_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('input[name=head_panel_beating_monitor_progress]').parent().html('<div class=\"form-control-static\">' + jQuery('input[name=head_panel_beating_monitor_progress]:checked').next().text() + '</div>')\n";
		$jsReadOnly .= "\tjQuery('input[name=head_panel_beating_monitor_quality_of_work_manship]').parent().html('<div class=\"form-control-static\">' + jQuery('input[name=head_panel_beating_monitor_quality_of_work_manship]:checked').next().text() + '</div>')\n";
		$jsReadOnly .= "\tjQuery('#vehicle_inspection_report').replaceWith('<div class=\"form-control-static\" id=\"vehicle_inspection_report\">' + (jQuery('#vehicle_inspection_report').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#vehicle_inspection_report, #vehicle_inspection_report-edit-link').hide();\n";
		$jsReadOnly .= "\tjQuery('#upload_invoice').replaceWith('<div class=\"form-control-static\" id=\"upload_invoice\">' + (jQuery('#upload_invoice').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#upload_invoice, #upload_invoice-edit-link').hide();\n";
		$jsReadOnly .= "\tjQuery('.select2-container').hide();\n";

		$noUploads = true;
	} elseif(($AllowInsert && !$selected_id) || ($AllowUpdate && $selected_id)) {
		$jsEditable = "\tjQuery('form').eq(0).data('already_changed', true);"; // temporarily disable form change handler
		$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', false);"; // re-enable form change handler
	}

	// process combos
	$templateCode = str_replace('<%%COMBO(service_provider_name)%%>', $combo_service_provider_name->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(service_provider_name)%%>', $combo_service_provider_name->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(service_provider_name)%%>', urlencode($combo_service_provider_name->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(service_provider_type)%%>', $combo_service_provider_type->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(service_provider_type)%%>', $combo_service_provider_type->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(service_provider_type)%%>', urlencode($combo_service_provider_type->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(service_provider_contact_details)%%>', $combo_service_provider_contact_details->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(service_provider_contact_details)%%>', $combo_service_provider_contact_details->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(service_provider_contact_details)%%>', urlencode($combo_service_provider_contact_details->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(service_provider_address)%%>', $combo_service_provider_address->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(service_provider_address)%%>', $combo_service_provider_address->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(service_provider_address)%%>', urlencode($combo_service_provider_address->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(service_provider_branch)%%>', $combo_service_provider_branch->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(service_provider_branch)%%>', $combo_service_provider_branch->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(service_provider_branch)%%>', urlencode($combo_service_provider_branch->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(service_provider_branch_code)%%>', $combo_service_provider_branch_code->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(service_provider_branch_code)%%>', $combo_service_provider_branch_code->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(service_provider_branch_code)%%>', urlencode($combo_service_provider_branch_code->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(instruction_note)%%>', $combo_instruction_note->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(instruction_note)%%>', $combo_instruction_note->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(instruction_note)%%>', urlencode($combo_instruction_note->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(vehicle_registration_number)%%>', $combo_vehicle_registration_number->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(vehicle_registration_number)%%>', $combo_vehicle_registration_number->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(vehicle_registration_number)%%>', urlencode($combo_vehicle_registration_number->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(vehicle_inspection_done)%%>', $combo_vehicle_inspection_done->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(vehicle_inspection_done)%%>', $combo_vehicle_inspection_done->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(vehicle_mirrow_check)%%>', $combo_vehicle_mirrow_check->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(vehicle_mirrow_check)%%>', $combo_vehicle_mirrow_check->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(merchant_type)%%>', $combo_merchant_type->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(merchant_type)%%>', $combo_merchant_type->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(merchant_type)%%>', urlencode($combo_merchant_type->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(merchant_code)%%>', $combo_merchant_code->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(merchant_code)%%>', $combo_merchant_code->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(merchant_code)%%>', urlencode($combo_merchant_code->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(merchant_name)%%>', $combo_merchant_name->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(merchant_name)%%>', $combo_merchant_name->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(merchant_name)%%>', urlencode($combo_merchant_name->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(merchant_contacts_details)%%>', $combo_merchant_contacts_details->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(merchant_contacts_details)%%>', $combo_merchant_contacts_details->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(merchant_contacts_details)%%>', urlencode($combo_merchant_contacts_details->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(merchant_address)%%>', $combo_merchant_address->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(merchant_address)%%>', $combo_merchant_address->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(merchant_address)%%>', urlencode($combo_merchant_address->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(merchant_address_code)%%>', $combo_merchant_address_code->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(merchant_address_code)%%>', $combo_merchant_address_code->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(merchant_address_code)%%>', urlencode($combo_merchant_address_code->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(merchant_city)%%>', $combo_merchant_city->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(merchant_city)%%>', $combo_merchant_city->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(merchant_city)%%>', urlencode($combo_merchant_city->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(head_panel_beating_monitor_progress)%%>', $combo_head_panel_beating_monitor_progress->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(head_panel_beating_monitor_progress)%%>', $combo_head_panel_beating_monitor_progress->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(head_panel_beating_monitor_quality_of_work_manship)%%>', $combo_head_panel_beating_monitor_quality_of_work_manship->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(head_panel_beating_monitor_quality_of_work_manship)%%>', $combo_head_panel_beating_monitor_quality_of_work_manship->SelectedData, $templateCode);

	/* lookup fields array: 'lookup field name' => ['parent table name', 'lookup field caption'] */
	$lookup_fields = ['service_provider_name' => ['service_provider', 'Service Provider Name:'], 'service_provider_type' => ['service_provider', 'Service Provider Type:'], 'service_provider_contact_details' => ['service_provider', 'Service Provider Contact Details:'], 'service_provider_address' => ['service_provider', 'Service Provider Address:'], 'service_provider_branch' => ['service_provider', 'Service Provider Branch:'], 'service_provider_branch_code' => ['service_provider', 'Service Provider Branch Code:'], 'instruction_note' => ['claim', 'Instruction Note:'], 'vehicle_registration_number' => ['gmt_fleet_register', 'Registration Number:'], 'merchant_type' => ['merchant', 'Merchant Type:'], 'merchant_code' => ['merchant', 'Merchant Code:'], 'merchant_name' => ['merchant', 'Merchant Name:'], 'merchant_contacts_details' => ['merchant', 'Merchant Contacts Details:'], 'merchant_address' => ['merchant', 'Merchant Address:'], 'merchant_address_code' => ['merchant', 'Merchant Address Code:'], 'merchant_city' => ['merchant', 'Merchant City:'], ];
	foreach($lookup_fields as $luf => $ptfc) {
		$pt_perm = getTablePermissions($ptfc[0]);

		// process foreign key links
		if($pt_perm['view'] || $pt_perm['edit']) {
			$templateCode = str_replace("<%%PLINK({$luf})%%>", '<button type="button" class="btn btn-default view_parent" id="' . $ptfc[0] . '_view_parent" title="' . html_attr($Translation['View'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-eye-open"></i></button>', $templateCode);
		}

		// if user has insert permission to parent table of a lookup field, put an add new button
		if($pt_perm['insert'] /* && !Request::val('Embedded')*/) {
			$templateCode = str_replace("<%%ADDNEW({$ptfc[0]})%%>", '<button type="button" class="btn btn-default add_new_parent" id="' . $ptfc[0] . '_add_new" title="' . html_attr($Translation['Add New'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-plus text-success"></i></button>', $templateCode);
		}
	}

	// process images
	$templateCode = str_replace('<%%UPLOADFILE(external_repair_body_id)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(head_panel_beating_name)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(head_panel_beating_contact_details)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(head_panel_beating_address)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(head_panel_beating_signature)%%>', ($noUploads ? '' : "<div>{$Translation['upload image']}</div>" . '<i class="glyphicon glyphicon-remove text-danger clear-upload hidden"></i> <input type="file" name="head_panel_beating_signature" id="head_panel_beating_signature" data-filetypes="jpg|jpeg|gif|png|webp" data-maxsize="512000" accept=".jpg,.jpeg,.gif,.png,.webp">'), $templateCode);
	if($AllowUpdate && $row['head_panel_beating_signature'] != '') {
		$templateCode = str_replace('<%%REMOVEFILE(head_panel_beating_signature)%%>', '<br><input type="checkbox" name="head_panel_beating_signature_remove" id="head_panel_beating_signature_remove" value="1"> <label for="head_panel_beating_signature_remove" style="color: red; font-weight: bold;">'.$Translation['remove image'].'</label>', $templateCode);
	} else {
		$templateCode = str_replace('<%%REMOVEFILE(head_panel_beating_signature)%%>', '', $templateCode);
	}
	$templateCode = str_replace('<%%UPLOADFILE(panel_beating_quotation)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(panel_beating_quotation_approved_by_service_provider)%%>', ($noUploads ? '' : "<div>{$Translation['upload image']}</div>" . '<i class="glyphicon glyphicon-remove text-danger clear-upload hidden"></i> <input type="file" name="panel_beating_quotation_approved_by_service_provider" id="panel_beating_quotation_approved_by_service_provider" data-filetypes="txt|doc|docx|docm|odt|pdf|rtf" data-maxsize="5242880" accept=".txt,.doc,.docx,.docm,.odt,.pdf,.rtf">'), $templateCode);
	if($AllowUpdate && $row['panel_beating_quotation_approved_by_service_provider'] != '') {
		$templateCode = str_replace('<%%REMOVEFILE(panel_beating_quotation_approved_by_service_provider)%%>', '<br><input type="checkbox" name="panel_beating_quotation_approved_by_service_provider_remove" id="panel_beating_quotation_approved_by_service_provider_remove" value="1"> <label for="panel_beating_quotation_approved_by_service_provider_remove" style="color: red; font-weight: bold;">'.$Translation['remove image'].'</label>', $templateCode);
	} else {
		$templateCode = str_replace('<%%REMOVEFILE(panel_beating_quotation_approved_by_service_provider)%%>', '', $templateCode);
	}
	$templateCode = str_replace('<%%UPLOADFILE(service_provider_name)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(service_provider_type)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(service_provider_contact_details)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(service_provider_address)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(service_provider_branch)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(service_provider_branch_code)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(service_provider_signature)%%>', ($noUploads ? '' : "<div>{$Translation['upload image']}</div>" . '<i class="glyphicon glyphicon-remove text-danger clear-upload hidden"></i> <input type="file" name="service_provider_signature" id="service_provider_signature" data-filetypes="jpg|jpeg|gif|png|webp" data-maxsize="512000" accept=".jpg,.jpeg,.gif,.png,.webp">'), $templateCode);
	if($AllowUpdate && $row['service_provider_signature'] != '') {
		$templateCode = str_replace('<%%REMOVEFILE(service_provider_signature)%%>', '<br><input type="checkbox" name="service_provider_signature_remove" id="service_provider_signature_remove" value="1"> <label for="service_provider_signature_remove" style="color: red; font-weight: bold;">'.$Translation['remove image'].'</label>', $templateCode);
	} else {
		$templateCode = str_replace('<%%REMOVEFILE(service_provider_signature)%%>', '', $templateCode);
	}
	$templateCode = str_replace('<%%UPLOADFILE(instruction_note)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(vehicle_registration_number)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(vehicle_inspection_done)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(vehicle_inspection_check_list_form)%%>', ($noUploads ? '' : "<div>{$Translation['upload image']}</div>" . '<i class="glyphicon glyphicon-remove text-danger clear-upload hidden"></i> <input type="file" name="vehicle_inspection_check_list_form" id="vehicle_inspection_check_list_form" data-filetypes="txt|doc|docx|docm|odt|pdf|rtf" data-maxsize="102400" accept=".txt,.doc,.docx,.docm,.odt,.pdf,.rtf">'), $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(vehicle_tyre_sizes)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(vehicle_mirrow_check)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(vehicle_interior_condition)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(vehicle_exterior_condition)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(merchant_type)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(merchant_code)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(merchant_name)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(merchant_contacts_details)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(merchant_email_address)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(merchant_signature)%%>', ($noUploads ? '' : "<div>{$Translation['upload image']}</div>" . '<i class="glyphicon glyphicon-remove text-danger clear-upload hidden"></i> <input type="file" name="merchant_signature" id="merchant_signature" data-filetypes="jpg|jpeg|gif|png|webp" data-maxsize="512000" accept=".jpg,.jpeg,.gif,.png,.webp">'), $templateCode);
	if($AllowUpdate && $row['merchant_signature'] != '') {
		$templateCode = str_replace('<%%REMOVEFILE(merchant_signature)%%>', '<br><input type="checkbox" name="merchant_signature_remove" id="merchant_signature_remove" value="1"> <label for="merchant_signature_remove" style="color: red; font-weight: bold;">'.$Translation['remove image'].'</label>', $templateCode);
	} else {
		$templateCode = str_replace('<%%REMOVEFILE(merchant_signature)%%>', '', $templateCode);
	}
	$templateCode = str_replace('<%%UPLOADFILE(merchant_address)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(merchant_address_code)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(merchant_city)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(head_panel_beating_monitor_progress)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(head_panel_beating_monitor_quality_of_work_manship)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(vehicle_inspection_report)%%>', ($noUploads ? '' : "<div>{$Translation['upload image']}</div>" . '<i class="glyphicon glyphicon-remove text-danger clear-upload hidden"></i> <input type="file" name="vehicle_inspection_report" id="vehicle_inspection_report" data-filetypes="txt|doc|docx|docm|odt|pdf|rtf" data-maxsize="5160960" accept=".txt,.doc,.docx,.docm,.odt,.pdf,.rtf">'), $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(upload_invoice)%%>', ($noUploads ? '' : "<div>{$Translation['upload image']}</div>" . '<i class="glyphicon glyphicon-remove text-danger clear-upload hidden"></i> <input type="file" name="upload_invoice" id="upload_invoice" data-filetypes="txt|doc|docx|docm|odt|pdf|rtf" data-maxsize="5365760" accept=".txt,.doc,.docx,.docm,.odt,.pdf,.rtf">'), $templateCode);
	if($AllowUpdate && $row['upload_invoice'] != '') {
		$templateCode = str_replace('<%%REMOVEFILE(upload_invoice)%%>', '<br><input type="checkbox" name="upload_invoice_remove" id="upload_invoice_remove" value="1"> <label for="upload_invoice_remove" style="color: red; font-weight: bold;">'.$Translation['remove image'].'</label>', $templateCode);
	} else {
		$templateCode = str_replace('<%%REMOVEFILE(upload_invoice)%%>', '', $templateCode);
	}

	// process values
	if($selected_id) {
		if( $dvprint) $templateCode = str_replace('<%%VALUE(external_repair_body_id)%%>', safe_html($urow['external_repair_body_id']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(external_repair_body_id)%%>', html_attr($row['external_repair_body_id']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(external_repair_body_id)%%>', urlencode($urow['external_repair_body_id']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(head_panel_beating_name)%%>', safe_html($urow['head_panel_beating_name']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(head_panel_beating_name)%%>', html_attr($row['head_panel_beating_name']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(head_panel_beating_name)%%>', urlencode($urow['head_panel_beating_name']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(head_panel_beating_contact_details)%%>', safe_html($urow['head_panel_beating_contact_details']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(head_panel_beating_contact_details)%%>', html_attr($row['head_panel_beating_contact_details']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(head_panel_beating_contact_details)%%>', urlencode($urow['head_panel_beating_contact_details']), $templateCode);
		if($AllowUpdate || $AllowInsert) {
			$templateCode = str_replace('<%%HTMLAREA(head_panel_beating_address)%%>', '<textarea name="head_panel_beating_address" id="head_panel_beating_address" rows="5">' . safe_html(htmlspecialchars_decode($row['head_panel_beating_address'])) . '</textarea>', $templateCode);
		} else {
			$templateCode = str_replace('<%%HTMLAREA(head_panel_beating_address)%%>', '<div id="head_panel_beating_address" class="form-control-static">' . $row['head_panel_beating_address'] . '</div>', $templateCode);
		}
		$templateCode = str_replace('<%%VALUE(head_panel_beating_address)%%>', nl2br($row['head_panel_beating_address']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(head_panel_beating_address)%%>', urlencode($urow['head_panel_beating_address']), $templateCode);
		$row['head_panel_beating_signature'] = ($row['head_panel_beating_signature'] != '' ? $row['head_panel_beating_signature'] : 'blank.gif');
		if( $dvprint) $templateCode = str_replace('<%%VALUE(head_panel_beating_signature)%%>', safe_html($urow['head_panel_beating_signature']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(head_panel_beating_signature)%%>', html_attr($row['head_panel_beating_signature']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(head_panel_beating_signature)%%>', urlencode($urow['head_panel_beating_signature']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(panel_beating_quotation)%%>', safe_html($urow['panel_beating_quotation']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(panel_beating_quotation)%%>', html_attr($row['panel_beating_quotation']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(panel_beating_quotation)%%>', urlencode($urow['panel_beating_quotation']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(panel_beating_quotation_approved_by_service_provider)%%>', safe_html($urow['panel_beating_quotation_approved_by_service_provider']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(panel_beating_quotation_approved_by_service_provider)%%>', html_attr($row['panel_beating_quotation_approved_by_service_provider']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(panel_beating_quotation_approved_by_service_provider)%%>', urlencode($urow['panel_beating_quotation_approved_by_service_provider']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(service_provider_name)%%>', safe_html($urow['service_provider_name']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(service_provider_name)%%>', html_attr($row['service_provider_name']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(service_provider_name)%%>', urlencode($urow['service_provider_name']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(service_provider_type)%%>', safe_html($urow['service_provider_type']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(service_provider_type)%%>', html_attr($row['service_provider_type']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(service_provider_type)%%>', urlencode($urow['service_provider_type']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(service_provider_contact_details)%%>', safe_html($urow['service_provider_contact_details']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(service_provider_contact_details)%%>', html_attr($row['service_provider_contact_details']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(service_provider_contact_details)%%>', urlencode($urow['service_provider_contact_details']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(service_provider_address)%%>', safe_html($urow['service_provider_address']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(service_provider_address)%%>', html_attr($row['service_provider_address']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(service_provider_address)%%>', urlencode($urow['service_provider_address']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(service_provider_branch)%%>', safe_html($urow['service_provider_branch']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(service_provider_branch)%%>', html_attr($row['service_provider_branch']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(service_provider_branch)%%>', urlencode($urow['service_provider_branch']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(service_provider_branch_code)%%>', safe_html($urow['service_provider_branch_code']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(service_provider_branch_code)%%>', html_attr($row['service_provider_branch_code']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(service_provider_branch_code)%%>', urlencode($urow['service_provider_branch_code']), $templateCode);
		$row['service_provider_signature'] = ($row['service_provider_signature'] != '' ? $row['service_provider_signature'] : 'blank.gif');
		if( $dvprint) $templateCode = str_replace('<%%VALUE(service_provider_signature)%%>', safe_html($urow['service_provider_signature']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(service_provider_signature)%%>', html_attr($row['service_provider_signature']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(service_provider_signature)%%>', urlencode($urow['service_provider_signature']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(instruction_note)%%>', safe_html($urow['instruction_note']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(instruction_note)%%>', html_attr($row['instruction_note']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(instruction_note)%%>', urlencode($urow['instruction_note']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(vehicle_registration_number)%%>', safe_html($urow['vehicle_registration_number']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(vehicle_registration_number)%%>', html_attr($row['vehicle_registration_number']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(vehicle_registration_number)%%>', urlencode($urow['vehicle_registration_number']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(vehicle_inspection_done)%%>', safe_html($urow['vehicle_inspection_done']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(vehicle_inspection_done)%%>', html_attr($row['vehicle_inspection_done']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(vehicle_inspection_done)%%>', urlencode($urow['vehicle_inspection_done']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(vehicle_inspection_check_list_form)%%>', safe_html($urow['vehicle_inspection_check_list_form']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(vehicle_inspection_check_list_form)%%>', html_attr($row['vehicle_inspection_check_list_form']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(vehicle_inspection_check_list_form)%%>', urlencode($urow['vehicle_inspection_check_list_form']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(vehicle_tyre_sizes)%%>', safe_html($urow['vehicle_tyre_sizes']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(vehicle_tyre_sizes)%%>', html_attr($row['vehicle_tyre_sizes']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(vehicle_tyre_sizes)%%>', urlencode($urow['vehicle_tyre_sizes']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(vehicle_mirrow_check)%%>', safe_html($urow['vehicle_mirrow_check']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(vehicle_mirrow_check)%%>', html_attr($row['vehicle_mirrow_check']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(vehicle_mirrow_check)%%>', urlencode($urow['vehicle_mirrow_check']), $templateCode);
		if($AllowUpdate || $AllowInsert) {
			$templateCode = str_replace('<%%HTMLAREA(vehicle_interior_condition)%%>', '<textarea name="vehicle_interior_condition" id="vehicle_interior_condition" rows="5">' . safe_html(htmlspecialchars_decode($row['vehicle_interior_condition'])) . '</textarea>', $templateCode);
		} else {
			$templateCode = str_replace('<%%HTMLAREA(vehicle_interior_condition)%%>', '<div id="vehicle_interior_condition" class="form-control-static">' . $row['vehicle_interior_condition'] . '</div>', $templateCode);
		}
		$templateCode = str_replace('<%%VALUE(vehicle_interior_condition)%%>', nl2br($row['vehicle_interior_condition']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(vehicle_interior_condition)%%>', urlencode($urow['vehicle_interior_condition']), $templateCode);
		if($AllowUpdate || $AllowInsert) {
			$templateCode = str_replace('<%%HTMLAREA(vehicle_exterior_condition)%%>', '<textarea name="vehicle_exterior_condition" id="vehicle_exterior_condition" rows="5">' . safe_html(htmlspecialchars_decode($row['vehicle_exterior_condition'])) . '</textarea>', $templateCode);
		} else {
			$templateCode = str_replace('<%%HTMLAREA(vehicle_exterior_condition)%%>', '<div id="vehicle_exterior_condition" class="form-control-static">' . $row['vehicle_exterior_condition'] . '</div>', $templateCode);
		}
		$templateCode = str_replace('<%%VALUE(vehicle_exterior_condition)%%>', nl2br($row['vehicle_exterior_condition']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(vehicle_exterior_condition)%%>', urlencode($urow['vehicle_exterior_condition']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(merchant_type)%%>', safe_html($urow['merchant_type']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(merchant_type)%%>', html_attr($row['merchant_type']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(merchant_type)%%>', urlencode($urow['merchant_type']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(merchant_code)%%>', safe_html($urow['merchant_code']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(merchant_code)%%>', html_attr($row['merchant_code']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(merchant_code)%%>', urlencode($urow['merchant_code']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(merchant_name)%%>', safe_html($urow['merchant_name']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(merchant_name)%%>', html_attr($row['merchant_name']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(merchant_name)%%>', urlencode($urow['merchant_name']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(merchant_contacts_details)%%>', safe_html($urow['merchant_contacts_details']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(merchant_contacts_details)%%>', html_attr($row['merchant_contacts_details']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(merchant_contacts_details)%%>', urlencode($urow['merchant_contacts_details']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(merchant_email_address)%%>', safe_html($urow['merchant_email_address']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(merchant_email_address)%%>', html_attr($row['merchant_email_address']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(merchant_email_address)%%>', urlencode($urow['merchant_email_address']), $templateCode);
		$row['merchant_signature'] = ($row['merchant_signature'] != '' ? $row['merchant_signature'] : 'blank.gif');
		if( $dvprint) $templateCode = str_replace('<%%VALUE(merchant_signature)%%>', safe_html($urow['merchant_signature']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(merchant_signature)%%>', html_attr($row['merchant_signature']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(merchant_signature)%%>', urlencode($urow['merchant_signature']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(merchant_address)%%>', safe_html($urow['merchant_address']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(merchant_address)%%>', html_attr($row['merchant_address']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(merchant_address)%%>', urlencode($urow['merchant_address']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(merchant_address_code)%%>', safe_html($urow['merchant_address_code']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(merchant_address_code)%%>', html_attr($row['merchant_address_code']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(merchant_address_code)%%>', urlencode($urow['merchant_address_code']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(merchant_city)%%>', safe_html($urow['merchant_city']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(merchant_city)%%>', html_attr($row['merchant_city']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(merchant_city)%%>', urlencode($urow['merchant_city']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(head_panel_beating_monitor_progress)%%>', safe_html($urow['head_panel_beating_monitor_progress']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(head_panel_beating_monitor_progress)%%>', html_attr($row['head_panel_beating_monitor_progress']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(head_panel_beating_monitor_progress)%%>', urlencode($urow['head_panel_beating_monitor_progress']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(head_panel_beating_monitor_quality_of_work_manship)%%>', safe_html($urow['head_panel_beating_monitor_quality_of_work_manship']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(head_panel_beating_monitor_quality_of_work_manship)%%>', html_attr($row['head_panel_beating_monitor_quality_of_work_manship']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(head_panel_beating_monitor_quality_of_work_manship)%%>', urlencode($urow['head_panel_beating_monitor_quality_of_work_manship']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(vehicle_inspection_report)%%>', safe_html($urow['vehicle_inspection_report']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(vehicle_inspection_report)%%>', html_attr($row['vehicle_inspection_report']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(vehicle_inspection_report)%%>', urlencode($urow['vehicle_inspection_report']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(upload_invoice)%%>', safe_html($urow['upload_invoice']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(upload_invoice)%%>', html_attr($row['upload_invoice']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(upload_invoice)%%>', urlencode($urow['upload_invoice']), $templateCode);
	} else {
		$templateCode = str_replace('<%%VALUE(external_repair_body_id)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(external_repair_body_id)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(head_panel_beating_name)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(head_panel_beating_name)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(head_panel_beating_contact_details)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(head_panel_beating_contact_details)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%HTMLAREA(head_panel_beating_address)%%>', '<textarea name="head_panel_beating_address" id="head_panel_beating_address" rows="5"></textarea>', $templateCode);
		$templateCode = str_replace('<%%VALUE(head_panel_beating_signature)%%>', 'blank.gif', $templateCode);
		$templateCode = str_replace('<%%VALUE(panel_beating_quotation)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(panel_beating_quotation)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(panel_beating_quotation_approved_by_service_provider)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(panel_beating_quotation_approved_by_service_provider)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(service_provider_name)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(service_provider_name)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(service_provider_type)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(service_provider_type)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(service_provider_contact_details)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(service_provider_contact_details)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(service_provider_address)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(service_provider_address)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(service_provider_branch)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(service_provider_branch)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(service_provider_branch_code)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(service_provider_branch_code)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(service_provider_signature)%%>', 'blank.gif', $templateCode);
		$templateCode = str_replace('<%%VALUE(instruction_note)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(instruction_note)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(vehicle_registration_number)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(vehicle_registration_number)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(vehicle_inspection_done)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(vehicle_inspection_done)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(vehicle_inspection_check_list_form)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(vehicle_inspection_check_list_form)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(vehicle_tyre_sizes)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(vehicle_tyre_sizes)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(vehicle_mirrow_check)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(vehicle_mirrow_check)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%HTMLAREA(vehicle_interior_condition)%%>', '<textarea name="vehicle_interior_condition" id="vehicle_interior_condition" rows="5"></textarea>', $templateCode);
		$templateCode = str_replace('<%%HTMLAREA(vehicle_exterior_condition)%%>', '<textarea name="vehicle_exterior_condition" id="vehicle_exterior_condition" rows="5"></textarea>', $templateCode);
		$templateCode = str_replace('<%%VALUE(merchant_type)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(merchant_type)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(merchant_code)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(merchant_code)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(merchant_name)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(merchant_name)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(merchant_contacts_details)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(merchant_contacts_details)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(merchant_email_address)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(merchant_email_address)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(merchant_signature)%%>', 'blank.gif', $templateCode);
		$templateCode = str_replace('<%%VALUE(merchant_address)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(merchant_address)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(merchant_address_code)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(merchant_address_code)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(merchant_city)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(merchant_city)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(head_panel_beating_monitor_progress)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(head_panel_beating_monitor_progress)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(head_panel_beating_monitor_quality_of_work_manship)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(head_panel_beating_monitor_quality_of_work_manship)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(vehicle_inspection_report)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(vehicle_inspection_report)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(upload_invoice)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(upload_invoice)%%>', urlencode(''), $templateCode);
	}

	// process translations
	$templateCode = parseTemplate($templateCode);

	// clear scrap
	$templateCode = str_replace('<%%', '<!-- ', $templateCode);
	$templateCode = str_replace('%%>', ' -->', $templateCode);

	// hide links to inaccessible tables
	if(Request::val('dvprint_x') == '') {
		$templateCode .= "\n\n<script>\$j(function() {\n";
		$arrTables = getTableList();
		foreach($arrTables as $name => $caption) {
			$templateCode .= "\t\$j('#{$name}_link').removeClass('hidden');\n";
			$templateCode .= "\t\$j('#xs_{$name}_link').removeClass('hidden');\n";
		}

		$templateCode .= $jsReadOnly;
		$templateCode .= $jsEditable;

		if(!$selected_id) {
			$templateCode.="\n\tif(document.getElementById('panel_beating_quotation_approved_by_service_providerEdit')) { document.getElementById('panel_beating_quotation_approved_by_service_providerEdit').style.display='inline'; }";
			$templateCode.="\n\tif(document.getElementById('panel_beating_quotation_approved_by_service_providerEditLink')) { document.getElementById('panel_beating_quotation_approved_by_service_providerEditLink').style.display='none'; }";
			$templateCode.="\n\tif(document.getElementById('vehicle_inspection_check_list_formEdit')) { document.getElementById('vehicle_inspection_check_list_formEdit').style.display='inline'; }";
			$templateCode.="\n\tif(document.getElementById('vehicle_inspection_check_list_formEditLink')) { document.getElementById('vehicle_inspection_check_list_formEditLink').style.display='none'; }";
			$templateCode.="\n\tif(document.getElementById('merchant_email_addressEdit')) { document.getElementById('merchant_email_addressEdit').style.display='inline'; }";
			$templateCode.="\n\tif(document.getElementById('merchant_email_addressEditLink')) { document.getElementById('merchant_email_addressEditLink').style.display='none'; }";
			$templateCode.="\n\tif(document.getElementById('vehicle_inspection_reportEdit')) { document.getElementById('vehicle_inspection_reportEdit').style.display='inline'; }";
			$templateCode.="\n\tif(document.getElementById('vehicle_inspection_reportEditLink')) { document.getElementById('vehicle_inspection_reportEditLink').style.display='none'; }";
			$templateCode.="\n\tif(document.getElementById('upload_invoiceEdit')) { document.getElementById('upload_invoiceEdit').style.display='inline'; }";
			$templateCode.="\n\tif(document.getElementById('upload_invoiceEditLink')) { document.getElementById('upload_invoiceEditLink').style.display='none'; }";
		}

		$templateCode.="\n});</script>\n";
	}

	// ajaxed auto-fill fields
	$templateCode .= '<script>';
	$templateCode .= '$j(function() {';

	$templateCode .= "\tinstruction_note_update_autofills$rnd1 = function() {\n";
	$templateCode .= "\t\t\$j.ajax({\n";
	if($dvprint) {
		$templateCode .= "\t\t\turl: 'external_repairs_body_autofill.php?rnd1=$rnd1&mfk=instruction_note&id=' + encodeURIComponent('".addslashes($row['instruction_note'])."'),\n";
		$templateCode .= "\t\t\tcontentType: 'application/x-www-form-urlencoded; charset=" . datalist_db_encoding . "',\n";
		$templateCode .= "\t\t\ttype: 'GET'\n";
	} else {
		$templateCode .= "\t\t\turl: 'external_repairs_body_autofill.php?rnd1=$rnd1&mfk=instruction_note&id=' + encodeURIComponent(AppGini.current_instruction_note{$rnd1}.value),\n";
		$templateCode .= "\t\t\tcontentType: 'application/x-www-form-urlencoded; charset=" . datalist_db_encoding . "',\n";
		$templateCode .= "\t\t\ttype: 'GET',\n";
		$templateCode .= "\t\t\tbeforeSend: function() { \$j('#instruction_note$rnd1').prop('disabled', true); },\n";
		$templateCode .= "\t\t\tcomplete: function() { " . (($arrPerm['insert'] || (($arrPerm['edit'] == 1 && $ownerMemberID == getLoggedMemberID()) || ($arrPerm['edit'] == 2 && $ownerGroupID == getLoggedGroupID()) || $arrPerm['edit'] == 3)) ? "\$j('#instruction_note$rnd1').prop('disabled', false); " : "\$j('#instruction_note$rnd1').prop('disabled', true); ")." \$j(window).resize(); }\n";
	}
	$templateCode .= "\t\t});\n";
	$templateCode .= "\t};\n";
	if(!$dvprint) $templateCode .= "\tif(\$j('#instruction_note_caption').length) \$j('#instruction_note_caption').click(function() { instruction_note_update_autofills$rnd1(); });\n";

	$templateCode .= "\tvehicle_registration_number_update_autofills$rnd1 = function() {\n";
	$templateCode .= "\t\t\$j.ajax({\n";
	if($dvprint) {
		$templateCode .= "\t\t\turl: 'external_repairs_body_autofill.php?rnd1=$rnd1&mfk=vehicle_registration_number&id=' + encodeURIComponent('".addslashes($row['vehicle_registration_number'])."'),\n";
		$templateCode .= "\t\t\tcontentType: 'application/x-www-form-urlencoded; charset=" . datalist_db_encoding . "',\n";
		$templateCode .= "\t\t\ttype: 'GET'\n";
	} else {
		$templateCode .= "\t\t\turl: 'external_repairs_body_autofill.php?rnd1=$rnd1&mfk=vehicle_registration_number&id=' + encodeURIComponent(AppGini.current_vehicle_registration_number{$rnd1}.value),\n";
		$templateCode .= "\t\t\tcontentType: 'application/x-www-form-urlencoded; charset=" . datalist_db_encoding . "',\n";
		$templateCode .= "\t\t\ttype: 'GET',\n";
		$templateCode .= "\t\t\tbeforeSend: function() { \$j('#vehicle_registration_number$rnd1').prop('disabled', true); },\n";
		$templateCode .= "\t\t\tcomplete: function() { " . (($arrPerm['insert'] || (($arrPerm['edit'] == 1 && $ownerMemberID == getLoggedMemberID()) || ($arrPerm['edit'] == 2 && $ownerGroupID == getLoggedGroupID()) || $arrPerm['edit'] == 3)) ? "\$j('#vehicle_registration_number$rnd1').prop('disabled', false); " : "\$j('#vehicle_registration_number$rnd1').prop('disabled', true); ")." \$j(window).resize(); }\n";
	}
	$templateCode .= "\t\t});\n";
	$templateCode .= "\t};\n";
	if(!$dvprint) $templateCode .= "\tif(\$j('#vehicle_registration_number_caption').length) \$j('#vehicle_registration_number_caption').click(function() { vehicle_registration_number_update_autofills$rnd1(); });\n";


	$templateCode.="});";
	$templateCode.="</script>";
	$templateCode .= $lookups;

	// handle enforced parent values for read-only lookup fields
	$filterField = Request::val('FilterField');
	$filterOperator = Request::val('FilterOperator');
	$filterValue = Request::val('FilterValue');

	// don't include blank images in lightbox gallery
	$templateCode = preg_replace('/blank.gif" data-lightbox=".*?"/', 'blank.gif"', $templateCode);

	// don't display empty email links
	$templateCode=preg_replace('/<a .*?href="mailto:".*?<\/a>/', '', $templateCode);

	/* default field values */
	$rdata = $jdata = get_defaults('external_repairs_body');
	if($selected_id) {
		$jdata = get_joined_record('external_repairs_body', $selected_id);
		if($jdata === false) $jdata = get_defaults('external_repairs_body');
		$rdata = $row;
	}
	$templateCode .= loadView('external_repairs_body-ajax-cache', ['rdata' => $rdata, 'jdata' => $jdata]);

	// hook: external_repairs_body_dv
	if(function_exists('external_repairs_body_dv')) {
		$args = [];
		external_repairs_body_dv(($selected_id ? $selected_id : FALSE), getMemberInfo(), $templateCode, $args);
	}

	return $templateCode;
}