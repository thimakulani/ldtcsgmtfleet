<?php

// Data functions (insert, update, delete, form) for table service

// This script and data application were generated by AppGini 22.13
// Download AppGini for free from https://bigprof.com/appgini/download/

function service_insert(&$error_message = '') {
	global $Translation;

	// mm: can member insert record?
	$arrPerm = getTablePermissions('service');
	if(!$arrPerm['insert']) return false;

	$data = [
		'breakdown_of_vehicle' => Request::val('breakdown_of_vehicle', ''),
		'service_title' => Request::val('service_title', ''),
		'service_item_type' => Request::lookup('service_item_type', ''),
		'service_category' => Request::lookup('service_category', ''),
		'merchant_name' => Request::lookup('merchant_name', ''),
		'vehicle_registration_number' => Request::lookup('vehicle_registration_number', ''),
		'engine_number' => Request::lookup('vehicle_registration_number'),
		'chassis_number' => Request::lookup('vehicle_registration_number'),
		'dealer_name' => Request::lookup('dealer_name', ''),
		'make_of_vehicle' => Request::lookup('dealer_name'),
		'model_of_vehicle' => Request::lookup('vehicle_registration_number'),
		'year_model_of_vehicle' => Request::lookup('vehicle_registration_number'),
		'type_of_vehicle' => Request::lookup('vehicle_registration_number'),
		'closing_km' => Request::lookup('closing_km', ''),
		'application_status' => Request::lookup('vehicle_registration_number'),
		'work_allocation_reference_number' => Request::lookup('work_allocation_reference_number', ''),
		'barcode_number' => Request::lookup('vehicle_registration_number'),
		'department' => Request::lookup('vehicle_registration_number'),
		'service_item' => Request::multipleChoice('service_item', ''),
		'date_of_service' => Request::lookup('date_of_service', ''),
		'time' => Request::lookup('date_of_service'),
		'upload_quotation' => Request::fileUpload('upload_quotation', [
			'maxSize' => 5242880,
			'types' => 'txt|doc|docx|docm|odt|pdf|rtf',
			'noRename' => true,
			'dir' => '',
			'success' => function($name, $selected_id) {
			},
			'failure' => function($selected_id, $fileRemoved) {
				if(!strlen(Request::val('SelectedID'))) return '';

				/* for empty upload fields, when saving a copy of an existing record, copy the original upload field */
				return existing_value('service', 'upload_quotation', Request::val('SelectedID'));
			},
		]),
		'date_of_next_service' => Request::dateComponents('date_of_next_service', ''),
		'repeat_service_schedule_every_km' => Request::multipleChoice('repeat_service_schedule_every_km', ''),
		'comments' => Request::val('comments', ''),
		'upload_invoice' => Request::fileUpload('upload_invoice', [
			'maxSize' => 5242880,
			'types' => 'txt|doc|docx|docm|odt|pdf|rtf',
			'noRename' => true,
			'dir' => '',
			'success' => function($name, $selected_id) {
			},
			'failure' => function($selected_id, $fileRemoved) {
				if(!strlen(Request::val('SelectedID'))) return '';

				/* for empty upload fields, when saving a copy of an existing record, copy the original upload field */
				return existing_value('service', 'upload_invoice', Request::val('SelectedID'));
			},
		]),
		'receptionist' => Request::lookup('receptionist', ''),
		'receptionist_contact_email' => Request::lookup('receptionist'),
		'workshop_name' => Request::lookup('receptionist'),
		'workshop_address' => Request::val('workshop_address', ''),
		'technician' => Request::val('technician', ''),
		'work_order_status' => Request::val('work_order_status', ''),
		'job_card_number' => Request::lookup('receptionist'),
		'completion_date' => Request::dateComponents('completion_date', '1'),
		'due_date' => Request::dateComponents('due_date', '1'),
		'filed' => parseCode('<%%creationDateTime%%>', true, true),
	];


	// hook: service_before_insert
	if(function_exists('service_before_insert')) {
		$args = [];
		if(!service_before_insert($data, getMemberInfo(), $args)) {
			if(isset($args['error_message'])) $error_message = $args['error_message'];
			return false;
		}
	}

	$error = '';
	// set empty fields to NULL
	$data = array_map(function($v) { return ($v === '' ? NULL : $v); }, $data);
	insert('service', backtick_keys_once($data), $error);
	if($error) {
		$error_message = $error;
		return false;
	}

	$recID = db_insert_id(db_link());

	update_calc_fields('service', $recID, calculated_fields()['service']);

	// hook: service_after_insert
	if(function_exists('service_after_insert')) {
		$res = sql("SELECT * FROM `service` WHERE `service_id`='" . makeSafe($recID, false) . "' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)) {
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = makeSafe($recID, false);
		$args = [];
		if(!service_after_insert($data, getMemberInfo(), $args)) { return $recID; }
	}

	// mm: save ownership data
	set_record_owner('service', $recID, getLoggedMemberID());

	// if this record is a copy of another record, copy children if applicable
	if(strlen(Request::val('SelectedID'))) service_copy_children($recID, Request::val('SelectedID'));

	return $recID;
}

function service_copy_children($destination_id, $source_id) {
	global $Translation;
	$requests = []; // array of curl handlers for launching insert requests
	$eo = ['silentErrors' => true];
	$safe_sid = makeSafe($source_id);

	// launch requests, asynchronously
	curl_batch($requests);
}

function service_delete($selected_id, $AllowDeleteOfParents = false, $skipChecks = false) {
	// insure referential integrity ...
	global $Translation;
	$selected_id = makeSafe($selected_id);

	// mm: can member delete record?
	if(!check_record_permission('service', $selected_id, 'delete')) {
		return $Translation['You don\'t have enough permissions to delete this record'];
	}

	// hook: service_before_delete
	if(function_exists('service_before_delete')) {
		$args = [];
		if(!service_before_delete($selected_id, $skipChecks, getMemberInfo(), $args))
			return $Translation['Couldn\'t delete this record'] . (
				!empty($args['error_message']) ?
					'<div class="text-bold">' . strip_tags($args['error_message']) . '</div>'
					: '' 
			);
	}

	// child table: vehicle_history
	$res = sql("SELECT `service_id` FROM `service` WHERE `service_id`='{$selected_id}'", $eo);
	$service_id = db_fetch_row($res);
	$rires = sql("SELECT COUNT(1) FROM `vehicle_history` WHERE `date_of_service`='" . makeSafe($service_id[0]) . "'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'vehicle_history', $RetMsg);
		return $RetMsg;
	} elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation['confirm delete'];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'vehicle_history', $RetMsg);
		$RetMsg = str_replace('<Delete>', '<input type="button" class="btn btn-danger" value="' . html_attr($Translation['yes']) . '" onClick="window.location = \'service_view.php?SelectedID=' . urlencode($selected_id) . '&delete_x=1&confirmed=1&csrf_token=' . urlencode(csrf_token(false, true)) . '\';">', $RetMsg);
		$RetMsg = str_replace('<Cancel>', '<input type="button" class="btn btn-success" value="' . html_attr($Translation[ 'no']) . '" onClick="window.location = \'service_view.php?SelectedID=' . urlencode($selected_id) . '\';">', $RetMsg);
		return $RetMsg;
	}

	// child table: service_records
	$res = sql("SELECT `service_id` FROM `service` WHERE `service_id`='{$selected_id}'", $eo);
	$service_id = db_fetch_row($res);
	$rires = sql("SELECT COUNT(1) FROM `service_records` WHERE `vehicle`='" . makeSafe($service_id[0]) . "'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'service_records', $RetMsg);
		return $RetMsg;
	} elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation['confirm delete'];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'service_records', $RetMsg);
		$RetMsg = str_replace('<Delete>', '<input type="button" class="btn btn-danger" value="' . html_attr($Translation['yes']) . '" onClick="window.location = \'service_view.php?SelectedID=' . urlencode($selected_id) . '&delete_x=1&confirmed=1&csrf_token=' . urlencode(csrf_token(false, true)) . '\';">', $RetMsg);
		$RetMsg = str_replace('<Cancel>', '<input type="button" class="btn btn-success" value="' . html_attr($Translation[ 'no']) . '" onClick="window.location = \'service_view.php?SelectedID=' . urlencode($selected_id) . '\';">', $RetMsg);
		return $RetMsg;
	}

	// child table: purchase_orders
	$res = sql("SELECT `service_id` FROM `service` WHERE `service_id`='{$selected_id}'", $eo);
	$service_id = db_fetch_row($res);
	$rires = sql("SELECT COUNT(1) FROM `purchase_orders` WHERE `workshop_name`='" . makeSafe($service_id[0]) . "'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'purchase_orders', $RetMsg);
		return $RetMsg;
	} elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation['confirm delete'];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'purchase_orders', $RetMsg);
		$RetMsg = str_replace('<Delete>', '<input type="button" class="btn btn-danger" value="' . html_attr($Translation['yes']) . '" onClick="window.location = \'service_view.php?SelectedID=' . urlencode($selected_id) . '&delete_x=1&confirmed=1&csrf_token=' . urlencode(csrf_token(false, true)) . '\';">', $RetMsg);
		$RetMsg = str_replace('<Cancel>', '<input type="button" class="btn btn-success" value="' . html_attr($Translation[ 'no']) . '" onClick="window.location = \'service_view.php?SelectedID=' . urlencode($selected_id) . '\';">', $RetMsg);
		return $RetMsg;
	}

	// child table: purchase_orders
	$res = sql("SELECT `service_id` FROM `service` WHERE `service_id`='{$selected_id}'", $eo);
	$service_id = db_fetch_row($res);
	$rires = sql("SELECT COUNT(1) FROM `purchase_orders` WHERE `work_order_id`='" . makeSafe($service_id[0]) . "'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'purchase_orders', $RetMsg);
		return $RetMsg;
	} elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation['confirm delete'];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'purchase_orders', $RetMsg);
		$RetMsg = str_replace('<Delete>', '<input type="button" class="btn btn-danger" value="' . html_attr($Translation['yes']) . '" onClick="window.location = \'service_view.php?SelectedID=' . urlencode($selected_id) . '&delete_x=1&confirmed=1&csrf_token=' . urlencode(csrf_token(false, true)) . '\';">', $RetMsg);
		$RetMsg = str_replace('<Cancel>', '<input type="button" class="btn btn-success" value="' . html_attr($Translation[ 'no']) . '" onClick="window.location = \'service_view.php?SelectedID=' . urlencode($selected_id) . '\';">', $RetMsg);
		return $RetMsg;
	}

	// child table: breakdown_services
	$res = sql("SELECT `service_id` FROM `service` WHERE `service_id`='{$selected_id}'", $eo);
	$service_id = db_fetch_row($res);
	$rires = sql("SELECT COUNT(1) FROM `breakdown_services` WHERE `workshop_name`='" . makeSafe($service_id[0]) . "'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'breakdown_services', $RetMsg);
		return $RetMsg;
	} elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation['confirm delete'];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'breakdown_services', $RetMsg);
		$RetMsg = str_replace('<Delete>', '<input type="button" class="btn btn-danger" value="' . html_attr($Translation['yes']) . '" onClick="window.location = \'service_view.php?SelectedID=' . urlencode($selected_id) . '&delete_x=1&confirmed=1&csrf_token=' . urlencode(csrf_token(false, true)) . '\';">', $RetMsg);
		$RetMsg = str_replace('<Cancel>', '<input type="button" class="btn btn-success" value="' . html_attr($Translation[ 'no']) . '" onClick="window.location = \'service_view.php?SelectedID=' . urlencode($selected_id) . '\';">', $RetMsg);
		return $RetMsg;
	}

	// child table: modification_to_vehicle
	$res = sql("SELECT `service_id` FROM `service` WHERE `service_id`='{$selected_id}'", $eo);
	$service_id = db_fetch_row($res);
	$rires = sql("SELECT COUNT(1) FROM `modification_to_vehicle` WHERE `job_card_number`='" . makeSafe($service_id[0]) . "'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'modification_to_vehicle', $RetMsg);
		return $RetMsg;
	} elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation['confirm delete'];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'modification_to_vehicle', $RetMsg);
		$RetMsg = str_replace('<Delete>', '<input type="button" class="btn btn-danger" value="' . html_attr($Translation['yes']) . '" onClick="window.location = \'service_view.php?SelectedID=' . urlencode($selected_id) . '&delete_x=1&confirmed=1&csrf_token=' . urlencode(csrf_token(false, true)) . '\';">', $RetMsg);
		$RetMsg = str_replace('<Cancel>', '<input type="button" class="btn btn-success" value="' . html_attr($Translation[ 'no']) . '" onClick="window.location = \'service_view.php?SelectedID=' . urlencode($selected_id) . '\';">', $RetMsg);
		return $RetMsg;
	}

	// child table: withdrawal_vehicle_from_operation
	$res = sql("SELECT `service_id` FROM `service` WHERE `service_id`='{$selected_id}'", $eo);
	$service_id = db_fetch_row($res);
	$rires = sql("SELECT COUNT(1) FROM `withdrawal_vehicle_from_operation` WHERE `date_of_service`='" . makeSafe($service_id[0]) . "'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'withdrawal_vehicle_from_operation', $RetMsg);
		return $RetMsg;
	} elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation['confirm delete'];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'withdrawal_vehicle_from_operation', $RetMsg);
		$RetMsg = str_replace('<Delete>', '<input type="button" class="btn btn-danger" value="' . html_attr($Translation['yes']) . '" onClick="window.location = \'service_view.php?SelectedID=' . urlencode($selected_id) . '&delete_x=1&confirmed=1&csrf_token=' . urlencode(csrf_token(false, true)) . '\';">', $RetMsg);
		$RetMsg = str_replace('<Cancel>', '<input type="button" class="btn btn-success" value="' . html_attr($Translation[ 'no']) . '" onClick="window.location = \'service_view.php?SelectedID=' . urlencode($selected_id) . '\';">', $RetMsg);
		return $RetMsg;
	}

	sql("DELETE FROM `service` WHERE `service_id`='{$selected_id}'", $eo);

	// hook: service_after_delete
	if(function_exists('service_after_delete')) {
		$args = [];
		service_after_delete($selected_id, getMemberInfo(), $args);
	}

	// mm: delete ownership data
	sql("DELETE FROM `membership_userrecords` WHERE `tableName`='service' AND `pkValue`='{$selected_id}'", $eo);
}

function service_update(&$selected_id, &$error_message = '') {
	global $Translation;

	// mm: can member edit record?
	if(!check_record_permission('service', $selected_id, 'edit')) return false;

	$data = [
		'breakdown_of_vehicle' => Request::val('breakdown_of_vehicle', ''),
		'service_title' => Request::val('service_title', ''),
		'service_item_type' => Request::lookup('service_item_type', ''),
		'service_category' => Request::lookup('service_category', ''),
		'merchant_name' => Request::lookup('merchant_name', ''),
		'vehicle_registration_number' => Request::lookup('vehicle_registration_number', ''),
		'engine_number' => Request::lookup('vehicle_registration_number'),
		'chassis_number' => Request::lookup('vehicle_registration_number'),
		'dealer_name' => Request::lookup('dealer_name', ''),
		'make_of_vehicle' => Request::lookup('dealer_name'),
		'model_of_vehicle' => Request::lookup('vehicle_registration_number'),
		'year_model_of_vehicle' => Request::lookup('vehicle_registration_number'),
		'type_of_vehicle' => Request::lookup('vehicle_registration_number'),
		'closing_km' => Request::lookup('closing_km', ''),
		'application_status' => Request::lookup('vehicle_registration_number'),
		'work_allocation_reference_number' => Request::lookup('work_allocation_reference_number', ''),
		'barcode_number' => Request::lookup('vehicle_registration_number'),
		'department' => Request::lookup('vehicle_registration_number'),
		'service_item' => Request::multipleChoice('service_item', ''),
		'date_of_service' => Request::lookup('date_of_service', ''),
		'time' => Request::lookup('date_of_service'),
		'upload_quotation' => Request::fileUpload('upload_quotation', [
			'maxSize' => 5242880,
			'types' => 'txt|doc|docx|docm|odt|pdf|rtf',
			'noRename' => true,
			'dir' => '',
			'id' => $selected_id,
			'success' => function($name, $selected_id) {
			},
			'removeOnRequest' => true,
			'remove' => function($selected_id) {
				// do nothing: preserve removed files on server.
			},
			'failure' => function($selected_id, $fileRemoved) {
				if($fileRemoved) return '';
				return existing_value('service', 'upload_quotation', $selected_id);
			},
		]),
		'date_of_next_service' => Request::dateComponents('date_of_next_service', ''),
		'repeat_service_schedule_every_km' => Request::multipleChoice('repeat_service_schedule_every_km', ''),
		'comments' => Request::val('comments', ''),
		'upload_invoice' => Request::fileUpload('upload_invoice', [
			'maxSize' => 5242880,
			'types' => 'txt|doc|docx|docm|odt|pdf|rtf',
			'noRename' => true,
			'dir' => '',
			'id' => $selected_id,
			'success' => function($name, $selected_id) {
			},
			'removeOnRequest' => true,
			'remove' => function($selected_id) {
				// do nothing: preserve removed files on server.
			},
			'failure' => function($selected_id, $fileRemoved) {
				if($fileRemoved) return '';
				return existing_value('service', 'upload_invoice', $selected_id);
			},
		]),
		'receptionist' => Request::lookup('receptionist', ''),
		'receptionist_contact_email' => Request::lookup('receptionist'),
		'workshop_name' => Request::lookup('receptionist'),
		'workshop_address' => Request::val('workshop_address', ''),
		'technician' => Request::val('technician', ''),
		'work_order_status' => Request::val('work_order_status', ''),
		'job_card_number' => Request::lookup('receptionist'),
		'completion_date' => Request::dateComponents('completion_date', ''),
		'due_date' => Request::dateComponents('due_date', ''),
		'last_modified' => parseCode('<%%editingDateTime%%>', false, true),
	];

	// get existing values
	$old_data = getRecord('service', $selected_id);
	if(is_array($old_data)) {
		$old_data = array_map('makeSafe', $old_data);
		$old_data['selectedID'] = makeSafe($selected_id);
	}

	$data['selectedID'] = makeSafe($selected_id);

	// hook: service_before_update
	if(function_exists('service_before_update')) {
		$args = ['old_data' => $old_data];
		if(!service_before_update($data, getMemberInfo(), $args)) {
			if(isset($args['error_message'])) $error_message = $args['error_message'];
			return false;
		}
	}

	$set = $data; unset($set['selectedID']);
	foreach ($set as $field => $value) {
		$set[$field] = ($value !== '' && $value !== NULL) ? $value : NULL;
	}

	if(!update(
		'service', 
		backtick_keys_once($set), 
		['`service_id`' => $selected_id], 
		$error_message
	)) {
		echo $error_message;
		echo '<a href="service_view.php?SelectedID=' . urlencode($selected_id) . "\">{$Translation['< back']}</a>";
		exit;
	}


	$eo = ['silentErrors' => true];

	update_calc_fields('service', $data['selectedID'], calculated_fields()['service']);

	// hook: service_after_update
	if(function_exists('service_after_update')) {
		$res = sql("SELECT * FROM `service` WHERE `service_id`='{$data['selectedID']}' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)) $data = array_map('makeSafe', $row);

		$data['selectedID'] = $data['service_id'];
		$args = ['old_data' => $old_data];
		if(!service_after_update($data, getMemberInfo(), $args)) return;
	}

	// mm: update ownership data
	sql("UPDATE `membership_userrecords` SET `dateUpdated`='" . time() . "' WHERE `tableName`='service' AND `pkValue`='" . makeSafe($selected_id) . "'", $eo);
}

function service_form($selected_id = '', $AllowUpdate = 1, $AllowInsert = 1, $AllowDelete = 1, $separateDV = 0, $TemplateDV = '', $TemplateDVP = '') {
	// function to return an editable form for a table records
	// and fill it with data of record whose ID is $selected_id. If $selected_id
	// is empty, an empty form is shown, with only an 'Add New'
	// button displayed.

	global $Translation;
	$eo = ['silentErrors' => true];
	$noUploads = null;
	$row = $urow = $jsReadOnly = $jsEditable = $lookups = null;

	$noSaveAsCopy = true;

	// mm: get table permissions
	$arrPerm = getTablePermissions('service');
	if(!$arrPerm['insert'] && $selected_id == '')
		// no insert permission and no record selected
		// so show access denied error unless TVDV
		return $separateDV ? $Translation['tableAccessDenied'] : '';
	$AllowInsert = ($arrPerm['insert'] ? true : false);
	// print preview?
	$dvprint = false;
	if(strlen($selected_id) && Request::val('dvprint_x') != '') {
		$dvprint = true;
	}

	$filterer_service_item_type = Request::val('filterer_service_item_type');
	$filterer_service_category = Request::val('filterer_service_category');
	$filterer_merchant_name = Request::val('filterer_merchant_name');
	$filterer_vehicle_registration_number = Request::val('filterer_vehicle_registration_number');
	$filterer_dealer_name = Request::val('filterer_dealer_name');
	$filterer_closing_km = Request::val('filterer_closing_km');
	$filterer_work_allocation_reference_number = Request::val('filterer_work_allocation_reference_number');
	$filterer_date_of_service = Request::val('filterer_date_of_service');
	$filterer_receptionist = Request::val('filterer_receptionist');

	// populate filterers, starting from children to grand-parents
	if($filterer_closing_km && !$filterer_vehicle_registration_number) $filterer_vehicle_registration_number = sqlValue("select vehicle_registration_number from log_sheet where fuel_log_sheet_id='" . makeSafe($filterer_closing_km) . "'");
	if($filterer_work_allocation_reference_number && !$filterer_vehicle_registration_number) $filterer_vehicle_registration_number = sqlValue("select vehicle_registration_number from work_allocation where work_allocation_id='" . makeSafe($filterer_work_allocation_reference_number) . "'");
	if($filterer_date_of_service && !$filterer_vehicle_registration_number) $filterer_vehicle_registration_number = sqlValue("select user_name_and_surname from schedule where schedule_id='" . makeSafe($filterer_date_of_service) . "'");
	if($filterer_receptionist && !$filterer_vehicle_registration_number) $filterer_vehicle_registration_number = sqlValue("select vehicle_registration_number from reception where reception_user_id='" . makeSafe($filterer_receptionist) . "'");

	// unique random identifier
	$rnd1 = ($dvprint ? rand(1000000, 9999999) : '');
	// combobox: breakdown_of_vehicle
	$combo_breakdown_of_vehicle = new Combo;
	$combo_breakdown_of_vehicle->ListType = 2;
	$combo_breakdown_of_vehicle->MultipleSeparator = ', ';
	$combo_breakdown_of_vehicle->ListBoxHeight = 10;
	$combo_breakdown_of_vehicle->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/service.breakdown_of_vehicle.csv')) {
		$breakdown_of_vehicle_data = addslashes(implode('', @file(__DIR__ . '/hooks/service.breakdown_of_vehicle.csv')));
		$combo_breakdown_of_vehicle->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($breakdown_of_vehicle_data))));
		$combo_breakdown_of_vehicle->ListData = $combo_breakdown_of_vehicle->ListItem;
	} else {
		$combo_breakdown_of_vehicle->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("Yes;;No"))));
		$combo_breakdown_of_vehicle->ListData = $combo_breakdown_of_vehicle->ListItem;
	}
	$combo_breakdown_of_vehicle->SelectName = 'breakdown_of_vehicle';
	// combobox: service_item_type
	$combo_service_item_type = new DataCombo;
	// combobox: service_category
	$combo_service_category = new DataCombo;
	// combobox: merchant_name
	$combo_merchant_name = new DataCombo;
	// combobox: vehicle_registration_number
	$combo_vehicle_registration_number = new DataCombo;
	// combobox: dealer_name
	$combo_dealer_name = new DataCombo;
	// combobox: closing_km, filterable by: vehicle_registration_number
	$combo_closing_km = new DataCombo;
	// combobox: work_allocation_reference_number, filterable by: vehicle_registration_number
	$combo_work_allocation_reference_number = new DataCombo;
	// combobox: service_item
	$combo_service_item = new Combo;
	$combo_service_item->ListType = 3;
	$combo_service_item->MultipleSeparator = ', ';
	$combo_service_item->ListBoxHeight = 10;
	$combo_service_item->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/service.service_item.csv')) {
		$service_item_data = addslashes(implode('', @file(__DIR__ . '/hooks/service.service_item.csv')));
		$combo_service_item->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($service_item_data))));
		$combo_service_item->ListData = $combo_service_item->ListItem;
	} else {
		$combo_service_item->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("Change Oil;; Check Battery and Cables;;Check Brake Fluid;; Check Brakes;; Check Coolant (anti-freeze);;Check Drive Belts;;Check Hoses;;Check Lights and Traffic Indicators;;Check Tyre Inflation and Condition;;Check Transmission Fluid;;Check Windshield Blades;; Check Windshield Wiper Fluid;;Replace Air Filter;;Replace Spark Plugs;;Replace Oil Filter;; Replace Petrol Filter;; Rotate Tyres"))));
		$combo_service_item->ListData = $combo_service_item->ListItem;
	}
	$combo_service_item->SelectName = 'service_item';
	// combobox: date_of_service, filterable by: vehicle_registration_number
	$combo_date_of_service = new DataCombo;
	// combobox: date_of_next_service
	$combo_date_of_next_service = new DateCombo;
	$combo_date_of_next_service->DateFormat = "dmy";
	$combo_date_of_next_service->MinYear = defined('service.date_of_next_service.MinYear') ? constant('service.date_of_next_service.MinYear') : 1900;
	$combo_date_of_next_service->MaxYear = defined('service.date_of_next_service.MaxYear') ? constant('service.date_of_next_service.MaxYear') : 2100;
	$combo_date_of_next_service->DefaultDate = parseMySQLDate('', '');
	$combo_date_of_next_service->MonthNames = $Translation['month names'];
	$combo_date_of_next_service->NamePrefix = 'date_of_next_service';
	// combobox: repeat_service_schedule_every_km
	$combo_repeat_service_schedule_every_km = new Combo;
	$combo_repeat_service_schedule_every_km->ListType = 3;
	$combo_repeat_service_schedule_every_km->MultipleSeparator = ', ';
	$combo_repeat_service_schedule_every_km->ListBoxHeight = 10;
	$combo_repeat_service_schedule_every_km->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/service.repeat_service_schedule_every_km.csv')) {
		$repeat_service_schedule_every_km_data = addslashes(implode('', @file(__DIR__ . '/hooks/service.repeat_service_schedule_every_km.csv')));
		$combo_repeat_service_schedule_every_km->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($repeat_service_schedule_every_km_data))));
		$combo_repeat_service_schedule_every_km->ListData = $combo_repeat_service_schedule_every_km->ListItem;
	} else {
		$combo_repeat_service_schedule_every_km->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("1500;;2500;;3500;;4500;;5500;;6500;;7500;;8500;;9500;;10500;;12500;;15500"))));
		$combo_repeat_service_schedule_every_km->ListData = $combo_repeat_service_schedule_every_km->ListItem;
	}
	$combo_repeat_service_schedule_every_km->SelectName = 'repeat_service_schedule_every_km';
	// combobox: receptionist, filterable by: vehicle_registration_number
	$combo_receptionist = new DataCombo;
	// combobox: work_order_status
	$combo_work_order_status = new Combo;
	$combo_work_order_status->ListType = 2;
	$combo_work_order_status->MultipleSeparator = ', ';
	$combo_work_order_status->ListBoxHeight = 10;
	$combo_work_order_status->RadiosPerLine = 1;
	if(is_file(__DIR__ . '/hooks/service.work_order_status.csv')) {
		$work_order_status_data = addslashes(implode('', @file(__DIR__ . '/hooks/service.work_order_status.csv')));
		$combo_work_order_status->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions($work_order_status_data))));
		$combo_work_order_status->ListData = $combo_work_order_status->ListItem;
	} else {
		$combo_work_order_status->ListItem = array_trim(explode('||', entitiesToUTF8(convertLegacyOptions("Pending;;Processing;;Closed"))));
		$combo_work_order_status->ListData = $combo_work_order_status->ListItem;
	}
	$combo_work_order_status->SelectName = 'work_order_status';
	// combobox: completion_date
	$combo_completion_date = new DateCombo;
	$combo_completion_date->DateFormat = "dmy";
	$combo_completion_date->MinYear = defined('service.completion_date.MinYear') ? constant('service.completion_date.MinYear') : 1900;
	$combo_completion_date->MaxYear = defined('service.completion_date.MaxYear') ? constant('service.completion_date.MaxYear') : 2100;
	$combo_completion_date->DefaultDate = parseMySQLDate('1', '1');
	$combo_completion_date->MonthNames = $Translation['month names'];
	$combo_completion_date->NamePrefix = 'completion_date';
	// combobox: due_date
	$combo_due_date = new DateCombo;
	$combo_due_date->DateFormat = "dmy";
	$combo_due_date->MinYear = defined('service.due_date.MinYear') ? constant('service.due_date.MinYear') : 1900;
	$combo_due_date->MaxYear = defined('service.due_date.MaxYear') ? constant('service.due_date.MaxYear') : 2100;
	$combo_due_date->DefaultDate = parseMySQLDate('1', '1');
	$combo_due_date->MonthNames = $Translation['month names'];
	$combo_due_date->NamePrefix = 'due_date';

	if($selected_id) {
		// mm: check member permissions
		if(!$arrPerm['view']) return $Translation['tableAccessDenied'];

		// mm: who is the owner?
		$ownerGroupID = sqlValue("SELECT `groupID` FROM `membership_userrecords` WHERE `tableName`='service' AND `pkValue`='" . makeSafe($selected_id) . "'");
		$ownerMemberID = sqlValue("SELECT LCASE(`memberID`) FROM `membership_userrecords` WHERE `tableName`='service' AND `pkValue`='" . makeSafe($selected_id) . "'");

		if($arrPerm['view'] == 1 && getLoggedMemberID() != $ownerMemberID) return $Translation['tableAccessDenied'];
		if($arrPerm['view'] == 2 && getLoggedGroupID() != $ownerGroupID) return $Translation['tableAccessDenied'];

		// can edit?
		$AllowUpdate = 0;
		if(($arrPerm['edit'] == 1 && $ownerMemberID == getLoggedMemberID()) || ($arrPerm['edit'] == 2 && $ownerGroupID == getLoggedGroupID()) || $arrPerm['edit'] == 3) {
			$AllowUpdate = 1;
		}

		$res = sql("SELECT * FROM `service` WHERE `service_id`='" . makeSafe($selected_id) . "'", $eo);
		if(!($row = db_fetch_array($res))) {
			return error_message($Translation['No records found'], 'service_view.php', false);
		}
		$combo_breakdown_of_vehicle->SelectedData = $row['breakdown_of_vehicle'];
		$combo_service_item_type->SelectedData = $row['service_item_type'];
		$combo_service_category->SelectedData = $row['service_category'];
		$combo_merchant_name->SelectedData = $row['merchant_name'];
		$combo_vehicle_registration_number->SelectedData = $row['vehicle_registration_number'];
		$combo_dealer_name->SelectedData = $row['dealer_name'];
		$combo_closing_km->SelectedData = $row['closing_km'];
		$combo_work_allocation_reference_number->SelectedData = $row['work_allocation_reference_number'];
		$combo_service_item->SelectedData = $row['service_item'];
		$combo_date_of_service->SelectedData = $row['date_of_service'];
		$combo_date_of_next_service->DefaultDate = $row['date_of_next_service'];
		$combo_repeat_service_schedule_every_km->SelectedData = $row['repeat_service_schedule_every_km'];
		$combo_receptionist->SelectedData = $row['receptionist'];
		$combo_work_order_status->SelectedData = $row['work_order_status'];
		$combo_completion_date->DefaultDate = $row['completion_date'];
		$combo_due_date->DefaultDate = $row['due_date'];
		$row['filed'] = sqlValue("SELECT DATE_FORMAT(`filed`, '%c/%e/%Y %l:%i%p') FROM `service` WHERE `service_id`='" . makeSafe($selected_id) . "'");
		$row['last_modified'] = sqlValue("SELECT DATE_FORMAT(`last_modified`, '%c/%e/%Y %l:%i%p') FROM `service` WHERE `service_id`='" . makeSafe($selected_id) . "'");
		$urow = $row; /* unsanitized data */
		$row = array_map('safe_html', $row);
	} else {
		$filterField = Request::val('FilterField');
		$filterOperator = Request::val('FilterOperator');
		$filterValue = Request::val('FilterValue');
		$combo_breakdown_of_vehicle->SelectedText = (isset($filterField[1]) && $filterField[1] == '2' && $filterOperator[1] == '<=>' ? $filterValue[1] : '');
		$combo_service_item_type->SelectedData = $filterer_service_item_type;
		$combo_service_category->SelectedData = $filterer_service_category;
		$combo_merchant_name->SelectedData = $filterer_merchant_name;
		$combo_vehicle_registration_number->SelectedData = $filterer_vehicle_registration_number;
		$combo_dealer_name->SelectedData = $filterer_dealer_name;
		$combo_closing_km->SelectedData = $filterer_closing_km;
		$combo_work_allocation_reference_number->SelectedData = $filterer_work_allocation_reference_number;
		$combo_date_of_service->SelectedData = $filterer_date_of_service;
		$combo_receptionist->SelectedData = $filterer_receptionist;
		$combo_work_order_status->SelectedText = (isset($filterField[1]) && $filterField[1] == '33' && $filterOperator[1] == '<=>' ? $filterValue[1] : '');
	}
	$combo_breakdown_of_vehicle->Render();
	$combo_service_item_type->HTML = '<span id="service_item_type-container' . $rnd1 . '"></span><input type="hidden" name="service_item_type" id="service_item_type' . $rnd1 . '" value="' . html_attr($combo_service_item_type->SelectedData) . '">';
	$combo_service_item_type->MatchText = '<span id="service_item_type-container-readonly' . $rnd1 . '"></span><input type="hidden" name="service_item_type" id="service_item_type' . $rnd1 . '" value="' . html_attr($combo_service_item_type->SelectedData) . '">';
	$combo_service_category->HTML = '<span id="service_category-container' . $rnd1 . '"></span><input type="hidden" name="service_category" id="service_category' . $rnd1 . '" value="' . html_attr($combo_service_category->SelectedData) . '">';
	$combo_service_category->MatchText = '<span id="service_category-container-readonly' . $rnd1 . '"></span><input type="hidden" name="service_category" id="service_category' . $rnd1 . '" value="' . html_attr($combo_service_category->SelectedData) . '">';
	$combo_merchant_name->HTML = '<span id="merchant_name-container' . $rnd1 . '"></span><input type="hidden" name="merchant_name" id="merchant_name' . $rnd1 . '" value="' . html_attr($combo_merchant_name->SelectedData) . '">';
	$combo_merchant_name->MatchText = '<span id="merchant_name-container-readonly' . $rnd1 . '"></span><input type="hidden" name="merchant_name" id="merchant_name' . $rnd1 . '" value="' . html_attr($combo_merchant_name->SelectedData) . '">';
	$combo_vehicle_registration_number->HTML = '<span id="vehicle_registration_number-container' . $rnd1 . '"></span><input type="hidden" name="vehicle_registration_number" id="vehicle_registration_number' . $rnd1 . '" value="' . html_attr($combo_vehicle_registration_number->SelectedData) . '">';
	$combo_vehicle_registration_number->MatchText = '<span id="vehicle_registration_number-container-readonly' . $rnd1 . '"></span><input type="hidden" name="vehicle_registration_number" id="vehicle_registration_number' . $rnd1 . '" value="' . html_attr($combo_vehicle_registration_number->SelectedData) . '">';
	$combo_dealer_name->HTML = '<span id="dealer_name-container' . $rnd1 . '"></span><input type="hidden" name="dealer_name" id="dealer_name' . $rnd1 . '" value="' . html_attr($combo_dealer_name->SelectedData) . '">';
	$combo_dealer_name->MatchText = '<span id="dealer_name-container-readonly' . $rnd1 . '"></span><input type="hidden" name="dealer_name" id="dealer_name' . $rnd1 . '" value="' . html_attr($combo_dealer_name->SelectedData) . '">';
	$combo_closing_km->HTML = '<span id="closing_km-container' . $rnd1 . '"></span><input type="hidden" name="closing_km" id="closing_km' . $rnd1 . '" value="' . html_attr($combo_closing_km->SelectedData) . '">';
	$combo_closing_km->MatchText = '<span id="closing_km-container-readonly' . $rnd1 . '"></span><input type="hidden" name="closing_km" id="closing_km' . $rnd1 . '" value="' . html_attr($combo_closing_km->SelectedData) . '">';
	$combo_work_allocation_reference_number->HTML = '<span id="work_allocation_reference_number-container' . $rnd1 . '"></span><input type="hidden" name="work_allocation_reference_number" id="work_allocation_reference_number' . $rnd1 . '" value="' . html_attr($combo_work_allocation_reference_number->SelectedData) . '">';
	$combo_work_allocation_reference_number->MatchText = '<span id="work_allocation_reference_number-container-readonly' . $rnd1 . '"></span><input type="hidden" name="work_allocation_reference_number" id="work_allocation_reference_number' . $rnd1 . '" value="' . html_attr($combo_work_allocation_reference_number->SelectedData) . '">';
	$combo_service_item->Render();
	$combo_date_of_service->HTML = '<span id="date_of_service-container' . $rnd1 . '"></span><input type="hidden" name="date_of_service" id="date_of_service' . $rnd1 . '" value="' . html_attr($combo_date_of_service->SelectedData) . '">';
	$combo_date_of_service->MatchText = '<span id="date_of_service-container-readonly' . $rnd1 . '"></span><input type="hidden" name="date_of_service" id="date_of_service' . $rnd1 . '" value="' . html_attr($combo_date_of_service->SelectedData) . '">';
	$combo_repeat_service_schedule_every_km->Render();
	$combo_receptionist->HTML = '<span id="receptionist-container' . $rnd1 . '"></span><input type="hidden" name="receptionist" id="receptionist' . $rnd1 . '" value="' . html_attr($combo_receptionist->SelectedData) . '">';
	$combo_receptionist->MatchText = '<span id="receptionist-container-readonly' . $rnd1 . '"></span><input type="hidden" name="receptionist" id="receptionist' . $rnd1 . '" value="' . html_attr($combo_receptionist->SelectedData) . '">';
	$combo_work_order_status->Render();

	ob_start();
	?>

	<script>
		// initial lookup values
		AppGini.current_service_item_type__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['service_item_type'] : htmlspecialchars($filterer_service_item_type, ENT_QUOTES)); ?>"};
		AppGini.current_service_category__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['service_category'] : htmlspecialchars($filterer_service_category, ENT_QUOTES)); ?>"};
		AppGini.current_merchant_name__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['merchant_name'] : htmlspecialchars($filterer_merchant_name, ENT_QUOTES)); ?>"};
		AppGini.current_vehicle_registration_number__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['vehicle_registration_number'] : htmlspecialchars($filterer_vehicle_registration_number, ENT_QUOTES)); ?>"};
		AppGini.current_dealer_name__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['dealer_name'] : htmlspecialchars($filterer_dealer_name, ENT_QUOTES)); ?>"};
		AppGini.current_closing_km__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['closing_km'] : htmlspecialchars($filterer_closing_km, ENT_QUOTES)); ?>"};
		AppGini.current_work_allocation_reference_number__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['work_allocation_reference_number'] : htmlspecialchars($filterer_work_allocation_reference_number, ENT_QUOTES)); ?>"};
		AppGini.current_date_of_service__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['date_of_service'] : htmlspecialchars($filterer_date_of_service, ENT_QUOTES)); ?>"};
		AppGini.current_receptionist__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['receptionist'] : htmlspecialchars($filterer_receptionist, ENT_QUOTES)); ?>"};

		jQuery(function() {
			setTimeout(function() {
				if(typeof(service_item_type_reload__RAND__) == 'function') service_item_type_reload__RAND__();
				if(typeof(service_category_reload__RAND__) == 'function') service_category_reload__RAND__();
				if(typeof(merchant_name_reload__RAND__) == 'function') merchant_name_reload__RAND__();
				if(typeof(vehicle_registration_number_reload__RAND__) == 'function') vehicle_registration_number_reload__RAND__();
				if(typeof(dealer_name_reload__RAND__) == 'function') dealer_name_reload__RAND__();
				<?php echo (!$AllowUpdate || $dvprint ? 'if(typeof(closing_km_reload__RAND__) == \'function\') closing_km_reload__RAND__(AppGini.current_vehicle_registration_number__RAND__.value);' : ''); ?>
				<?php echo (!$AllowUpdate || $dvprint ? 'if(typeof(work_allocation_reference_number_reload__RAND__) == \'function\') work_allocation_reference_number_reload__RAND__(AppGini.current_vehicle_registration_number__RAND__.value);' : ''); ?>
				<?php echo (!$AllowUpdate || $dvprint ? 'if(typeof(date_of_service_reload__RAND__) == \'function\') date_of_service_reload__RAND__(AppGini.current_vehicle_registration_number__RAND__.value);' : ''); ?>
				<?php echo (!$AllowUpdate || $dvprint ? 'if(typeof(receptionist_reload__RAND__) == \'function\') receptionist_reload__RAND__(AppGini.current_vehicle_registration_number__RAND__.value);' : ''); ?>
			}, 50); /* we need to slightly delay client-side execution of the above code to allow AppGini.ajaxCache to work */
		});
		function service_item_type_reload__RAND__() {
		<?php if(($AllowUpdate || ($arrPerm['insert'] && !$selected_id)) && !$dvprint) { ?>

			$j("#service_item_type-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_service_item_type__RAND__.value, t: 'service', f: 'service_item_type' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="service_item_type"]').val(resp.results[0].id);
							$j('[id=service_item_type-container-readonly__RAND__]').html('<span class="match-text" id="service_item_type-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=service_item_type_view_parent]').hide(); } else { $j('.btn[id=service_item_type_view_parent]').show(); }

						if(typeof(time_reload__RAND__) == 'function') time_reload__RAND__(AppGini.current_service_item_type__RAND__.value, $j('#vehicle_registration_number').val(), $j('#workshop_name').val());

							if(typeof(service_item_type_update_autofills__RAND__) == 'function') service_item_type_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'service', f: 'service_item_type' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_service_item_type__RAND__.value = e.added.id;
				AppGini.current_service_item_type__RAND__.text = e.added.text;
				$j('[name="service_item_type"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=service_item_type_view_parent]').hide(); } else { $j('.btn[id=service_item_type_view_parent]').show(); }

						if(typeof(time_reload__RAND__) == 'function') time_reload__RAND__(AppGini.current_service_item_type__RAND__.value, $j('#vehicle_registration_number').val(), $j('#workshop_name').val());

				if(typeof(service_item_type_update_autofills__RAND__) == 'function') service_item_type_update_autofills__RAND__();
			});

			if(!$j("#service_item_type-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_service_item_type__RAND__.value, t: 'service', f: 'service_item_type' },
					success: function(resp) {
						$j('[name="service_item_type"]').val(resp.results[0].id);
						$j('[id=service_item_type-container-readonly__RAND__]').html('<span class="match-text" id="service_item_type-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=service_item_type_view_parent]').hide(); } else { $j('.btn[id=service_item_type_view_parent]').show(); }

						if(typeof(service_item_type_update_autofills__RAND__) == 'function') service_item_type_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_service_item_type__RAND__.value, t: 'service', f: 'service_item_type' },
				success: function(resp) {
					$j('[id=service_item_type-container__RAND__], [id=service_item_type-container-readonly__RAND__]').html('<span class="match-text" id="service_item_type-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=service_item_type_view_parent]').hide(); } else { $j('.btn[id=service_item_type_view_parent]').show(); }

					if(typeof(service_item_type_update_autofills__RAND__) == 'function') service_item_type_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function service_category_reload__RAND__() {
		<?php if(($AllowUpdate || ($arrPerm['insert'] && !$selected_id)) && !$dvprint) { ?>

			$j("#service_category-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_service_category__RAND__.value, t: 'service', f: 'service_category' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="service_category"]').val(resp.results[0].id);
							$j('[id=service_category-container-readonly__RAND__]').html('<span class="match-text" id="service_category-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=service_categories_view_parent]').hide(); } else { $j('.btn[id=service_categories_view_parent]').show(); }


							if(typeof(service_category_update_autofills__RAND__) == 'function') service_category_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'service', f: 'service_category' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_service_category__RAND__.value = e.added.id;
				AppGini.current_service_category__RAND__.text = e.added.text;
				$j('[name="service_category"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=service_categories_view_parent]').hide(); } else { $j('.btn[id=service_categories_view_parent]').show(); }


				if(typeof(service_category_update_autofills__RAND__) == 'function') service_category_update_autofills__RAND__();
			});

			if(!$j("#service_category-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_service_category__RAND__.value, t: 'service', f: 'service_category' },
					success: function(resp) {
						$j('[name="service_category"]').val(resp.results[0].id);
						$j('[id=service_category-container-readonly__RAND__]').html('<span class="match-text" id="service_category-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=service_categories_view_parent]').hide(); } else { $j('.btn[id=service_categories_view_parent]').show(); }

						if(typeof(service_category_update_autofills__RAND__) == 'function') service_category_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_service_category__RAND__.value, t: 'service', f: 'service_category' },
				success: function(resp) {
					$j('[id=service_category-container__RAND__], [id=service_category-container-readonly__RAND__]').html('<span class="match-text" id="service_category-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=service_categories_view_parent]').hide(); } else { $j('.btn[id=service_categories_view_parent]').show(); }

					if(typeof(service_category_update_autofills__RAND__) == 'function') service_category_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function merchant_name_reload__RAND__() {
		<?php if(($AllowUpdate || ($arrPerm['insert'] && !$selected_id)) && !$dvprint) { ?>

			$j("#merchant_name-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_merchant_name__RAND__.value, t: 'service', f: 'merchant_name' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="merchant_name"]').val(resp.results[0].id);
							$j('[id=merchant_name-container-readonly__RAND__]').html('<span class="match-text" id="merchant_name-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=merchant_view_parent]').hide(); } else { $j('.btn[id=merchant_view_parent]').show(); }


							if(typeof(merchant_name_update_autofills__RAND__) == 'function') merchant_name_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'service', f: 'merchant_name' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_merchant_name__RAND__.value = e.added.id;
				AppGini.current_merchant_name__RAND__.text = e.added.text;
				$j('[name="merchant_name"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=merchant_view_parent]').hide(); } else { $j('.btn[id=merchant_view_parent]').show(); }


				if(typeof(merchant_name_update_autofills__RAND__) == 'function') merchant_name_update_autofills__RAND__();
			});

			if(!$j("#merchant_name-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_merchant_name__RAND__.value, t: 'service', f: 'merchant_name' },
					success: function(resp) {
						$j('[name="merchant_name"]').val(resp.results[0].id);
						$j('[id=merchant_name-container-readonly__RAND__]').html('<span class="match-text" id="merchant_name-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=merchant_view_parent]').hide(); } else { $j('.btn[id=merchant_view_parent]').show(); }

						if(typeof(merchant_name_update_autofills__RAND__) == 'function') merchant_name_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_merchant_name__RAND__.value, t: 'service', f: 'merchant_name' },
				success: function(resp) {
					$j('[id=merchant_name-container__RAND__], [id=merchant_name-container-readonly__RAND__]').html('<span class="match-text" id="merchant_name-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=merchant_view_parent]').hide(); } else { $j('.btn[id=merchant_view_parent]').show(); }

					if(typeof(merchant_name_update_autofills__RAND__) == 'function') merchant_name_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function vehicle_registration_number_reload__RAND__() {
		<?php if(($AllowUpdate || ($arrPerm['insert'] && !$selected_id)) && !$dvprint) { ?>

			$j("#vehicle_registration_number-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_vehicle_registration_number__RAND__.value, t: 'service', f: 'vehicle_registration_number' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="vehicle_registration_number"]').val(resp.results[0].id);
							$j('[id=vehicle_registration_number-container-readonly__RAND__]').html('<span class="match-text" id="vehicle_registration_number-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=gmt_fleet_register_view_parent]').hide(); } else { $j('.btn[id=gmt_fleet_register_view_parent]').show(); }

						if(typeof(closing_km_reload__RAND__) == 'function') closing_km_reload__RAND__(AppGini.current_vehicle_registration_number__RAND__.value);
						if(typeof(work_allocation_reference_number_reload__RAND__) == 'function') work_allocation_reference_number_reload__RAND__(AppGini.current_vehicle_registration_number__RAND__.value);
						if(typeof(date_of_service_reload__RAND__) == 'function') date_of_service_reload__RAND__(AppGini.current_vehicle_registration_number__RAND__.value);
						if(typeof(time_reload__RAND__) == 'function') time_reload__RAND__($j('#service_item_type').val(), AppGini.current_vehicle_registration_number__RAND__.value, $j('#workshop_name').val());
						if(typeof(receptionist_reload__RAND__) == 'function') receptionist_reload__RAND__(AppGini.current_vehicle_registration_number__RAND__.value);
						if(typeof(workshop_name_reload__RAND__) == 'function') workshop_name_reload__RAND__(AppGini.current_vehicle_registration_number__RAND__.value);
						if(typeof(job_card_number_reload__RAND__) == 'function') job_card_number_reload__RAND__(AppGini.current_vehicle_registration_number__RAND__.value);

							if(typeof(vehicle_registration_number_update_autofills__RAND__) == 'function') vehicle_registration_number_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'service', f: 'vehicle_registration_number' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_vehicle_registration_number__RAND__.value = e.added.id;
				AppGini.current_vehicle_registration_number__RAND__.text = e.added.text;
				$j('[name="vehicle_registration_number"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=gmt_fleet_register_view_parent]').hide(); } else { $j('.btn[id=gmt_fleet_register_view_parent]').show(); }

						if(typeof(closing_km_reload__RAND__) == 'function') closing_km_reload__RAND__(AppGini.current_vehicle_registration_number__RAND__.value);
						if(typeof(work_allocation_reference_number_reload__RAND__) == 'function') work_allocation_reference_number_reload__RAND__(AppGini.current_vehicle_registration_number__RAND__.value);
						if(typeof(date_of_service_reload__RAND__) == 'function') date_of_service_reload__RAND__(AppGini.current_vehicle_registration_number__RAND__.value);
						if(typeof(time_reload__RAND__) == 'function') time_reload__RAND__($j('#service_item_type').val(), AppGini.current_vehicle_registration_number__RAND__.value, $j('#workshop_name').val());
						if(typeof(receptionist_reload__RAND__) == 'function') receptionist_reload__RAND__(AppGini.current_vehicle_registration_number__RAND__.value);
						if(typeof(workshop_name_reload__RAND__) == 'function') workshop_name_reload__RAND__(AppGini.current_vehicle_registration_number__RAND__.value);
						if(typeof(job_card_number_reload__RAND__) == 'function') job_card_number_reload__RAND__(AppGini.current_vehicle_registration_number__RAND__.value);

				if(typeof(vehicle_registration_number_update_autofills__RAND__) == 'function') vehicle_registration_number_update_autofills__RAND__();
			});

			if(!$j("#vehicle_registration_number-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_vehicle_registration_number__RAND__.value, t: 'service', f: 'vehicle_registration_number' },
					success: function(resp) {
						$j('[name="vehicle_registration_number"]').val(resp.results[0].id);
						$j('[id=vehicle_registration_number-container-readonly__RAND__]').html('<span class="match-text" id="vehicle_registration_number-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=gmt_fleet_register_view_parent]').hide(); } else { $j('.btn[id=gmt_fleet_register_view_parent]').show(); }

						if(typeof(vehicle_registration_number_update_autofills__RAND__) == 'function') vehicle_registration_number_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_vehicle_registration_number__RAND__.value, t: 'service', f: 'vehicle_registration_number' },
				success: function(resp) {
					$j('[id=vehicle_registration_number-container__RAND__], [id=vehicle_registration_number-container-readonly__RAND__]').html('<span class="match-text" id="vehicle_registration_number-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=gmt_fleet_register_view_parent]').hide(); } else { $j('.btn[id=gmt_fleet_register_view_parent]').show(); }

					if(typeof(vehicle_registration_number_update_autofills__RAND__) == 'function') vehicle_registration_number_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function dealer_name_reload__RAND__() {
		<?php if(($AllowUpdate || ($arrPerm['insert'] && !$selected_id)) && !$dvprint) { ?>

			$j("#dealer_name-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_dealer_name__RAND__.value, t: 'service', f: 'dealer_name' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="dealer_name"]').val(resp.results[0].id);
							$j('[id=dealer_name-container-readonly__RAND__]').html('<span class="match-text" id="dealer_name-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=dealer_view_parent]').hide(); } else { $j('.btn[id=dealer_view_parent]').show(); }


							if(typeof(dealer_name_update_autofills__RAND__) == 'function') dealer_name_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'service', f: 'dealer_name' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_dealer_name__RAND__.value = e.added.id;
				AppGini.current_dealer_name__RAND__.text = e.added.text;
				$j('[name="dealer_name"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=dealer_view_parent]').hide(); } else { $j('.btn[id=dealer_view_parent]').show(); }


				if(typeof(dealer_name_update_autofills__RAND__) == 'function') dealer_name_update_autofills__RAND__();
			});

			if(!$j("#dealer_name-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_dealer_name__RAND__.value, t: 'service', f: 'dealer_name' },
					success: function(resp) {
						$j('[name="dealer_name"]').val(resp.results[0].id);
						$j('[id=dealer_name-container-readonly__RAND__]').html('<span class="match-text" id="dealer_name-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=dealer_view_parent]').hide(); } else { $j('.btn[id=dealer_view_parent]').show(); }

						if(typeof(dealer_name_update_autofills__RAND__) == 'function') dealer_name_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_dealer_name__RAND__.value, t: 'service', f: 'dealer_name' },
				success: function(resp) {
					$j('[id=dealer_name-container__RAND__], [id=dealer_name-container-readonly__RAND__]').html('<span class="match-text" id="dealer_name-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=dealer_view_parent]').hide(); } else { $j('.btn[id=dealer_view_parent]').show(); }

					if(typeof(dealer_name_update_autofills__RAND__) == 'function') dealer_name_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function closing_km_reload__RAND__(filterer_vehicle_registration_number) {
		<?php if(($AllowUpdate || ($arrPerm['insert'] && !$selected_id)) && !$dvprint) { ?>

			$j("#closing_km-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { filterer_vehicle_registration_number: filterer_vehicle_registration_number, id: AppGini.current_closing_km__RAND__.value, t: 'service', f: 'closing_km' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="closing_km"]').val(resp.results[0].id);
							$j('[id=closing_km-container-readonly__RAND__]').html('<span class="match-text" id="closing_km-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=log_sheet_view_parent]').hide(); } else { $j('.btn[id=log_sheet_view_parent]').show(); }


							if(typeof(closing_km_update_autofills__RAND__) == 'function') closing_km_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { filterer_vehicle_registration_number: filterer_vehicle_registration_number, s: term, p: page, t: 'service', f: 'closing_km' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_closing_km__RAND__.value = e.added.id;
				AppGini.current_closing_km__RAND__.text = e.added.text;
				$j('[name="closing_km"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=log_sheet_view_parent]').hide(); } else { $j('.btn[id=log_sheet_view_parent]').show(); }


				if(typeof(closing_km_update_autofills__RAND__) == 'function') closing_km_update_autofills__RAND__();
			});

			if(!$j("#closing_km-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_closing_km__RAND__.value, t: 'service', f: 'closing_km' },
					success: function(resp) {
						$j('[name="closing_km"]').val(resp.results[0].id);
						$j('[id=closing_km-container-readonly__RAND__]').html('<span class="match-text" id="closing_km-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=log_sheet_view_parent]').hide(); } else { $j('.btn[id=log_sheet_view_parent]').show(); }

						if(typeof(closing_km_update_autofills__RAND__) == 'function') closing_km_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_closing_km__RAND__.value, t: 'service', f: 'closing_km' },
				success: function(resp) {
					$j('[id=closing_km-container__RAND__], [id=closing_km-container-readonly__RAND__]').html('<span class="match-text" id="closing_km-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=log_sheet_view_parent]').hide(); } else { $j('.btn[id=log_sheet_view_parent]').show(); }

					if(typeof(closing_km_update_autofills__RAND__) == 'function') closing_km_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function work_allocation_reference_number_reload__RAND__(filterer_vehicle_registration_number) {
		<?php if(($AllowUpdate || ($arrPerm['insert'] && !$selected_id)) && !$dvprint) { ?>

			$j("#work_allocation_reference_number-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { filterer_vehicle_registration_number: filterer_vehicle_registration_number, id: AppGini.current_work_allocation_reference_number__RAND__.value, t: 'service', f: 'work_allocation_reference_number' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="work_allocation_reference_number"]').val(resp.results[0].id);
							$j('[id=work_allocation_reference_number-container-readonly__RAND__]').html('<span class="match-text" id="work_allocation_reference_number-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=work_allocation_view_parent]').hide(); } else { $j('.btn[id=work_allocation_view_parent]').show(); }


							if(typeof(work_allocation_reference_number_update_autofills__RAND__) == 'function') work_allocation_reference_number_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { filterer_vehicle_registration_number: filterer_vehicle_registration_number, s: term, p: page, t: 'service', f: 'work_allocation_reference_number' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_work_allocation_reference_number__RAND__.value = e.added.id;
				AppGini.current_work_allocation_reference_number__RAND__.text = e.added.text;
				$j('[name="work_allocation_reference_number"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=work_allocation_view_parent]').hide(); } else { $j('.btn[id=work_allocation_view_parent]').show(); }


				if(typeof(work_allocation_reference_number_update_autofills__RAND__) == 'function') work_allocation_reference_number_update_autofills__RAND__();
			});

			if(!$j("#work_allocation_reference_number-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_work_allocation_reference_number__RAND__.value, t: 'service', f: 'work_allocation_reference_number' },
					success: function(resp) {
						$j('[name="work_allocation_reference_number"]').val(resp.results[0].id);
						$j('[id=work_allocation_reference_number-container-readonly__RAND__]').html('<span class="match-text" id="work_allocation_reference_number-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=work_allocation_view_parent]').hide(); } else { $j('.btn[id=work_allocation_view_parent]').show(); }

						if(typeof(work_allocation_reference_number_update_autofills__RAND__) == 'function') work_allocation_reference_number_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_work_allocation_reference_number__RAND__.value, t: 'service', f: 'work_allocation_reference_number' },
				success: function(resp) {
					$j('[id=work_allocation_reference_number-container__RAND__], [id=work_allocation_reference_number-container-readonly__RAND__]').html('<span class="match-text" id="work_allocation_reference_number-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=work_allocation_view_parent]').hide(); } else { $j('.btn[id=work_allocation_view_parent]').show(); }

					if(typeof(work_allocation_reference_number_update_autofills__RAND__) == 'function') work_allocation_reference_number_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function date_of_service_reload__RAND__(filterer_vehicle_registration_number) {
		<?php if(($AllowUpdate || ($arrPerm['insert'] && !$selected_id)) && !$dvprint) { ?>

			$j("#date_of_service-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { filterer_vehicle_registration_number: filterer_vehicle_registration_number, id: AppGini.current_date_of_service__RAND__.value, t: 'service', f: 'date_of_service' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="date_of_service"]').val(resp.results[0].id);
							$j('[id=date_of_service-container-readonly__RAND__]').html('<span class="match-text" id="date_of_service-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=schedule_view_parent]').hide(); } else { $j('.btn[id=schedule_view_parent]').show(); }


							if(typeof(date_of_service_update_autofills__RAND__) == 'function') date_of_service_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { filterer_vehicle_registration_number: filterer_vehicle_registration_number, s: term, p: page, t: 'service', f: 'date_of_service' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_date_of_service__RAND__.value = e.added.id;
				AppGini.current_date_of_service__RAND__.text = e.added.text;
				$j('[name="date_of_service"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=schedule_view_parent]').hide(); } else { $j('.btn[id=schedule_view_parent]').show(); }


				if(typeof(date_of_service_update_autofills__RAND__) == 'function') date_of_service_update_autofills__RAND__();
			});

			if(!$j("#date_of_service-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_date_of_service__RAND__.value, t: 'service', f: 'date_of_service' },
					success: function(resp) {
						$j('[name="date_of_service"]').val(resp.results[0].id);
						$j('[id=date_of_service-container-readonly__RAND__]').html('<span class="match-text" id="date_of_service-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=schedule_view_parent]').hide(); } else { $j('.btn[id=schedule_view_parent]').show(); }

						if(typeof(date_of_service_update_autofills__RAND__) == 'function') date_of_service_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_date_of_service__RAND__.value, t: 'service', f: 'date_of_service' },
				success: function(resp) {
					$j('[id=date_of_service-container__RAND__], [id=date_of_service-container-readonly__RAND__]').html('<span class="match-text" id="date_of_service-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=schedule_view_parent]').hide(); } else { $j('.btn[id=schedule_view_parent]').show(); }

					if(typeof(date_of_service_update_autofills__RAND__) == 'function') date_of_service_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function receptionist_reload__RAND__(filterer_vehicle_registration_number) {
		<?php if(($AllowUpdate || ($arrPerm['insert'] && !$selected_id)) && !$dvprint) { ?>

			$j("#receptionist-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { filterer_vehicle_registration_number: filterer_vehicle_registration_number, id: AppGini.current_receptionist__RAND__.value, t: 'service', f: 'receptionist' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="receptionist"]').val(resp.results[0].id);
							$j('[id=receptionist-container-readonly__RAND__]').html('<span class="match-text" id="receptionist-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=reception_view_parent]').hide(); } else { $j('.btn[id=reception_view_parent]').show(); }


							if(typeof(receptionist_update_autofills__RAND__) == 'function') receptionist_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { filterer_vehicle_registration_number: filterer_vehicle_registration_number, s: term, p: page, t: 'service', f: 'receptionist' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_receptionist__RAND__.value = e.added.id;
				AppGini.current_receptionist__RAND__.text = e.added.text;
				$j('[name="receptionist"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=reception_view_parent]').hide(); } else { $j('.btn[id=reception_view_parent]').show(); }


				if(typeof(receptionist_update_autofills__RAND__) == 'function') receptionist_update_autofills__RAND__();
			});

			if(!$j("#receptionist-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_receptionist__RAND__.value, t: 'service', f: 'receptionist' },
					success: function(resp) {
						$j('[name="receptionist"]').val(resp.results[0].id);
						$j('[id=receptionist-container-readonly__RAND__]').html('<span class="match-text" id="receptionist-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=reception_view_parent]').hide(); } else { $j('.btn[id=reception_view_parent]').show(); }

						if(typeof(receptionist_update_autofills__RAND__) == 'function') receptionist_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_receptionist__RAND__.value, t: 'service', f: 'receptionist' },
				success: function(resp) {
					$j('[id=receptionist-container__RAND__], [id=receptionist-container-readonly__RAND__]').html('<span class="match-text" id="receptionist-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=reception_view_parent]').hide(); } else { $j('.btn[id=reception_view_parent]').show(); }

					if(typeof(receptionist_update_autofills__RAND__) == 'function') receptionist_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
	</script>
	<?php

	$lookups = str_replace('__RAND__', $rnd1, ob_get_clean());


	// code for template based detail view forms

	// open the detail view template
	if($dvprint) {
		$template_file = is_file("./{$TemplateDVP}") ? "./{$TemplateDVP}" : './templates/service_templateDVP.html';
		$templateCode = @file_get_contents($template_file);
	} else {
		$template_file = is_file("./{$TemplateDV}") ? "./{$TemplateDV}" : './templates/service_templateDV.html';
		$templateCode = @file_get_contents($template_file);
	}

	// process form title
	$templateCode = str_replace('<%%DETAIL_VIEW_TITLE%%>', 'Service Schedule Details:', $templateCode);
	$templateCode = str_replace('<%%RND1%%>', $rnd1, $templateCode);
	$templateCode = str_replace('<%%EMBEDDED%%>', (Request::val('Embedded') ? 'Embedded=1' : ''), $templateCode);
	// process buttons
	if($arrPerm['insert'] && !$selected_id) { // allow insert and no record selected?
		if(!$selected_id) $templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-success" id="insert" name="insert_x" value="1" onclick="return service_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save New'] . '</button>', $templateCode);
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="insert" name="insert_x" value="1" onclick="return service_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save As Copy'] . '</button>', $templateCode);
	} else {
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '', $templateCode);
	}

	// 'Back' button action
	if(Request::val('Embedded')) {
		$backAction = 'AppGini.closeParentModal(); return false;';
	} else {
		$backAction = '$j(\'form\').eq(0).attr(\'novalidate\', \'novalidate\'); document.myform.reset(); return true;';
	}

	if($selected_id) {
		if(!Request::val('Embedded')) $templateCode = str_replace('<%%DVPRINT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="dvprint" name="dvprint_x" value="1" onclick="$j(\'form\').eq(0).prop(\'novalidate\', true); document.myform.reset(); return true;" title="' . html_attr($Translation['Print Preview']) . '"><i class="glyphicon glyphicon-print"></i> ' . $Translation['Print Preview'] . '</button>', $templateCode);
		if($AllowUpdate) {
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '<button type="submit" class="btn btn-success btn-lg" id="update" name="update_x" value="1" onclick="return service_validateData();" title="' . html_attr($Translation['Save Changes']) . '"><i class="glyphicon glyphicon-ok"></i> ' . $Translation['Save Changes'] . '</button>', $templateCode);
		} else {
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		}
		if(($arrPerm['delete'] == 1 && $ownerMemberID == getLoggedMemberID()) || ($arrPerm['delete'] == 2 && $ownerGroupID == getLoggedGroupID()) || $arrPerm['delete'] == 3) { // allow delete?
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '<button type="submit" class="btn btn-danger" id="delete" name="delete_x" value="1" onclick="return confirm(\'' . $Translation['are you sure?'] . '\');" title="' . html_attr($Translation['Delete']) . '"><i class="glyphicon glyphicon-trash"></i> ' . $Translation['Delete'] . '</button>', $templateCode);
		} else {
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		}
		$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>', $templateCode);
	} else {
		$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);

		// if not in embedded mode and user has insert only but no view/update/delete,
		// remove 'back' button
		if(
			$arrPerm['insert']
			&& !$arrPerm['update'] && !$arrPerm['delete'] && !$arrPerm['view']
			&& !Request::val('Embedded')
		)
			$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '', $templateCode);
		elseif($separateDV)
			$templateCode = str_replace(
				'<%%DESELECT_BUTTON%%>', 
				'<button
					type="submit" 
					class="btn btn-default" 
					id="deselect" 
					name="deselect_x" 
					value="1" 
					onclick="' . $backAction . '" 
					title="' . html_attr($Translation['Back']) . '">
						<i class="glyphicon glyphicon-chevron-left"></i> ' .
						$Translation['Back'] .
				'</button>',
				$templateCode
			);
		else
			$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '', $templateCode);
	}

	// set records to read only if user can't insert new records and can't edit current record
	if(($selected_id && !$AllowUpdate) || (!$selected_id && !$AllowInsert)) {
		$jsReadOnly = '';
		$jsReadOnly .= "\tjQuery('input[name=breakdown_of_vehicle]').parent().html('<div class=\"form-control-static\">' + jQuery('input[name=breakdown_of_vehicle]:checked').next().text() + '</div>')\n";
		$jsReadOnly .= "\tjQuery('#service_title').replaceWith('<div class=\"form-control-static\" id=\"service_title\">' + (jQuery('#service_title').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#service_item_type').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#service_item_type_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#service_category').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#service_category_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#merchant_name').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#merchant_name_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#vehicle_registration_number').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#vehicle_registration_number_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#dealer_name').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#dealer_name_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#closing_km').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#closing_km_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#work_allocation_reference_number').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#work_allocation_reference_number_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#service_item').replaceWith('<div class=\"form-control-static\" id=\"service_item\">' + (jQuery('#service_item').val() || '') + '</div>'); jQuery('#service_item-multi-selection-help').hide();\n";
		$jsReadOnly .= "\tjQuery('#s2id_service_item').remove();\n";
		$jsReadOnly .= "\tjQuery('#date_of_service').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#date_of_service_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#upload_quotation').replaceWith('<div class=\"form-control-static\" id=\"upload_quotation\">' + (jQuery('#upload_quotation').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#upload_quotation, #upload_quotation-edit-link').hide();\n";
		$jsReadOnly .= "\tjQuery('#date_of_next_service').prop('readonly', true);\n";
		$jsReadOnly .= "\tjQuery('#date_of_next_serviceDay, #date_of_next_serviceMonth, #date_of_next_serviceYear').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#repeat_service_schedule_every_km').replaceWith('<div class=\"form-control-static\" id=\"repeat_service_schedule_every_km\">' + (jQuery('#repeat_service_schedule_every_km').val() || '') + '</div>'); jQuery('#repeat_service_schedule_every_km-multi-selection-help').hide();\n";
		$jsReadOnly .= "\tjQuery('#s2id_repeat_service_schedule_every_km').remove();\n";
		$jsReadOnly .= "\tjQuery('#upload_invoice').replaceWith('<div class=\"form-control-static\" id=\"upload_invoice\">' + (jQuery('#upload_invoice').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#upload_invoice, #upload_invoice-edit-link').hide();\n";
		$jsReadOnly .= "\tjQuery('#receptionist').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#receptionist_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#technician').replaceWith('<div class=\"form-control-static\" id=\"technician\">' + (jQuery('#technician').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('input[name=work_order_status]').parent().html('<div class=\"form-control-static\">' + jQuery('input[name=work_order_status]:checked').next().text() + '</div>')\n";
		$jsReadOnly .= "\tjQuery('#completion_date').prop('readonly', true);\n";
		$jsReadOnly .= "\tjQuery('#completion_dateDay, #completion_dateMonth, #completion_dateYear').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#due_date').prop('readonly', true);\n";
		$jsReadOnly .= "\tjQuery('#due_dateDay, #due_dateMonth, #due_dateYear').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('.select2-container').hide();\n";

		$noUploads = true;
	} elseif(($AllowInsert && !$selected_id) || ($AllowUpdate && $selected_id)) {
		$jsEditable = "\tjQuery('form').eq(0).data('already_changed', true);"; // temporarily disable form change handler
		$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', false);"; // re-enable form change handler
	}

	// process combos
	$templateCode = str_replace('<%%COMBO(breakdown_of_vehicle)%%>', $combo_breakdown_of_vehicle->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(breakdown_of_vehicle)%%>', $combo_breakdown_of_vehicle->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(service_item_type)%%>', $combo_service_item_type->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(service_item_type)%%>', $combo_service_item_type->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(service_item_type)%%>', urlencode($combo_service_item_type->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(service_category)%%>', $combo_service_category->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(service_category)%%>', $combo_service_category->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(service_category)%%>', urlencode($combo_service_category->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(merchant_name)%%>', $combo_merchant_name->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(merchant_name)%%>', $combo_merchant_name->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(merchant_name)%%>', urlencode($combo_merchant_name->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(vehicle_registration_number)%%>', $combo_vehicle_registration_number->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(vehicle_registration_number)%%>', $combo_vehicle_registration_number->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(vehicle_registration_number)%%>', urlencode($combo_vehicle_registration_number->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(dealer_name)%%>', $combo_dealer_name->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(dealer_name)%%>', $combo_dealer_name->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(dealer_name)%%>', urlencode($combo_dealer_name->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(closing_km)%%>', $combo_closing_km->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(closing_km)%%>', $combo_closing_km->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(closing_km)%%>', urlencode($combo_closing_km->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(work_allocation_reference_number)%%>', $combo_work_allocation_reference_number->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(work_allocation_reference_number)%%>', $combo_work_allocation_reference_number->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(work_allocation_reference_number)%%>', urlencode($combo_work_allocation_reference_number->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(service_item)%%>', $combo_service_item->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(service_item)%%>', $combo_service_item->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(date_of_service)%%>', $combo_date_of_service->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(date_of_service)%%>', $combo_date_of_service->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(date_of_service)%%>', urlencode($combo_date_of_service->MatchText), $templateCode);
	$templateCode = str_replace(
		'<%%COMBO(date_of_next_service)%%>', 
		($selected_id && !$arrPerm['edit'] && ($noSaveAsCopy || !$arrPerm['insert']) ? 
			'<div class="form-control-static">' . $combo_date_of_next_service->GetHTML(true) . '</div>' : 
			$combo_date_of_next_service->GetHTML()
		), $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(date_of_next_service)%%>', $combo_date_of_next_service->GetHTML(true), $templateCode);
	$templateCode = str_replace('<%%COMBO(repeat_service_schedule_every_km)%%>', $combo_repeat_service_schedule_every_km->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(repeat_service_schedule_every_km)%%>', $combo_repeat_service_schedule_every_km->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(receptionist)%%>', $combo_receptionist->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(receptionist)%%>', $combo_receptionist->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(receptionist)%%>', urlencode($combo_receptionist->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(work_order_status)%%>', $combo_work_order_status->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(work_order_status)%%>', $combo_work_order_status->SelectedData, $templateCode);
	$templateCode = str_replace(
		'<%%COMBO(completion_date)%%>', 
		($selected_id && !$arrPerm['edit'] && ($noSaveAsCopy || !$arrPerm['insert']) ? 
			'<div class="form-control-static">' . $combo_completion_date->GetHTML(true) . '</div>' : 
			$combo_completion_date->GetHTML()
		), $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(completion_date)%%>', $combo_completion_date->GetHTML(true), $templateCode);
	$templateCode = str_replace(
		'<%%COMBO(due_date)%%>', 
		($selected_id && !$arrPerm['edit'] && ($noSaveAsCopy || !$arrPerm['insert']) ? 
			'<div class="form-control-static">' . $combo_due_date->GetHTML(true) . '</div>' : 
			$combo_due_date->GetHTML()
		), $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(due_date)%%>', $combo_due_date->GetHTML(true), $templateCode);

	/* lookup fields array: 'lookup field name' => ['parent table name', 'lookup field caption'] */
	$lookup_fields = ['service_item_type' => ['service_item_type', 'Service Item Type:'], 'service_category' => ['service_categories', 'Service Category:'], 'merchant_name' => ['merchant', 'Merchant Name:'], 'vehicle_registration_number' => ['gmt_fleet_register', 'Registration Number:'], 'dealer_name' => ['dealer', 'Make of Vehicle/Dealer Name:'], 'closing_km' => ['log_sheet', 'Odometer Reading (km):'], 'work_allocation_reference_number' => ['work_allocation', 'Work Allocation Reference Number:'], 'date_of_service' => ['schedule', 'Date of Service:'], 'receptionist' => ['reception', 'Information Capture By Receptionist (Name & Surname):'], ];
	foreach($lookup_fields as $luf => $ptfc) {
		$pt_perm = getTablePermissions($ptfc[0]);

		// process foreign key links
		if($pt_perm['view'] || $pt_perm['edit']) {
			$templateCode = str_replace("<%%PLINK({$luf})%%>", '<button type="button" class="btn btn-default view_parent" id="' . $ptfc[0] . '_view_parent" title="' . html_attr($Translation['View'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-eye-open"></i></button>', $templateCode);
		}

		// if user has insert permission to parent table of a lookup field, put an add new button
		if($pt_perm['insert'] /* && !Request::val('Embedded')*/) {
			$templateCode = str_replace("<%%ADDNEW({$ptfc[0]})%%>", '<button type="button" class="btn btn-default add_new_parent" id="' . $ptfc[0] . '_add_new" title="' . html_attr($Translation['Add New'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-plus text-success"></i></button>', $templateCode);
		}
	}

	// process images
	$templateCode = str_replace('<%%UPLOADFILE(service_id)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(breakdown_of_vehicle)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(service_title)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(service_item_type)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(service_category)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(merchant_name)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(vehicle_registration_number)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(dealer_name)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(closing_km)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(work_allocation_reference_number)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(service_item)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(date_of_service)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(upload_quotation)%%>', ($noUploads ? '' : "<div>{$Translation['upload image']}</div>" . '<i class="glyphicon glyphicon-remove text-danger clear-upload hidden"></i> <input type="file" name="upload_quotation" id="upload_quotation" data-filetypes="txt|doc|docx|docm|odt|pdf|rtf" data-maxsize="5242880" accept=".txt,.doc,.docx,.docm,.odt,.pdf,.rtf">'), $templateCode);
	if($AllowUpdate && $row['upload_quotation'] != '') {
		$templateCode = str_replace('<%%REMOVEFILE(upload_quotation)%%>', '<br><input type="checkbox" name="upload_quotation_remove" id="upload_quotation_remove" value="1"> <label for="upload_quotation_remove" style="color: red; font-weight: bold;">'.$Translation['remove image'].'</label>', $templateCode);
	} else {
		$templateCode = str_replace('<%%REMOVEFILE(upload_quotation)%%>', '', $templateCode);
	}
	$templateCode = str_replace('<%%UPLOADFILE(date_of_next_service)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(repeat_service_schedule_every_km)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(comments)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(upload_invoice)%%>', ($noUploads ? '' : "<div>{$Translation['upload image']}</div>" . '<i class="glyphicon glyphicon-remove text-danger clear-upload hidden"></i> <input type="file" name="upload_invoice" id="upload_invoice" data-filetypes="txt|doc|docx|docm|odt|pdf|rtf" data-maxsize="5242880" accept=".txt,.doc,.docx,.docm,.odt,.pdf,.rtf">'), $templateCode);
	if($AllowUpdate && $row['upload_invoice'] != '') {
		$templateCode = str_replace('<%%REMOVEFILE(upload_invoice)%%>', '<br><input type="checkbox" name="upload_invoice_remove" id="upload_invoice_remove" value="1"> <label for="upload_invoice_remove" style="color: red; font-weight: bold;">'.$Translation['remove image'].'</label>', $templateCode);
	} else {
		$templateCode = str_replace('<%%REMOVEFILE(upload_invoice)%%>', '', $templateCode);
	}
	$templateCode = str_replace('<%%UPLOADFILE(receptionist)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(workshop_address)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(technician)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(work_order_status)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(completion_date)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(due_date)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(filed)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(last_modified)%%>', '', $templateCode);

	// process values
	if($selected_id) {
		if( $dvprint) $templateCode = str_replace('<%%VALUE(service_id)%%>', safe_html($urow['service_id']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(service_id)%%>', html_attr($row['service_id']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(service_id)%%>', urlencode($urow['service_id']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(breakdown_of_vehicle)%%>', safe_html($urow['breakdown_of_vehicle']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(breakdown_of_vehicle)%%>', html_attr($row['breakdown_of_vehicle']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(breakdown_of_vehicle)%%>', urlencode($urow['breakdown_of_vehicle']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(service_title)%%>', safe_html($urow['service_title']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(service_title)%%>', html_attr($row['service_title']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(service_title)%%>', urlencode($urow['service_title']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(service_item_type)%%>', safe_html($urow['service_item_type']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(service_item_type)%%>', html_attr($row['service_item_type']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(service_item_type)%%>', urlencode($urow['service_item_type']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(service_category)%%>', safe_html($urow['service_category']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(service_category)%%>', html_attr($row['service_category']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(service_category)%%>', urlencode($urow['service_category']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(merchant_name)%%>', safe_html($urow['merchant_name']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(merchant_name)%%>', html_attr($row['merchant_name']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(merchant_name)%%>', urlencode($urow['merchant_name']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(vehicle_registration_number)%%>', safe_html($urow['vehicle_registration_number']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(vehicle_registration_number)%%>', html_attr($row['vehicle_registration_number']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(vehicle_registration_number)%%>', urlencode($urow['vehicle_registration_number']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(dealer_name)%%>', safe_html($urow['dealer_name']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(dealer_name)%%>', html_attr($row['dealer_name']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(dealer_name)%%>', urlencode($urow['dealer_name']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(closing_km)%%>', safe_html($urow['closing_km']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(closing_km)%%>', html_attr($row['closing_km']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(closing_km)%%>', urlencode($urow['closing_km']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(work_allocation_reference_number)%%>', safe_html($urow['work_allocation_reference_number']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(work_allocation_reference_number)%%>', html_attr($row['work_allocation_reference_number']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(work_allocation_reference_number)%%>', urlencode($urow['work_allocation_reference_number']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(service_item)%%>', safe_html($urow['service_item']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(service_item)%%>', html_attr($row['service_item']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(service_item)%%>', urlencode($urow['service_item']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(date_of_service)%%>', safe_html($urow['date_of_service']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(date_of_service)%%>', html_attr($row['date_of_service']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(date_of_service)%%>', urlencode($urow['date_of_service']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(upload_quotation)%%>', safe_html($urow['upload_quotation']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(upload_quotation)%%>', html_attr($row['upload_quotation']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(upload_quotation)%%>', urlencode($urow['upload_quotation']), $templateCode);
		$templateCode = str_replace('<%%VALUE(date_of_next_service)%%>', app_datetime($row['date_of_next_service']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(date_of_next_service)%%>', urlencode(app_datetime($urow['date_of_next_service'])), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(repeat_service_schedule_every_km)%%>', safe_html($urow['repeat_service_schedule_every_km']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(repeat_service_schedule_every_km)%%>', html_attr($row['repeat_service_schedule_every_km']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(repeat_service_schedule_every_km)%%>', urlencode($urow['repeat_service_schedule_every_km']), $templateCode);
		if($AllowUpdate || $AllowInsert) {
			$templateCode = str_replace('<%%HTMLAREA(comments)%%>', '<textarea name="comments" id="comments" rows="5">' . safe_html(htmlspecialchars_decode($row['comments'])) . '</textarea>', $templateCode);
		} else {
			$templateCode = str_replace('<%%HTMLAREA(comments)%%>', '<div id="comments" class="form-control-static">' . $row['comments'] . '</div>', $templateCode);
		}
		$templateCode = str_replace('<%%VALUE(comments)%%>', nl2br($row['comments']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(comments)%%>', urlencode($urow['comments']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(upload_invoice)%%>', safe_html($urow['upload_invoice']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(upload_invoice)%%>', html_attr($row['upload_invoice']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(upload_invoice)%%>', urlencode($urow['upload_invoice']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(receptionist)%%>', safe_html($urow['receptionist']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(receptionist)%%>', html_attr($row['receptionist']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(receptionist)%%>', urlencode($urow['receptionist']), $templateCode);
		if($AllowUpdate || $AllowInsert) {
			$templateCode = str_replace('<%%HTMLAREA(workshop_address)%%>', '<textarea name="workshop_address" id="workshop_address" rows="5">' . safe_html(htmlspecialchars_decode($row['workshop_address'])) . '</textarea>', $templateCode);
		} else {
			$templateCode = str_replace('<%%HTMLAREA(workshop_address)%%>', '<div id="workshop_address" class="form-control-static">' . $row['workshop_address'] . '</div>', $templateCode);
		}
		$templateCode = str_replace('<%%VALUE(workshop_address)%%>', nl2br($row['workshop_address']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(workshop_address)%%>', urlencode($urow['workshop_address']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(technician)%%>', safe_html($urow['technician']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(technician)%%>', html_attr($row['technician']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(technician)%%>', urlencode($urow['technician']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(work_order_status)%%>', safe_html($urow['work_order_status']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(work_order_status)%%>', html_attr($row['work_order_status']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(work_order_status)%%>', urlencode($urow['work_order_status']), $templateCode);
		$templateCode = str_replace('<%%VALUE(completion_date)%%>', app_datetime($row['completion_date']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(completion_date)%%>', urlencode(app_datetime($urow['completion_date'])), $templateCode);
		$templateCode = str_replace('<%%VALUE(due_date)%%>', app_datetime($row['due_date']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(due_date)%%>', urlencode(app_datetime($urow['due_date'])), $templateCode);
		$templateCode = str_replace('<%%VALUE(filed)%%>', safe_html($urow['filed']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(filed)%%>', urlencode($urow['filed']), $templateCode);
		$templateCode = str_replace('<%%VALUE(last_modified)%%>', safe_html($urow['last_modified']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(last_modified)%%>', urlencode($urow['last_modified']), $templateCode);
	} else {
		$templateCode = str_replace('<%%VALUE(service_id)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(service_id)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(breakdown_of_vehicle)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(breakdown_of_vehicle)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(service_title)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(service_title)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(service_item_type)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(service_item_type)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(service_category)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(service_category)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(merchant_name)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(merchant_name)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(vehicle_registration_number)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(vehicle_registration_number)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(dealer_name)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(dealer_name)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(closing_km)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(closing_km)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(work_allocation_reference_number)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(work_allocation_reference_number)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(service_item)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(service_item)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(date_of_service)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(date_of_service)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(upload_quotation)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(upload_quotation)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(date_of_next_service)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(date_of_next_service)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(repeat_service_schedule_every_km)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(repeat_service_schedule_every_km)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%HTMLAREA(comments)%%>', '<textarea name="comments" id="comments" rows="5"></textarea>', $templateCode);
		$templateCode = str_replace('<%%VALUE(upload_invoice)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(upload_invoice)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(receptionist)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(receptionist)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%HTMLAREA(workshop_address)%%>', '<textarea name="workshop_address" id="workshop_address" rows="5"></textarea>', $templateCode);
		$templateCode = str_replace('<%%VALUE(technician)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(technician)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(work_order_status)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(work_order_status)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(completion_date)%%>', '1', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(completion_date)%%>', urlencode('1'), $templateCode);
		$templateCode = str_replace('<%%VALUE(due_date)%%>', '1', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(due_date)%%>', urlencode('1'), $templateCode);
		$templateCode = str_replace('<%%VALUE(filed)%%>', '<%%creationDateTime%%>', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(filed)%%>', urlencode('<%%creationDateTime%%>'), $templateCode);
		$templateCode = str_replace('<%%VALUE(last_modified)%%>', '<%%editingDateTime%%>', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(last_modified)%%>', urlencode('<%%editingDateTime%%>'), $templateCode);
	}

	// process translations
	$templateCode = parseTemplate($templateCode);

	// clear scrap
	$templateCode = str_replace('<%%', '<!-- ', $templateCode);
	$templateCode = str_replace('%%>', ' -->', $templateCode);

	// hide links to inaccessible tables
	if(Request::val('dvprint_x') == '') {
		$templateCode .= "\n\n<script>\$j(function() {\n";
		$arrTables = getTableList();
		foreach($arrTables as $name => $caption) {
			$templateCode .= "\t\$j('#{$name}_link').removeClass('hidden');\n";
			$templateCode .= "\t\$j('#xs_{$name}_link').removeClass('hidden');\n";
		}

		$templateCode .= $jsReadOnly;
		$templateCode .= $jsEditable;

		if(!$selected_id) {
			$templateCode.="\n\tif(document.getElementById('upload_quotationEdit')) { document.getElementById('upload_quotationEdit').style.display='inline'; }";
			$templateCode.="\n\tif(document.getElementById('upload_quotationEditLink')) { document.getElementById('upload_quotationEditLink').style.display='none'; }";
			$templateCode.="\n\tif(document.getElementById('upload_invoiceEdit')) { document.getElementById('upload_invoiceEdit').style.display='inline'; }";
			$templateCode.="\n\tif(document.getElementById('upload_invoiceEditLink')) { document.getElementById('upload_invoiceEditLink').style.display='none'; }";
		}

		$templateCode.="\n});</script>\n";
	}

	// ajaxed auto-fill fields
	$templateCode .= '<script>';
	$templateCode .= '$j(function() {';

	$templateCode .= "\tvehicle_registration_number_update_autofills$rnd1 = function() {\n";
	$templateCode .= "\t\t\$j.ajax({\n";
	if($dvprint) {
		$templateCode .= "\t\t\turl: 'service_autofill.php?rnd1=$rnd1&mfk=vehicle_registration_number&id=' + encodeURIComponent('".addslashes($row['vehicle_registration_number'])."'),\n";
		$templateCode .= "\t\t\tcontentType: 'application/x-www-form-urlencoded; charset=" . datalist_db_encoding . "',\n";
		$templateCode .= "\t\t\ttype: 'GET'\n";
	} else {
		$templateCode .= "\t\t\turl: 'service_autofill.php?rnd1=$rnd1&mfk=vehicle_registration_number&id=' + encodeURIComponent(AppGini.current_vehicle_registration_number{$rnd1}.value),\n";
		$templateCode .= "\t\t\tcontentType: 'application/x-www-form-urlencoded; charset=" . datalist_db_encoding . "',\n";
		$templateCode .= "\t\t\ttype: 'GET',\n";
		$templateCode .= "\t\t\tbeforeSend: function() { \$j('#vehicle_registration_number$rnd1').prop('disabled', true); },\n";
		$templateCode .= "\t\t\tcomplete: function() { " . (($arrPerm['insert'] || (($arrPerm['edit'] == 1 && $ownerMemberID == getLoggedMemberID()) || ($arrPerm['edit'] == 2 && $ownerGroupID == getLoggedGroupID()) || $arrPerm['edit'] == 3)) ? "\$j('#vehicle_registration_number$rnd1').prop('disabled', false); " : "\$j('#vehicle_registration_number$rnd1').prop('disabled', true); ")." \$j(window).resize(); }\n";
	}
	$templateCode .= "\t\t});\n";
	$templateCode .= "\t};\n";
	if(!$dvprint) $templateCode .= "\tif(\$j('#vehicle_registration_number_caption').length) \$j('#vehicle_registration_number_caption').click(function() { vehicle_registration_number_update_autofills$rnd1(); });\n";

	$templateCode .= "\tdealer_name_update_autofills$rnd1 = function() {\n";
	$templateCode .= "\t\t\$j.ajax({\n";
	if($dvprint) {
		$templateCode .= "\t\t\turl: 'service_autofill.php?rnd1=$rnd1&mfk=dealer_name&id=' + encodeURIComponent('".addslashes($row['dealer_name'])."'),\n";
		$templateCode .= "\t\t\tcontentType: 'application/x-www-form-urlencoded; charset=" . datalist_db_encoding . "',\n";
		$templateCode .= "\t\t\ttype: 'GET'\n";
	} else {
		$templateCode .= "\t\t\turl: 'service_autofill.php?rnd1=$rnd1&mfk=dealer_name&id=' + encodeURIComponent(AppGini.current_dealer_name{$rnd1}.value),\n";
		$templateCode .= "\t\t\tcontentType: 'application/x-www-form-urlencoded; charset=" . datalist_db_encoding . "',\n";
		$templateCode .= "\t\t\ttype: 'GET',\n";
		$templateCode .= "\t\t\tbeforeSend: function() { \$j('#dealer_name$rnd1').prop('disabled', true); },\n";
		$templateCode .= "\t\t\tcomplete: function() { " . (($arrPerm['insert'] || (($arrPerm['edit'] == 1 && $ownerMemberID == getLoggedMemberID()) || ($arrPerm['edit'] == 2 && $ownerGroupID == getLoggedGroupID()) || $arrPerm['edit'] == 3)) ? "\$j('#dealer_name$rnd1').prop('disabled', false); " : "\$j('#dealer_name$rnd1').prop('disabled', true); ")." \$j(window).resize(); }\n";
	}
	$templateCode .= "\t\t});\n";
	$templateCode .= "\t};\n";
	if(!$dvprint) $templateCode .= "\tif(\$j('#dealer_name_caption').length) \$j('#dealer_name_caption').click(function() { dealer_name_update_autofills$rnd1(); });\n";

	$templateCode .= "\tdate_of_service_update_autofills$rnd1 = function() {\n";
	$templateCode .= "\t\t\$j.ajax({\n";
	if($dvprint) {
		$templateCode .= "\t\t\turl: 'service_autofill.php?rnd1=$rnd1&mfk=date_of_service&id=' + encodeURIComponent('".addslashes($row['date_of_service'])."'),\n";
		$templateCode .= "\t\t\tcontentType: 'application/x-www-form-urlencoded; charset=" . datalist_db_encoding . "',\n";
		$templateCode .= "\t\t\ttype: 'GET'\n";
	} else {
		$templateCode .= "\t\t\turl: 'service_autofill.php?rnd1=$rnd1&mfk=date_of_service&id=' + encodeURIComponent(AppGini.current_date_of_service{$rnd1}.value),\n";
		$templateCode .= "\t\t\tcontentType: 'application/x-www-form-urlencoded; charset=" . datalist_db_encoding . "',\n";
		$templateCode .= "\t\t\ttype: 'GET',\n";
		$templateCode .= "\t\t\tbeforeSend: function() { \$j('#date_of_service$rnd1').prop('disabled', true); },\n";
		$templateCode .= "\t\t\tcomplete: function() { " . (($arrPerm['insert'] || (($arrPerm['edit'] == 1 && $ownerMemberID == getLoggedMemberID()) || ($arrPerm['edit'] == 2 && $ownerGroupID == getLoggedGroupID()) || $arrPerm['edit'] == 3)) ? "\$j('#date_of_service$rnd1').prop('disabled', false); " : "\$j('#date_of_service$rnd1').prop('disabled', true); ")." \$j(window).resize(); }\n";
	}
	$templateCode .= "\t\t});\n";
	$templateCode .= "\t};\n";
	if(!$dvprint) $templateCode .= "\tif(\$j('#date_of_service_caption').length) \$j('#date_of_service_caption').click(function() { date_of_service_update_autofills$rnd1(); });\n";

	$templateCode .= "\treceptionist_update_autofills$rnd1 = function() {\n";
	$templateCode .= "\t\t\$j.ajax({\n";
	if($dvprint) {
		$templateCode .= "\t\t\turl: 'service_autofill.php?rnd1=$rnd1&mfk=receptionist&id=' + encodeURIComponent('".addslashes($row['receptionist'])."'),\n";
		$templateCode .= "\t\t\tcontentType: 'application/x-www-form-urlencoded; charset=" . datalist_db_encoding . "',\n";
		$templateCode .= "\t\t\ttype: 'GET'\n";
	} else {
		$templateCode .= "\t\t\turl: 'service_autofill.php?rnd1=$rnd1&mfk=receptionist&id=' + encodeURIComponent(AppGini.current_receptionist{$rnd1}.value),\n";
		$templateCode .= "\t\t\tcontentType: 'application/x-www-form-urlencoded; charset=" . datalist_db_encoding . "',\n";
		$templateCode .= "\t\t\ttype: 'GET',\n";
		$templateCode .= "\t\t\tbeforeSend: function() { \$j('#receptionist$rnd1').prop('disabled', true); },\n";
		$templateCode .= "\t\t\tcomplete: function() { " . (($arrPerm['insert'] || (($arrPerm['edit'] == 1 && $ownerMemberID == getLoggedMemberID()) || ($arrPerm['edit'] == 2 && $ownerGroupID == getLoggedGroupID()) || $arrPerm['edit'] == 3)) ? "\$j('#receptionist$rnd1').prop('disabled', false); " : "\$j('#receptionist$rnd1').prop('disabled', true); ")." \$j(window).resize(); }\n";
	}
	$templateCode .= "\t\t});\n";
	$templateCode .= "\t};\n";
	if(!$dvprint) $templateCode .= "\tif(\$j('#receptionist_caption').length) \$j('#receptionist_caption').click(function() { receptionist_update_autofills$rnd1(); });\n";


	$templateCode.="});";
	$templateCode.="</script>";
	$templateCode .= $lookups;

	// handle enforced parent values for read-only lookup fields
	$filterField = Request::val('FilterField');
	$filterOperator = Request::val('FilterOperator');
	$filterValue = Request::val('FilterValue');

	// don't include blank images in lightbox gallery
	$templateCode = preg_replace('/blank.gif" data-lightbox=".*?"/', 'blank.gif"', $templateCode);

	// don't display empty email links
	$templateCode=preg_replace('/<a .*?href="mailto:".*?<\/a>/', '', $templateCode);

	/* default field values */
	$rdata = $jdata = get_defaults('service');
	if($selected_id) {
		$jdata = get_joined_record('service', $selected_id);
		if($jdata === false) $jdata = get_defaults('service');
		$rdata = $row;
	}
	$templateCode .= loadView('service-ajax-cache', ['rdata' => $rdata, 'jdata' => $jdata]);

	// hook: service_dv
	if(function_exists('service_dv')) {
		$args = [];
		service_dv(($selected_id ? $selected_id : FALSE), getMemberInfo(), $templateCode, $args);
	}

	return $templateCode;
}