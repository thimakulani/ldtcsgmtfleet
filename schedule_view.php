<?php
// This script and data application were generated by AppGini 22.13
// Download AppGini for free from https://bigprof.com/appgini/download/

	include_once(__DIR__ . '/lib.php');
	@include_once(__DIR__ . '/hooks/schedule.php');
	include_once(__DIR__ . '/schedule_dml.php');

	// mm: can the current member access this page?
	$perm = getTablePermissions('schedule');
	if(!$perm['access']) {
		echo error_message($Translation['tableAccessDenied']);
		exit;
	}

	$x = new DataList;
	$x->TableName = 'schedule';

	// Fields that can be displayed in the table view
	$x->QueryFieldsTV = [
		"`schedule`.`schedule_id`" => "schedule_id",
		"`schedule`.`title`" => "title",
		"IF(    CHAR_LENGTH(`gmt_fleet_register1`.`user_name_and_surname`), CONCAT_WS('',   `gmt_fleet_register1`.`user_name_and_surname`), '') /* Owner of Vehicle Name & Surname: */" => "user_name_and_surname",
		"IF(    CHAR_LENGTH(`gmt_fleet_register1`.`user_contact_email`), CONCAT_WS('',   `gmt_fleet_register1`.`user_contact_email`), '') /* User contact email */" => "user_contact_email",
		"IF(    CHAR_LENGTH(`service_item_type1`.`service_item_type`), CONCAT_WS('',   `service_item_type1`.`service_item_type`, '  '), '') /* Service Item Type: */" => "service_item_type",
		"IF(    CHAR_LENGTH(`service_item_type1`.`service_item_type_code`), CONCAT_WS('',   `service_item_type1`.`service_item_type_code`), '') /* Service Item Type Code: */" => "service_item_type_code",
		"`schedule`.`application_status`" => "application_status",
		"IF(    CHAR_LENGTH(`gmt_fleet_register2`.`vehicle_registration_number`), CONCAT_WS('',   `gmt_fleet_register2`.`vehicle_registration_number`), '') /* Vehicle Registration Number: */" => "vehicle_registration_number",
		"IF(    CHAR_LENGTH(`gmt_fleet_register1`.`engine_number`), CONCAT_WS('',   `gmt_fleet_register1`.`engine_number`), '') /* Engine Number: */" => "engine_number",
		"IF(    CHAR_LENGTH(`log_sheet1`.`closing_km`), CONCAT_WS('',   `log_sheet1`.`closing_km`, ' '), '') /* Odometer Reading (km): */" => "closing_km",
		"if(`schedule`.`date`,date_format(`schedule`.`date`,'%d/%m/%Y'),'')" => "date",
		"`schedule`.`time`" => "time",
		"IF(    CHAR_LENGTH(`districts1`.`station`) || CHAR_LENGTH(`districts1`.`district`), CONCAT_WS('',   `districts1`.`station`, '      |     and      |     ', `districts1`.`district`), '') /* Workshop Name: */" => "workshop_name",
		"`schedule`.`diagnosis`" => "diagnosis",
		"`schedule`.`prescription`" => "prescription",
		"`schedule`.`comments`" => "comments",
	];
	// mapping incoming sort by requests to actual query fields
	$x->SortFields = [
		1 => '`schedule`.`schedule_id`',
		2 => 2,
		3 => '`gmt_fleet_register1`.`user_name_and_surname`',
		4 => '`gmt_fleet_register1`.`user_contact_email`',
		5 => 5,
		6 => '`service_item_type1`.`service_item_type_code`',
		7 => 7,
		8 => '`gmt_fleet_register2`.`vehicle_registration_number`',
		9 => '`gmt_fleet_register1`.`engine_number`',
		10 => 10,
		11 => '`schedule`.`date`',
		12 => '`schedule`.`time`',
		13 => 13,
		14 => 14,
		15 => 15,
		16 => 16,
	];

	// Fields that can be displayed in the csv file
	$x->QueryFieldsCSV = [
		"`schedule`.`schedule_id`" => "schedule_id",
		"`schedule`.`title`" => "title",
		"IF(    CHAR_LENGTH(`gmt_fleet_register1`.`user_name_and_surname`), CONCAT_WS('',   `gmt_fleet_register1`.`user_name_and_surname`), '') /* Owner of Vehicle Name & Surname: */" => "user_name_and_surname",
		"IF(    CHAR_LENGTH(`gmt_fleet_register1`.`user_contact_email`), CONCAT_WS('',   `gmt_fleet_register1`.`user_contact_email`), '') /* User contact email */" => "user_contact_email",
		"IF(    CHAR_LENGTH(`service_item_type1`.`service_item_type`), CONCAT_WS('',   `service_item_type1`.`service_item_type`, '  '), '') /* Service Item Type: */" => "service_item_type",
		"IF(    CHAR_LENGTH(`service_item_type1`.`service_item_type_code`), CONCAT_WS('',   `service_item_type1`.`service_item_type_code`), '') /* Service Item Type Code: */" => "service_item_type_code",
		"`schedule`.`application_status`" => "application_status",
		"IF(    CHAR_LENGTH(`gmt_fleet_register2`.`vehicle_registration_number`), CONCAT_WS('',   `gmt_fleet_register2`.`vehicle_registration_number`), '') /* Vehicle Registration Number: */" => "vehicle_registration_number",
		"IF(    CHAR_LENGTH(`gmt_fleet_register1`.`engine_number`), CONCAT_WS('',   `gmt_fleet_register1`.`engine_number`), '') /* Engine Number: */" => "engine_number",
		"IF(    CHAR_LENGTH(`log_sheet1`.`closing_km`), CONCAT_WS('',   `log_sheet1`.`closing_km`, ' '), '') /* Odometer Reading (km): */" => "closing_km",
		"if(`schedule`.`date`,date_format(`schedule`.`date`,'%d/%m/%Y'),'')" => "date",
		"`schedule`.`time`" => "time",
		"IF(    CHAR_LENGTH(`districts1`.`station`) || CHAR_LENGTH(`districts1`.`district`), CONCAT_WS('',   `districts1`.`station`, '      |     and      |     ', `districts1`.`district`), '') /* Workshop Name: */" => "workshop_name",
		"`schedule`.`diagnosis`" => "diagnosis",
		"`schedule`.`prescription`" => "prescription",
		"`schedule`.`comments`" => "comments",
	];
	// Fields that can be filtered
	$x->QueryFieldsFilters = [
		"`schedule`.`schedule_id`" => "Schedule ID:",
		"`schedule`.`title`" => "Appointment Type:",
		"IF(    CHAR_LENGTH(`gmt_fleet_register1`.`user_name_and_surname`), CONCAT_WS('',   `gmt_fleet_register1`.`user_name_and_surname`), '') /* Owner of Vehicle Name & Surname: */" => "Owner of Vehicle Name & Surname:",
		"IF(    CHAR_LENGTH(`gmt_fleet_register1`.`user_contact_email`), CONCAT_WS('',   `gmt_fleet_register1`.`user_contact_email`), '') /* User contact email */" => "User contact email",
		"IF(    CHAR_LENGTH(`service_item_type1`.`service_item_type`), CONCAT_WS('',   `service_item_type1`.`service_item_type`, '  '), '') /* Service Item Type: */" => "Service Item Type:",
		"IF(    CHAR_LENGTH(`service_item_type1`.`service_item_type_code`), CONCAT_WS('',   `service_item_type1`.`service_item_type_code`), '') /* Service Item Type Code: */" => "Service Item Type Code:",
		"`schedule`.`application_status`" => "Application Status:",
		"IF(    CHAR_LENGTH(`gmt_fleet_register2`.`vehicle_registration_number`), CONCAT_WS('',   `gmt_fleet_register2`.`vehicle_registration_number`), '') /* Vehicle Registration Number: */" => "Vehicle Registration Number:",
		"IF(    CHAR_LENGTH(`gmt_fleet_register1`.`engine_number`), CONCAT_WS('',   `gmt_fleet_register1`.`engine_number`), '') /* Engine Number: */" => "Engine Number:",
		"IF(    CHAR_LENGTH(`log_sheet1`.`closing_km`), CONCAT_WS('',   `log_sheet1`.`closing_km`, ' '), '') /* Odometer Reading (km): */" => "Odometer Reading (km):",
		"`schedule`.`date`" => "Date:",
		"`schedule`.`time`" => "Time:",
		"IF(    CHAR_LENGTH(`districts1`.`station`) || CHAR_LENGTH(`districts1`.`district`), CONCAT_WS('',   `districts1`.`station`, '      |     and      |     ', `districts1`.`district`), '') /* Workshop Name: */" => "Workshop Name:",
		"`schedule`.`diagnosis`" => "Diagnosis:",
		"`schedule`.`prescription`" => "Solution:",
		"`schedule`.`comments`" => "Comments:",
	];

	// Fields that can be quick searched
	$x->QueryFieldsQS = [
		"`schedule`.`schedule_id`" => "schedule_id",
		"`schedule`.`title`" => "title",
		"IF(    CHAR_LENGTH(`gmt_fleet_register1`.`user_name_and_surname`), CONCAT_WS('',   `gmt_fleet_register1`.`user_name_and_surname`), '') /* Owner of Vehicle Name & Surname: */" => "user_name_and_surname",
		"IF(    CHAR_LENGTH(`gmt_fleet_register1`.`user_contact_email`), CONCAT_WS('',   `gmt_fleet_register1`.`user_contact_email`), '') /* User contact email */" => "user_contact_email",
		"IF(    CHAR_LENGTH(`service_item_type1`.`service_item_type`), CONCAT_WS('',   `service_item_type1`.`service_item_type`, '  '), '') /* Service Item Type: */" => "service_item_type",
		"IF(    CHAR_LENGTH(`service_item_type1`.`service_item_type_code`), CONCAT_WS('',   `service_item_type1`.`service_item_type_code`), '') /* Service Item Type Code: */" => "service_item_type_code",
		"`schedule`.`application_status`" => "application_status",
		"IF(    CHAR_LENGTH(`gmt_fleet_register2`.`vehicle_registration_number`), CONCAT_WS('',   `gmt_fleet_register2`.`vehicle_registration_number`), '') /* Vehicle Registration Number: */" => "vehicle_registration_number",
		"IF(    CHAR_LENGTH(`gmt_fleet_register1`.`engine_number`), CONCAT_WS('',   `gmt_fleet_register1`.`engine_number`), '') /* Engine Number: */" => "engine_number",
		"IF(    CHAR_LENGTH(`log_sheet1`.`closing_km`), CONCAT_WS('',   `log_sheet1`.`closing_km`, ' '), '') /* Odometer Reading (km): */" => "closing_km",
		"if(`schedule`.`date`,date_format(`schedule`.`date`,'%d/%m/%Y'),'')" => "date",
		"`schedule`.`time`" => "time",
		"IF(    CHAR_LENGTH(`districts1`.`station`) || CHAR_LENGTH(`districts1`.`district`), CONCAT_WS('',   `districts1`.`station`, '      |     and      |     ', `districts1`.`district`), '') /* Workshop Name: */" => "workshop_name",
		"`schedule`.`diagnosis`" => "diagnosis",
		"`schedule`.`prescription`" => "prescription",
		"`schedule`.`comments`" => "comments",
	];

	// Lookup fields that can be used as filterers
	$x->filterers = ['user_name_and_surname' => 'Owner of Vehicle Name & Surname:', 'service_item_type' => 'Service Item Type:', 'vehicle_registration_number' => 'Vehicle Registration Number:', 'closing_km' => 'Odometer Reading (km):', 'workshop_name' => 'Workshop Name:', ];

	$x->QueryFrom = "`schedule` LEFT JOIN `gmt_fleet_register` as gmt_fleet_register1 ON `gmt_fleet_register1`.`fleet_asset_id`=`schedule`.`user_name_and_surname` LEFT JOIN `service_item_type` as service_item_type1 ON `service_item_type1`.`service_item_type_id`=`schedule`.`service_item_type` LEFT JOIN `gmt_fleet_register` as gmt_fleet_register2 ON `gmt_fleet_register2`.`fleet_asset_id`=`schedule`.`vehicle_registration_number` LEFT JOIN `log_sheet` as log_sheet1 ON `log_sheet1`.`fuel_log_sheet_id`=`schedule`.`closing_km` LEFT JOIN `districts` as districts1 ON `districts1`.`district_id`=`schedule`.`workshop_name` ";
	$x->QueryWhere = '';
	$x->QueryOrder = '';

	$x->AllowSelection = 1;
	$x->HideTableView = ($perm['view'] == 0 ? 1 : 0);
	$x->AllowDelete = $perm['delete'];
	$x->AllowMassDelete = (getLoggedAdmin() !== false);
	$x->AllowInsert = $perm['insert'];
	$x->AllowUpdate = $perm['edit'];
	$x->SeparateDV = 1;
	$x->AllowDeleteOfParents = 0;
	$x->AllowFilters = 1;
	$x->AllowSavingFilters = (getLoggedAdmin() !== false);
	$x->AllowSorting = 1;
	$x->AllowNavigation = 1;
	$x->AllowPrinting = 1;
	$x->AllowPrintingDV = 1;
	$x->AllowCSV = 1;
	$x->RecordsPerPage = 25;
	$x->QuickSearch = 1;
	$x->QuickSearchText = $Translation['quick search'];
	$x->ScriptFileName = 'schedule_view.php';
	$x->RedirectAfterInsert = 'schedule_view.php?SelectedID=#ID#';
	$x->TableTitle = 'Schedule:';
	$x->TableIcon = 'resources/table_icons/schedule.png';
	$x->PrimaryKey = '`schedule`.`schedule_id`';

	$x->ColWidth = [150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, ];
	$x->ColCaption = ['Schedule ID:', 'Appointment Type:', 'Owner of Vehicle Name & Surname:', 'User contact email', 'Service Item Type:', 'Service Item Type Code:', 'Application Status:', 'Vehicle Registration Number:', 'Engine Number:', 'Odometer Reading (km):', 'Date:', 'Time:', 'Workshop Name:', 'Diagnosis:', 'Solution:', 'Comments:', ];
	$x->ColFieldName = ['schedule_id', 'title', 'user_name_and_surname', 'user_contact_email', 'service_item_type', 'service_item_type_code', 'application_status', 'vehicle_registration_number', 'engine_number', 'closing_km', 'date', 'time', 'workshop_name', 'diagnosis', 'prescription', 'comments', ];
	$x->ColNumber  = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, ];

	// template paths below are based on the app main directory
	$x->Template = 'templates/schedule_templateTV.html';
	$x->SelectedTemplate = 'templates/schedule_templateTVS.html';
	$x->TemplateDV = 'templates/schedule_templateDV.html';
	$x->TemplateDVP = 'templates/schedule_templateDVP.html';

	$x->ShowTableHeader = 1;
	$x->TVClasses = "";
	$x->DVClasses = "";
	$x->HasCalculatedFields = false;
	$x->AllowConsoleLog = false;
	$x->AllowDVNavigation = true;

	// hook: schedule_init
	$render = true;
	if(function_exists('schedule_init')) {
		$args = [];
		$render = schedule_init($x, getMemberInfo(), $args);
	}

	if($render) $x->Render();

	// hook: schedule_header
	$headerCode = '';
	if(function_exists('schedule_header')) {
		$args = [];
		$headerCode = schedule_header($x->ContentType, getMemberInfo(), $args);
	}

	if(!$headerCode) {
		include_once(__DIR__ . '/header.php'); 
	} else {
		ob_start();
		include_once(__DIR__ . '/header.php');
		echo str_replace('<%%HEADER%%>', ob_get_clean(), $headerCode);
	}

	echo $x->HTML;

	// hook: schedule_footer
	$footerCode = '';
	if(function_exists('schedule_footer')) {
		$args = [];
		$footerCode = schedule_footer($x->ContentType, getMemberInfo(), $args);
	}

	if(!$footerCode) {
		include_once(__DIR__ . '/footer.php'); 
	} else {
		ob_start();
		include_once(__DIR__ . '/footer.php');
		echo str_replace('<%%FOOTER%%>', ob_get_clean(), $footerCode);
	}
